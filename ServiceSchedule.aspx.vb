Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports Microsoft.VisualBasic
Imports System
Imports System.Collections
Imports System.ComponentModel
Imports System.Drawing
Imports System.Reflection
Imports System.Data.SqlClient
Imports System.Threading
Imports System.Globalization
Imports System.Net
Imports System.ServiceProcess


Public Class ServiceSchedule
    Inherits System.Web.UI.Page
    ' Dim cls As New clsDBAccess()
    Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    Dim client As String

    'CHECK ALL THE INPUT FIELDS ARE VALIDATED AND ALL INPUT PARAMETERS ARE GIVEN IN INSERT COMMAND
    Private Shared prevPage1 As String = String.Empty
    Public TotDetailRecords As Integer
    Dim gFreqMTD As String
    Dim gSeq As String
    Dim gServiceDate As Date
    Dim gdayofWeek As String
    Dim gdayofWeek1 As String
    Dim gServiceDatestr As String
    Dim gTargetDesc, gServiceId As String

    Dim rowdeleted As Boolean
    Dim RowNumber As Integer
    Dim RowIndexSch As Integer
    Dim gFreq As String
    Dim gtargetID_SR As String
    Dim gActive As String
    Dim gtargetID As String
    Dim gLocationID As String
    Dim gServiceName As String
    Dim gServiceAddress As String
    Dim gLocateGRP As String
    Dim gMaxServiceDate As Date
    Dim gproductService, gserviceValue As String, gSQLID, gSQLFreq As Decimal
    Dim gServiceLocationGroup As String
    Dim gSalesman As String
    Dim tot As Decimal

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        Try
            '  Server.ScriptTimeout = "600"

            'Restrict users manual date entries



            btnGenerateServiceSchedule.Attributes.Add("onclick", "btn_disable()")
            btnGenerateServiceSchedule.Attributes.Add("onclick", ClientScript.GetPostBackEventReference(btnGenerateServiceSchedule, "") + ";;this.disabled = true")

            btnServiceSchedule.Attributes.Add("onclick", "btn_disable1()")
            btnServiceSchedule.Attributes.Add("onclick", ClientScript.GetPostBackEventReference(btnServiceSchedule, "") + ";;this.disabled = true")

            'btnTop.Attributes.Add("onclick", "javascript:scroll(0,0);return false;")

            btnTop.Attributes.Add("onclick", "<script> ResetScrollPosition();</Script>")

            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            If Not Page.IsPostBack Then
                prevPage1 = Request.UrlReferrer.ToString()

                btnServiceSchedule.Enabled = False

                txtnormalorregenerateschedule.Text = Session("normalorregenerateschedule")

                txtContractNo.Attributes.Add("readonly", "readonly")
                txtContractDate.Attributes.Add("readonly", "readonly")
                txtContactType.Attributes.Add("readonly", "readonly")
                txtClient.Attributes.Add("readonly", "readonly")
                txtCustName.Attributes.Add("readonly", "readonly")
                txtContact.Attributes.Add("readonly", "readonly")
                txtServStart.Attributes.Add("readonly", "readonly")
                txtServEnd.Attributes.Add("readonly", "readonly")
                'txtFrom.Attributes.Add("readonly", "readonly")
                txtTo.Attributes.Add("readonly", "readonly")
                txtAccountId.Attributes.Add("readonly", "readonly")

                txtTechnician.Attributes.Add("readonly", "readonly")
                txtTimeIn.Attributes.Add("readonly", "readonly")
                txtTimeOut.Attributes.Add("readonly", "readonly")
                txtAgreeValue.Attributes.Add("readonly", "readonly")
                txtValPerMnth.Attributes.Add("readonly", "readonly")
                txtComputationMethod1.Attributes.Add("readonly", "readonly")

                txtFixedContinuous.Attributes.Add("readonly", "readonly")
                txtServiceAddress.Attributes.Add("readonly", "readonly")

                txtAgreementType.Attributes.Add("readonly", "readonly")

                txtTotalServiceValue.Attributes.Add("readonly", "readonly")
                txtTotalRecords.Attributes.Add("readonly", "readonly")

                If String.IsNullOrEmpty(Session("serviceschedulefrom")) = False Then
                    txtFromForm.Text = Session("serviceschedulefrom")
                End If

                txtComputationMethod.Text = Session("computationmethod")

                If txtComputationMethod.Text = "0" Then
                    txtComputationMethod1.Text = "Fixed Contract Value"
                Else
                    txtComputationMethod1.Text = "Monthly"
                End If

                'txtComputationMethod.Text = Session("computationmethod")
                txtComputationMethod.Text = txtComputationMethod1.Text

                Session("serviceschedulefrom") = ""
                Session("computationmethod") = ""

                txtContractNo.Text = Session("contractno")
                txtContractDate.Text = Session("contractdate")
                txtContactType.Text = Session("contracttype")
                txtClient.Text = Session("client")
                txtCustName.Text = Session("custname")
                txtContact.Text = Session("contact")
                txtServStart.Text = Session("servstart")
                txtServEnd.Text = Session("servend")
                txtBillingFreq.Text = Session("billingfreq")
                txtBillingAmount.Text = Session("billingamount")
                '''''''''''''''''''''''''''''''''''''''''''
                'txtBillingAmount.Text = System.Net.Dns.GetHostEntry(Request.UserHostAddress).HostName
                'txtBillingAmount.Text = System.Net.Dns.GetHostName()
                'txtBillingAmount.Text = System.Net.Dns.GetHostName() & " " & System.Environment.MachineName
                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                txtAgreeValue.Text = Session("agreevalue")
                txtAccountId.Text = Session("accountid")
                txtValPerMnth.Text = Session("ValPerMnth")

                txtTechnician.Text = Session("technician")
                txtTimeIn.Text = Session("timein")
                txtTimeOut.Text = Session("timeout")
                txtFixedContinuous.Text = Session("fixedcontinuous")
                txtTotServiceRec.Text = Session("totservicerec")

                txtDuration.Text = Session("duration")
                txtDurationMs.Text = Session("durationms")
                txtServiceAddress.Text = Session("serviceaddress")
                txtAgreementType.Text = Session("agreementtype")

                If txtFixedContinuous.Text = "FIXED" Then
                    txtMonths.Attributes.Add("disabled", "true")
                    txtFrom.Attributes.Add("readonly", "readonly")

                ElseIf txtFixedContinuous.Text = "CONTINUOUS" Then
                    txtFrom.BackColor = Color.White
                End If



                '23.08.21

                txtIndustrySession.Text = Session("industry")
                txtMarketSegmentSession.Text = Session("marketsegmentidsvc")
                txtContractGroupSession.Text = Session("contractgroup")
                txtCompanyGroupSession.Text = Session("companygroup")
                txtSalesmanSession.Text = Session("salesman")

                txtbilladdress1session.Text = Session("billaddress1")
                txtbillstreetsession.Text = Session("billstreet")
                txtbillbuildingsession.Text = Session("billbuilding")
                txtbillcountrysession.Text = Session("billcountry")
                txtbillpostalsession.Text = Session("billpostal")
                txtendoflastschedule.Text = Session("endoflastschedule")


                'txtCustName.Text = Session("custname")
                Session("contactperson") = txtContactPersonsession.Text
                Session("conpermobile") = txtConPerMobilesession.Text
                Session("acctcode") = txtAccCodesession.Text
                Session("telephone") = txtTelephonesession.Text
                Session("fax") = txtFaxsession.Text
                Session("offpostal") = txtPostalsession.Text
                Session("sevaddress") = txtOfficeAddresssession.Text
                Session("locategrp") = ddlLocateGrpsession.Text
                Session("salesman") = ddlSalesmansession.Text
                Session("location") = txtLocationSession.Text


                Session.Remove("industry")
                Session.Remove("marketsegmentidsvc")
                Session.Remove("contractgroup")
                Session.Remove("companygroup")
                Session.Remove("salesman")
                Session.Remove("billaddress1")
                Session.Remove("billstreet")
                Session.Remove("billbuilding")
                Session.Remove("billcountry")
                Session.Remove("billpostal")

                Session.Remove("contactperson")
                Session.Remove("conpermobile")
                Session.Remove("acctcode")
                Session.Remove("telephone")
                Session.Remove("fax")
                Session.Remove("offpostal")
                Session.Remove("sevaddress")
                Session.Remove("locategrp")
                Session.Remove("salesman")
                Session.Remove("location")
                '23.08.21
                '''''''''''''''''''''''''''''''''''''''
                Session.Remove("contractno")
                Session.Remove("contractdate")
                Session.Remove("contracttype")
                Session.Remove("client")
                Session.Remove("custname")
                Session.Remove("contact")
                'Session.Remove("servstart")
                Session.Remove("servend")
                Session.Remove("billingfreq")
                Session.Remove("billingamount")

                Session.Remove("agreevalue")
                Session.Remove("accountid")
                Session.Remove("ValPerMnth")
                Session.Remove("technician")
                Session.Remove("timein")
                Session.Remove("timeout")
                Session.Remove("fixedcontinuous")
                Session.Remove("totservicerec")
                Session.Remove("normalorregenerateschedule")
                Session.Remove("agreementtype")
                Session.Remove("endoflastschedule")


                ''''''''''''''''''''''''''''''''''''''

                txtFrom.Text = CDate(txtServStart.Text)
                txtTo.Text = CDate(txtServEnd.Text)

                If txtFixedContinuous.Text = "FIXED" Then
                    txtMonths.Visible = False
                    lblMonths.Visible = False
                Else
                    'Dim NoofMonth As Integer
                    'NoofMonth = DateDiff(DateInterval.Month, CDate(txtFrom.Text), CDate(txtTo.Text))
                    'txtMonths.Text = Convert.ToInt32(NoofMonth)


                    Dim effDate As DateTime = DateTime.Parse(txtTo.Text)
                    Dim RefDate As DateTime = DateTime.Parse(txtFrom.Text)

                    Dim months As Integer = (effDate.Year - RefDate.Year) * 12 + effDate.Month - RefDate.Month
                    If effDate.Day > RefDate.Day Then months += 1
                    txtMonths.Text = months
                    txtMonthsOriginal.Text = txtMonths.Text

                End If

                ''If txtComputationMethod.Text = "0" Then
                ''    txtComputationMethod1.Text = "Monthly"
                ''Else
                ''    txtComputationMethod1.Text = "Fixed Contract Value"
                ''End If

                'TotDetailRecords = 0
                'txtMode.Text = "New"
                'rowdeleted = False
                'gTargetDesc = ""

                'Dim startday As Integer
                'startday = CDate(txtServStart.Text).Day
                'startday = startday - 1
                'startday = (-1) * startday

                'txtMonthStartDate.Text = CDate(txtServStart.Text).AddDays(startday)

                'startday = CDate(txtServEnd.Text).Day
                'startday = startday
                'startday = (-1) * startday
                'txtMonthEndDate.Text = (CDate(txtServEnd.Text).AddMonths(1))
                'txtMonthEndDate.Text = CDate(txtMonthEndDate.Text).AddDays(startday)


                'txtFrom.Text = CDate(txtServStart.Text)
                'txtTo.Text = CDate(txtServEnd.Text)

                'Dim NoofMonth As Integer
                'NoofMonth = DateDiff(DateInterval.Month, CDate(txtFrom.Text), CDate(txtTo.Text))
                'txtMonths.Text = Convert.ToInt32(NoofMonth)


                InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "1", txtContractNo.Text)


                ''Start: Scheduling

                'Dim conn As MySqlConnection = New MySqlConnection(constr)
                'conn.Open()

                'Dim command3 As MySqlCommand = New MySqlCommand
                'command3.CommandType = CommandType.Text

                'command3.CommandText = "DELETE from tbwserviceschedule where ContractNo= @ContractNo"
                'command3.Parameters.Clear()

                'command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
                'command3.Connection = conn
                'command3.ExecuteNonQuery()

                ''conn.Close()
                'command3.Dispose()



                ''17.10.20

                'Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                'commandServiceRecordMasterSetup.CommandType = CommandType.Text
                'commandServiceRecordMasterSetup.CommandText = "SELECT WindowsSVCAutoServiceSchedule  FROM tblservicerecordmastersetup"
                'commandServiceRecordMasterSetup.Connection = conn

                'Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                'Dim dtServiceRecordMasterSetup As New DataTable
                'dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                'txtWindowsSVCAutoServiceSchedule.Text = dtServiceRecordMasterSetup.Rows(0)("WindowsSVCAutoServiceSchedule")

                ''conn.Close()
                ''conn.Dispose()
                'commandServiceRecordMasterSetup.Dispose()
                ''17.10.20
                'Dim noOfInterval As Integer
                'Dim tempStartDate, startDate As Date
                'Dim isEnd As Boolean
                'Dim dayofWeek, holiday As String, serviceDate As Date
                'Dim Frequency As String

                'Dim IsWeekly As String
                'IsWeekly = "N"

                'tempStartDate = txtServStart.Text
                'txtBatchNo.Text = (txtContractNo.Text + Now()).Trim

                'Dim d As Date
                ''Dim strdate As Date
                'If Date.TryParseExact(txtServStart.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
                '    tempStartDate = d.ToShortDateString
                'End If


                ''

                PopulateGrid()

                '                Dim command1 As MySqlCommand = New MySqlCommand
                '                command1.CommandType = CommandType.Text
                '                command1.CommandText = "SELECT ContractNo, NoOfInterval, Frequency, ServiceID, ServiceDesc, Value, OrigCode, LocationID, ServiceName, Address1, LocateGRP, ServiceLocationGroup, Salesman FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
                '                command1.Connection = conn

                '                Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
                '                Dim dtservicecontractDet As New DataTable
                '                dtservicecontractDet.Load(drservicecontractDet)

                '                gproductService = ""
                '                gserviceValue = 0
                '                gSQLID = 0
                '                Dim isLaterThanEndDate As Boolean
                '                gActive = "Y"
                '                ''

                '                '''''''''''''''''''

                '                Dim commandPSV As MySqlCommand = New MySqlCommand
                '                commandPSV.CommandType = CommandType.Text
                '                commandPSV.CommandText = "SELECT count(rcno) as IsPSV FROM tblcontractdet where Value > 0.00 and ContractNo ='" & txtContractNo.Text & "'"
                '                commandPSV.Connection = conn

                '                Dim drservicecontractDetPSV As MySqlDataReader = commandPSV.ExecuteReader()
                '                Dim dtservicecontractDetPSV As New DataTable
                '                dtservicecontractDetPSV.Load(drservicecontractDetPSV)



                '                ''''''''''''''''''
                '                'Dim IsPerServiceValue As String
                '                'Dim PerServiceValue As Decimal
                '                'IsPerServiceValue = "N"
                '                'PerServiceValue = 0.0

                '                'PerServiceValue = dtservicecontractDet.Rows(0)("Value").ToString()

                '                Dim IsPerServiceValue As String
                '                Dim PerServiceValue As Long
                '                IsPerServiceValue = "N"
                '                PerServiceValue = 0

                '                PerServiceValue = dtservicecontractDetPSV.Rows(0)("IsPSV").ToString()

                '                If PerServiceValue > 0 Then
                '                    IsPerServiceValue = "Y"
                '                Else
                '                    IsPerServiceValue = "N"
                '                End If



                '                '' start if PersErviceValue is N

                '                If IsPerServiceValue = "N" Then

                '                    For i = 0 To dtservicecontractDet.Rows.Count - 1

                '                        Dim command2 As MySqlCommand = New MySqlCommand
                '                        command2.CommandType = CommandType.Text
                '                        command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                        command2.Connection = conn

                '                        Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                '                        Dim dttblservicecontractFrequency As New DataTable
                '                        dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                '                        noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                '                        gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                '                        command2.Dispose()

                '                        If noOfInterval = 0 Then Continue For

                '                        gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                        gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                '                        gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                '                        gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                '                        gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()

                '                        gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                '                        gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                '                        gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                '                        gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()
                '                        gServiceLocationGroup = dtservicecontractDet.Rows(i)("ServiceLocationGroup").ToString()
                '                        gSalesman = dtservicecontractDet.Rows(i)("Salesman").ToString()

                '                        'Target

                '                        gtargetID_SR = ""
                '                        gTargetDesc = ""
                '                        Dim lreason As String
                '                        Dim commandTarget As MySqlCommand = New MySqlCommand
                '                        commandTarget.CommandType = CommandType.Text

                '                        commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                        commandTarget.Connection = conn

                '                        Dim laction As String

                '                        'Dim gtargetID_SR As String

                '                        laction = ""
                '                        lreason = ""
                '                        gtargetID_SR = ""

                '                        Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                '                        Dim dtTarget As New DataTable
                '                        dtTarget.Load(drTarget)

                '                        If dtTarget.Rows.Count Then
                '                            For t = 0 To dtTarget.Rows.Count - 1
                '                                If lreason <> "" Then lreason = lreason & vbCrLf
                '                                lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
                '                                If gtargetID_SR <> "" Then gtargetID_SR = gtargetID_SR & ", "
                '                                'gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetDesc").ToString()
                '                                gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetID").ToString()  'modified on 02.05.17
                '                            Next
                '                        End If


                '                        'Target

                '                        ''''''''''''''''''''''''''FREQUENCY ''''''''''''''''''''''''''''''''

                '                        '' Daily
                '                        If dtservicecontractDet.Rows(i)("Frequency").ToString() = "DAILY" Then
                '                            'dtservicecontractDet.Rows(0)("Frequency").ToString()
                '                            For j = 1 To noOfInterval
                '                                serviceDate = tempStartDate.AddDays((j - 1))
                '                                'dgv24SCSchedule.Rows.Add(1)
                '                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                dayofWeek = ""
                '                                Select Case pWeekNumber(serviceDate)
                '                                    Case 1
                '                                        dayofWeek = "1st "
                '                                    Case 2
                '                                        dayofWeek = "2nd "
                '                                    Case 3
                '                                        dayofWeek = "3rd "
                '                                    Case 4
                '                                        dayofWeek = "4th "
                '                                    Case 5
                '                                        dayofWeek = "5th "
                '                                End Select
                '                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                '                                holiday = ""


                '                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                gServiceDatestr = gServiceDate
                '                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                gdayofWeek = dayofWeek
                '                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                RowIndexSch = j - 1
                '                                AddNewRowSch()

                '                            Next

                '                            ''End:Daily


                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "ADHOC" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "PER-SERVICE" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SVC CALL" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOLLOW UP" Then
                '                            For j = 1 To noOfInterval
                '                                serviceDate = tempStartDate.AddDays((j - 1))

                '                                dayofWeek = ""
                '                                Select Case pWeekNumber(serviceDate)
                '                                    Case 1
                '                                        dayofWeek = "1st "
                '                                    Case 2
                '                                        dayofWeek = "2nd "
                '                                    Case 3
                '                                        dayofWeek = "3rd "
                '                                    Case 4
                '                                        dayofWeek = "4th "
                '                                    Case 5
                '                                        dayofWeek = "5th "
                '                                End Select
                '                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                '                                holiday = ""


                '                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                gServiceDatestr = gServiceDate
                '                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                gdayofWeek = dayofWeek
                '                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                RowIndexSch = j - 1
                '                                AddNewRowSch()

                '                            Next

                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                '                            IsWeekly = "Y"
                '                            isLaterThanEndDate = False
                '                            Dim daysAdded As Integer = 0
                '                            For j = 1 To noOfInterval
                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                    'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                '                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                    serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                        isEnd = False
                '                                        Do Until isEnd = True
                '                                            serviceDate = serviceDate.AddDays(1)
                '                                            daysAdded = daysAdded + 1
                '                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                isEnd = True
                '                                                Exit Do
                '                                            End If
                '                                        Loop
                '                                    Else
                '                                        daysAdded = daysAdded + 1
                '                                    End If



                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                    RowIndexSch = j - 1
                '                                    'AddNewRowSch()

                '                                    isLaterThanEndDate = False
                '                                    If serviceDate > CDate(txtTo.Text) Then
                '                                        'serviceDate = CDate(txtTo.Text)
                '                                        isLaterThanEndDate = True
                '                                    Else
                '                                        AddNewRowSch()
                '                                    End If
                '                                    holiday = ""
                '                                Next
                '                            Next

                '                            ''
                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                '                            Dim daysAdded As Integer = 0
                '                            isLaterThanEndDate = False

                '                            For j = 1 To noOfInterval

                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                    If isLaterThanEndDate = False Then

                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                '                                        Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                        serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                        'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                        If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                serviceDate = serviceDate.AddDays(1)
                '                                                daysAdded = daysAdded + 1
                '                                                If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        Else
                '                                            daysAdded = daysAdded + 1
                '                                        End If
                '                                        'dgv24SCSchedule.Rows.Add(1)
                '                                        'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                        'isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        '    'serviceDate = CDate(txtTo.Text)
                '                                        '    isLaterThanEndDate = True
                '                                        'End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1

                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtTo.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        Else
                '                                            AddNewRowSch()
                '                                        End If

                '                                        'AddNewRowSch()

                '                                        holiday = ""
                '                                    End If
                '                                Next

                '                            Next
                '                            ''
                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                '                            'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                '                            isLaterThanEndDate = False
                '                            For j = 1 To noOfInterval
                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                    If isLaterThanEndDate = False Then

                '                                        Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                        startDate = tempStartDate.AddDays(14 * (j - 1))
                '                                        If weekno = 2 Then startDate = startDate.AddDays(7)
                '                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        End If
                '                                        serviceDate = startDate

                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtTo.Text) Then
                '                                            serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        AddNewRowSch()

                '                                        holiday = ""

                '                                    End If
                '                                Next
                '                            Next
                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                '                            isLaterThanEndDate = False
                '                            For j = 1 To noOfInterval
                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                    If isLaterThanEndDate = False Then
                '                                        Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                        startDate = tempStartDate.AddDays(21 * (j - 1))
                '                                        If weekno = 2 Then
                '                                            startDate = startDate.AddDays(7)
                '                                        ElseIf weekno = 3 Then
                '                                            startDate = startDate.AddDays(14)
                '                                        End If

                '                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        End If
                '                                        serviceDate = startDate
                '                                        'dgv24SCSchedule.Rows.Add(1)
                '                                        'rowIndex = dgv24SCSchedule.Rows.Count - 1


                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtTo.Text) Then
                '                                            serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If


                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        AddNewRowSch()


                '                                        holiday = ""
                '                                    End If
                '                                Next
                '                            Next
                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                '                            'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                '                            Dim firstMonthHasRec As Boolean = True
                '                            Dim fromMonth = 1
                '                            Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                'IntervalAddOne:
                '                            For j = fromMonth To noOfInterval + 1

                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                    'startDate = tempStartDate.AddMonths(j - 1)

                '                                    If j = 1 Then
                '                                        startDate = tempStartDate
                '                                    Else
                '                                        startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                    End If


                '                                    Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                '                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                    Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                '                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                '                                    If dayNo > 0 Then
                '                                        'day no
                '                                        If startDate.Day <> dayNo Then
                '                                            isEnd = False
                '                                            For l = 1 To totalDays - 1
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.Day = dayNo Then
                '                                                    isEnd = True
                '                                                    Exit For
                '                                                End If
                '                                            Next
                '                                            If isEnd = False Then
                '                                                ' startDate = tempStartDate.AddMonths(j - 1)
                '                                                If j = 1 Then
                '                                                    startDate = tempStartDate
                '                                                Else
                '                                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                                End If
                '                                                If startDate.Month = monthEndDate.Month Then
                '                                                    startDate = monthEndDate
                '                                                Else
                '                                                    If startDate.Day > dayNo Then
                '                                                        Continue For
                '                                                    Else
                '                                                        Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                        If IsDate("30" & monthStr) Then
                '                                                            startDate = CDate("30" & monthStr)
                '                                                        ElseIf IsDate("29" & monthStr) Then
                '                                                            startDate = CDate("29" & monthStr)
                '                                                        ElseIf IsDate("28" & monthStr) Then
                '                                                            startDate = CDate("28" & monthStr)
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If
                '                                        End If

                '                                    Else
                '                                        startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                '                                        startDate = startDate.AddDays((weekno - 1) * 7)
                '                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        End If
                '                                    End If

                '                                    serviceDate = startDate

                '                                    ''''''''''''''''''''

                '                                    'firstDayOfMonth = CDate("01/" & serviceDate.ToString("MM/yyyy"))
                '                                    '''''''''''''''''''''''

                '                                    If j = 1 Then
                '                                        If serviceDate < tempStartDate Then
                '                                            'noOfInterval = noOfInterval + 1
                '                                            'weekno = weekno + 1
                '                                            'fromMonth = 2
                '                                            'GoTo IntervalAddOne
                '                                            GoTo nextrec
                '                                        End If
                '                                    End If

                '                                    '''''''''''''''''''''
                '                                    If j = 1 Then
                '                                        If dayNo > 0 Then
                '                                            If dayNo < tempStartDate.Day Then
                '                                                noOfInterval = noOfInterval + 1
                '                                                fromMonth = 2
                '                                                j = j + 1
                '                                                GoTo IntervalAddOne
                '                                            End If
                '                                        End If
                '                                    End If
                '                                    '''''''''''''''''''''

                '                                    isLaterThanEndDate = False
                '                                    If serviceDate > CDate(txtTo.Text) Then
                '                                        'serviceDate = CDate(txtTo.Text)
                '                                        isLaterThanEndDate = True
                '                                        'GoTo nextrec
                '                                    End If

                '                                    'serviceDate = startDate
                '                                    'txtServiceDate.Text = startDate.ToString()

                '                                    'dgv24SCSchedule.Rows.Add(1)
                '                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                    'gServiceDate = serviceDate


                '                                    'Dim gServiceDatestr As String
                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    'gServiceDate = gServiceDatestr
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                    RowIndexSch = j - 1
                '                                    'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                '                                    '    RowIndexSch = j - 2
                '                                    'Else
                '                                    '    RowIndexSch = j - 1
                '                                    'End If
                '                                    AddNewRowSch()

                'nextrec:
                '                                Next

                '                            Next


                '                            ''

                '                            '14.11.19

                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Then
                '                            'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                '                            'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                '                            Dim interval1 As Integer = 0

                '                            'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                '                            'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                '                            Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                '                                Case "BI-MONTHLY"
                '                                    interval1 = 2
                '                                Case "QUARTERLY"
                '                                    interval1 = 3
                '                                Case "HALF-ANNUALLY"
                '                                    interval1 = 6
                '                                Case "THRICE-ANNUALLY"
                '                                    interval1 = 4
                '                                Case "ANNUALLY"
                '                                    interval1 = 12
                '                                Case "BI-ANNUALLY"
                '                                    interval1 = 24
                '                            End Select


                '                            If interval1 = 0 Then Continue For
                '                            Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                '                            For j = 1 To noOfInterval

                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                '                                    If j = 1 Then
                '                                        startDate = tempStartDate
                '                                    Else
                '                                        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                    End If

                '                                    Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                    Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                '                                    Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                '                                    If dayNo > 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            startDate = startDate.AddMonths(monthNo - 1)
                '                                        End If

                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                '                                        If startDate.Day <> dayNo Then

                '                                            isEnd = False
                '                                            For l = 1 To totalDays - 1
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.Day = dayNo Then
                '                                                    isEnd = True

                '                                                    Exit For
                '                                                End If
                '                                            Next
                '                                            If isEnd = False Then
                '                                                '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                '                                                If j = 1 Then
                '                                                    startDate = tempStartDate
                '                                                Else
                '                                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                                End If

                '                                                startDate = startDate.AddMonths(monthNo - 1)
                '                                                If startDate.Month = monthEndDate.Month Then
                '                                                    startDate = monthEndDate
                '                                                Else
                '                                                    If startDate.Day > dayNo Then
                '                                                        Continue For
                '                                                    Else
                '                                                        Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                        If IsDate("30" & monthStr) Then
                '                                                            startDate = CDate("30" & monthStr)
                '                                                        ElseIf IsDate("29" & monthStr) Then
                '                                                            startDate = CDate("29" & monthStr)
                '                                                        ElseIf IsDate("28" & monthStr) Then
                '                                                            startDate = CDate("28" & monthStr)
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If
                '                                        End If

                '                                        'Start: 14.11.19
                '                                    ElseIf dayNo = 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            startDate = startDate.AddMonths(monthNo - 1)
                '                                        End If

                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                '                                        'test

                '                                        If weekno.ToUpper = "L" Then
                '                                            'startDate = startDate.AddMonths(interval1).AddDays(-1)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(-1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        Else

                '                                            If j <> 1 Then
                '                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                            Else
                '                                                'Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                '                                                Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno)) * 7)

                '                                                'If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                '    isEnd = False
                '                                                '    Do Until isEnd = True
                '                                                '        weekNoDate = weekNoDate.AddDays(1)
                '                                                '        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                '            isEnd = True
                '                                                '            Exit Do
                '                                                '        End If
                '                                                '    Loop
                '                                                'End If

                '                                                If Date.Compare(startDate, weekNoDate) > 0 Then
                '                                                    'startDate = firstDayOfMonth.AddMonths(1)
                '                                                    startDate = firstDayOfMonth.AddMonths(monthNo - 1)
                '                                                    firstDayOfMonth = startDate
                '                                                    startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                End If
                '                                            End If
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If
                '                                        'test


                '                                        'If startDate.Day <> dayNo Then

                '                                        'isEnd = False
                '                                        'For l = 1 To totalDays - 1
                '                                        '    startDate = startDate.AddDays(1)
                '                                        '    If startDate.Day = dayNo Then
                '                                        '        isEnd = True

                '                                        '        Exit For
                '                                        '    End If
                '                                        'Next
                '                                        'If isEnd = False Then
                '                                        '    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                '                                        '    If j = 1 Then
                '                                        '        'startDate = tempStartDate
                '                                        '        startDate = tempStartDate.AddMonths(monthNo - 1)
                '                                        '    Else
                '                                        '        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                        '    End If


                '                                        '    'startDate = startDate.AddMonths(monthNo - 1)
                '                                        '    startDate = startDate.AddMonths(monthNo)
                '                                        '    If startDate.Month = monthEndDate.Month Then
                '                                        '        startDate = monthEndDate
                '                                        '    Else
                '                                        '        If startDate.Day > dayNo Then
                '                                        '            Continue For
                '                                        '        Else
                '                                        '            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                        '            If IsDate("30" & monthStr) Then
                '                                        '                startDate = CDate("30" & monthStr)
                '                                        '            ElseIf IsDate("29" & monthStr) Then
                '                                        '                startDate = CDate("29" & monthStr)
                '                                        '            ElseIf IsDate("28" & monthStr) Then
                '                                        '                startDate = CDate("28" & monthStr)
                '                                        '            End If
                '                                        '        End If
                '                                        '    End If
                '                                        'End If
                '                                        'End If

                '                                        'end: 14.11.19
                '                                    Else
                '                                        If weekno.ToUpper = "L" Then
                '                                            startDate = startDate.AddMonths(interval1).AddDays(-1)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(-1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        Else

                '                                            If j <> 1 Then
                '                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                            Else
                '                                                Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                '                                                If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                    isEnd = False
                '                                                    Do Until isEnd = True
                '                                                        weekNoDate = weekNoDate.AddDays(1)
                '                                                        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                            isEnd = True
                '                                                            Exit Do
                '                                                        End If
                '                                                    Loop
                '                                                End If

                '                                                If Date.Compare(startDate, weekNoDate) > 0 Then
                '                                                    startDate = firstDayOfMonth.AddMonths(1)
                '                                                    firstDayOfMonth = startDate
                '                                                    startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                End If
                '                                            End If
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                    End If
                '                                    serviceDate = startDate
                '                                    isLaterThanEndDate = False
                '                                    If serviceDate > CDate(txtTo.Text) Then
                '                                        serviceDate = CDate(txtTo.Text)
                '                                        isLaterThanEndDate = True
                '                                    End If

                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                '                                    If dayNo > 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            firstDayOfMonth = gServiceDate  ''27.06.18
                '                                        End If
                '                                    End If

                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                '                                    RowIndexSch = j - 1
                '                                    AddNewRowSch()

                '                                    'holiday = ""

                '                                Next
                '                            Next
                '                            '14.11.19


                '                            'start:22.12.19

                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Then
                '                            'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                '                            'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                '                            Dim interval1 As Integer = 0

                '                            'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                '                            'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                '                            Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                '                                Case "BI-MONTHLY"
                '                                    interval1 = 2
                '                                Case "QUARTERLY"
                '                                    interval1 = 3
                '                                Case "HALF-ANNUALLY"
                '                                    interval1 = 6
                '                                Case "THRICE-ANNUALLY"
                '                                    interval1 = 4
                '                                Case "ANNUALLY"
                '                                    interval1 = 12
                '                                Case "BI-ANNUALLY"
                '                                    interval1 = 24
                '                            End Select


                '                            If interval1 = 0 Then Continue For
                '                            Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                '                            For j = 1 To noOfInterval

                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                '                                    If j = 1 Then
                '                                        startDate = tempStartDate
                '                                    Else
                '                                        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                    End If

                '                                    Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                    Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                '                                    Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                '                                    If dayNo > 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            startDate = startDate.AddMonths(monthNo - 1)
                '                                        End If

                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                '                                        If startDate.Day <> dayNo Then

                '                                            isEnd = False
                '                                            For l = 1 To totalDays - 1
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.Day = dayNo Then
                '                                                    isEnd = True

                '                                                    Exit For
                '                                                End If
                '                                            Next
                '                                            If isEnd = False Then
                '                                                '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                '                                                If j = 1 Then
                '                                                    startDate = tempStartDate
                '                                                Else
                '                                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                                End If

                '                                                startDate = startDate.AddMonths(monthNo - 1)
                '                                                If startDate.Month = monthEndDate.Month Then
                '                                                    startDate = monthEndDate
                '                                                Else
                '                                                    If startDate.Day > dayNo Then
                '                                                        Continue For
                '                                                    Else
                '                                                        Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                        If IsDate("30" & monthStr) Then
                '                                                            startDate = CDate("30" & monthStr)
                '                                                        ElseIf IsDate("29" & monthStr) Then
                '                                                            startDate = CDate("29" & monthStr)
                '                                                        ElseIf IsDate("28" & monthStr) Then
                '                                                            startDate = CDate("28" & monthStr)
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If
                '                                        End If

                '                                        'Start: 14.11.19
                '                                    ElseIf dayNo = 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            startDate = startDate.AddMonths(monthNo - 1)
                '                                        End If

                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                '                                        'test

                '                                        If weekno.ToUpper = "L" Then
                '                                            'startDate = startDate.AddMonths(interval1).AddDays(-1)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(-1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        Else

                '                                            If j <> 1 Then
                '                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                            Else
                '                                                'Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                '                                                Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno)) * 7)

                '                                                'If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                '    isEnd = False
                '                                                '    Do Until isEnd = True
                '                                                '        weekNoDate = weekNoDate.AddDays(1)
                '                                                '        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                '            isEnd = True
                '                                                '            Exit Do
                '                                                '        End If
                '                                                '    Loop
                '                                                'End If

                '                                                If Date.Compare(startDate, weekNoDate) > 0 Then
                '                                                    'startDate = firstDayOfMonth.AddMonths(1)
                '                                                    startDate = firstDayOfMonth.AddMonths(monthNo - 1)
                '                                                    firstDayOfMonth = startDate
                '                                                    startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                End If
                '                                            End If
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If
                '                                        'test


                '                                        'If startDate.Day <> dayNo Then

                '                                        'isEnd = False
                '                                        'For l = 1 To totalDays - 1
                '                                        '    startDate = startDate.AddDays(1)
                '                                        '    If startDate.Day = dayNo Then
                '                                        '        isEnd = True

                '                                        '        Exit For
                '                                        '    End If
                '                                        'Next
                '                                        'If isEnd = False Then
                '                                        '    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                '                                        '    If j = 1 Then
                '                                        '        'startDate = tempStartDate
                '                                        '        startDate = tempStartDate.AddMonths(monthNo - 1)
                '                                        '    Else
                '                                        '        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                        '    End If


                '                                        '    'startDate = startDate.AddMonths(monthNo - 1)
                '                                        '    startDate = startDate.AddMonths(monthNo)
                '                                        '    If startDate.Month = monthEndDate.Month Then
                '                                        '        startDate = monthEndDate
                '                                        '    Else
                '                                        '        If startDate.Day > dayNo Then
                '                                        '            Continue For
                '                                        '        Else
                '                                        '            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                        '            If IsDate("30" & monthStr) Then
                '                                        '                startDate = CDate("30" & monthStr)
                '                                        '            ElseIf IsDate("29" & monthStr) Then
                '                                        '                startDate = CDate("29" & monthStr)
                '                                        '            ElseIf IsDate("28" & monthStr) Then
                '                                        '                startDate = CDate("28" & monthStr)
                '                                        '            End If
                '                                        '        End If
                '                                        '    End If
                '                                        'End If
                '                                        'End If

                '                                        'end: 14.11.19
                '                                    Else
                '                                        If weekno.ToUpper = "L" Then
                '                                            startDate = startDate.AddMonths(interval1).AddDays(-1)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(-1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        Else

                '                                            If j <> 1 Then
                '                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                            Else
                '                                                Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                '                                                If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                    isEnd = False
                '                                                    Do Until isEnd = True
                '                                                        weekNoDate = weekNoDate.AddDays(1)
                '                                                        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                            isEnd = True
                '                                                            Exit Do
                '                                                        End If
                '                                                    Loop
                '                                                End If

                '                                                If Date.Compare(startDate, weekNoDate) > 0 Then
                '                                                    startDate = firstDayOfMonth.AddMonths(1)
                '                                                    firstDayOfMonth = startDate
                '                                                    startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                End If
                '                                            End If
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                    End If
                '                                    serviceDate = startDate
                '                                    isLaterThanEndDate = False
                '                                    If serviceDate > CDate(txtTo.Text) Then
                '                                        serviceDate = CDate(txtTo.Text)
                '                                        isLaterThanEndDate = True
                '                                    End If

                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                '                                    If dayNo > 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            firstDayOfMonth = gServiceDate  ''27.06.18
                '                                        End If
                '                                    End If

                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                '                                    RowIndexSch = j - 1
                '                                    AddNewRowSch()

                '                                    'holiday = ""

                '                                Next
                '                            Next
                '                            'end:22.12.19

                '                            'ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                '                        ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                '                            'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                '                            'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                '                            Dim interval1 As Integer = 0

                '                            'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                '                            'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                '                            Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                '                                Case "BI-MONTHLY"
                '                                    interval1 = 2
                '                                Case "QUARTERLY"
                '                                    interval1 = 3
                '                                Case "HALF-ANNUALLY"
                '                                    interval1 = 6
                '                                Case "THRICE-ANNUALLY"
                '                                    interval1 = 4
                '                                Case "ANNUALLY"
                '                                    interval1 = 12
                '                                Case "BI-ANNUALLY"
                '                                    interval1 = 24
                '                            End Select


                '                            If interval1 = 0 Then Continue For
                '                            Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                '                            For j = 1 To noOfInterval

                '                                For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                '                                    If j = 1 Then
                '                                        startDate = tempStartDate
                '                                    Else
                '                                        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                    End If

                '                                    Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                    Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                '                                    Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                '                                    If dayNo > 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            startDate = startDate.AddMonths(monthNo - 1)
                '                                        End If

                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                '                                        If startDate.Day <> dayNo Then

                '                                            isEnd = False
                '                                            For l = 1 To totalDays - 1
                '                                                startDate = startDate.AddDays(1)
                '                                                If startDate.Day = dayNo Then
                '                                                    isEnd = True



                '                                                    Exit For
                '                                                End If
                '                                            Next
                '                                            If isEnd = False Then
                '                                                '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                '                                                If j = 1 Then
                '                                                    startDate = tempStartDate
                '                                                Else
                '                                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                                End If

                '                                                startDate = startDate.AddMonths(monthNo - 1)
                '                                                If startDate.Month = monthEndDate.Month Then
                '                                                    startDate = monthEndDate
                '                                                Else
                '                                                    If startDate.Day > dayNo Then
                '                                                        Continue For
                '                                                    Else
                '                                                        Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                        If IsDate("30" & monthStr) Then
                '                                                            startDate = CDate("30" & monthStr)
                '                                                        ElseIf IsDate("29" & monthStr) Then
                '                                                            startDate = CDate("29" & monthStr)
                '                                                        ElseIf IsDate("28" & monthStr) Then
                '                                                            startDate = CDate("28" & monthStr)
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If
                '                                        End If

                '                                    Else
                '                                        If weekno.ToUpper = "L" Then
                '                                            startDate = startDate.AddMonths(interval1).AddDays(-1)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(-1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        Else

                '                                            If j <> 1 Then
                '                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                            Else
                '                                                Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                '                                                If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                    isEnd = False
                '                                                    Do Until isEnd = True
                '                                                        weekNoDate = weekNoDate.AddDays(1)
                '                                                        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                            isEnd = True
                '                                                            Exit Do
                '                                                        End If
                '                                                    Loop
                '                                                End If

                '                                                If Date.Compare(startDate, weekNoDate) > 0 Then
                '                                                    startDate = firstDayOfMonth.AddMonths(1)
                '                                                    firstDayOfMonth = startDate
                '                                                    startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                End If
                '                                            End If
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                    End If
                '                                    serviceDate = startDate
                '                                    isLaterThanEndDate = False
                '                                    If serviceDate > CDate(txtTo.Text) Then
                '                                        serviceDate = CDate(txtTo.Text)
                '                                        isLaterThanEndDate = True
                '                                    End If

                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                '                                    If dayNo > 0 And monthNo > 0 Then
                '                                        If j = 1 Then
                '                                            firstDayOfMonth = gServiceDate  ''27.06.18
                '                                        End If
                '                                    End If

                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                '                                    RowIndexSch = j - 1
                '                                    AddNewRowSch()

                '                                    'holiday = ""

                '                                Next
                '                            Next
                '                            ''
                '                        End If
                '                    Next

                '                    'conn.Close()

                '                    'Exit Sub

                '                    '2. (IsPerServiceValue = "N")

                '                    'Start: for Quarterly / Half Annually / Annually

                '                    Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
                '                    commandDailyWeekly.CommandType = CommandType.Text
                '                    commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
                '                    commandDailyWeekly.Connection = conn

                '                    Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
                '                    Dim dtContractDailyWeekly As New DataTable
                '                    dtContractDailyWeekly.Load(drContractDailyWeekly)
                '                    Dim lServiceVal As Decimal

                '                    If Val(dtContractDailyWeekly.Rows(0)("dailyweekly").ToString) = 0 Then

                '                        'start quoted :16.12.20
                '                        Dim commandDailyWeeklyUpd As MySqlCommand = New MySqlCommand
                '                        commandDailyWeeklyUpd.CommandType = CommandType.Text
                '                        commandDailyWeeklyUpd.CommandText = "SELECT count((ServiceDate)) as DW FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                '                        commandDailyWeeklyUpd.Connection = conn

                '                        Dim drDailyWeeklyUpd As MySqlDataReader = commandDailyWeeklyUpd.ExecuteReader()
                '                        Dim dtDailyWeeklyUpd As New DataTable
                '                        dtDailyWeeklyUpd.Load(drDailyWeeklyUpd)

                '                        '''
                '                        Dim commandDailyWeeklyFre As MySqlCommand = New MySqlCommand
                '                        commandDailyWeeklyFre.CommandType = CommandType.Text
                '                        commandDailyWeeklyFre.CommandText = "SELECT Frequency FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                '                        commandDailyWeeklyFre.Connection = conn

                '                        Dim drDailyWeeklyUpdFre As MySqlDataReader = commandDailyWeeklyFre.ExecuteReader()
                '                        Dim dtDailyWeeklyUpdFre As New DataTable
                '                        dtDailyWeeklyUpdFre.Load(drDailyWeeklyUpdFre)

                '                        '''

                '                        'lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)

                '                        If dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "MONTHLY" Then
                '                            lServiceVal = Convert.ToDouble(txtValPerMnth.Text)
                '                        ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "QUARTERLY" Then
                '                            lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 3
                '                        ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "BI-MONTHLY" Then
                '                            lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 2
                '                        ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "HALF-ANNUALLY" Then
                '                            lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 6
                '                        ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "ANNUALLY" Then
                '                            lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 12
                '                        Else
                '                            lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)
                '                        End If

                '                        Dim commandValUpd As MySqlCommand = New MySqlCommand
                '                        commandValUpd.CommandType = CommandType.Text
                '                        commandValUpd.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo"
                '                        commandValUpd.Parameters.Clear()

                '                        commandValUpd.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                        'commandValUpd.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                '                        commandValUpd.Parameters.AddWithValue("@Val", Math.Round(lServiceVal, 2))
                '                        'commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                '                        commandValUpd.Connection = conn
                '                        commandValUpd.ExecuteScalar()

                '                        'end quoted: 16.12.20

                '                        GoTo EndScheduling

                '                    End If

                '                        'End: for Quarterly / Half Annually / Annually


                '                        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
                '                        conn1.Open()

                '                        Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
                '                        commandMaxSrviceDate.CommandType = CommandType.Text
                '                        commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
                '                        commandMaxSrviceDate.Connection = conn1

                '                        Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
                '                        Dim dtMaxSrviceDate As New DataTable
                '                        dtMaxSrviceDate.Load(drMaxSrviceDate)

                '                        If dtMaxSrviceDate.Rows.Count > 0 Then
                '                            gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
                '                        End If

                '                        conn1.Close()
                '                        conn1.Dispose()
                '                        'Exit Sub

                '                        '3. (IsPerServiceValue = "N")
                '                        ''''''''''''''''''Start: Previous Dates

                '                        gActive = "N"
                '                        For i = 0 To dtservicecontractDet.Rows.Count - 1

                '                            Dim command2 As MySqlCommand = New MySqlCommand
                '                            command2.CommandType = CommandType.Text

                '                            command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                            command2.Connection = conn

                '                            Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                '                            Dim dttblservicecontractFrequency As New DataTable
                '                            dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                '                            noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                '                            gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()


                '                            command2.Dispose()

                '                            If noOfInterval = 0 Then Continue For

                '                            gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                            gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                '                            gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                '                            gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                '                            gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                '                            gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                '                            gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                '                            gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                '                            gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()





                '                            If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                '                                IsWeekly = "Y"
                '                                isLaterThanEndDate = False
                '                                Dim daysAdded As Integer = 0
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                        serviceDate = tempStartDate.AddDays(7 * (-j))
                '                                        'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                        If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                serviceDate = serviceDate.AddDays(1)
                '                                                daysAdded = daysAdded + 1
                '                                                If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        Else
                '                                            daysAdded = daysAdded + 1
                '                                        End If

                '                                        'isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        '    serviceDate = CDate(txtTo.Text)
                '                                        '    isLaterThanEndDate = True
                '                                        'End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'AddNewRowSch()

                '                                        isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        Else
                '                                            AddNewRowSch()
                '                                        End If
                '                                        holiday = ""
                '                                    Next
                '                                Next

                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                '                                Dim daysAdded As Integer = 0
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                '                                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                            serviceDate = tempStartDate.AddDays(7 * (-j))
                '                                            'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    serviceDate = serviceDate.AddDays(1)
                '                                                    daysAdded = daysAdded + 1
                '                                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            Else
                '                                                daysAdded = daysAdded + 1
                '                                            End If
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                            'isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            '    'serviceDate = CDate(txtTo.Text)
                '                                            '    isLaterThanEndDate = True
                '                                            'End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                'serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            Else
                '                                                AddNewRowSch()
                '                                            End If

                '                                            'AddNewRowSch()

                '                                            holiday = ""
                '                                        End If
                '                                    Next

                '                                Next
                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(14 * (-j))
                '                                            If weekno = 2 Then startDate = startDate.AddDays(7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1


                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                serviceDate = CDate(txtMonthStartDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1

                '                                            If String.IsNullOrEmpty(dow) = False Then
                '                                                If gdayofWeek1 = dow Then
                '                                                    AddNewRowSch()
                '                                                End If
                '                                            Else
                '                                                AddNewRowSch()
                '                                            End If
                '                                            holiday = ""

                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then
                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(21 * (-j))
                '                                            If weekno = 2 Then
                '                                                startDate = startDate.AddDays(7)
                '                                            ElseIf weekno = 3 Then
                '                                                startDate = startDate.AddDays(14)
                '                                            End If

                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                serviceDate = CDate(txtMonthStartDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If


                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()


                '                                            holiday = ""
                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                '                                Dim firstMonthHasRec As Boolean = True
                '                                Dim fromMonth = 1
                '                                Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                'IntervalAddOne1:
                '                                For j = fromMonth To noOfInterval + 1

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                '                                        If j = 1 Then
                '                                            startDate = tempStartDate
                '                                        Else
                '                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                        End If

                '                                        Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                '                                        If dayNo > 0 Then
                '                                            'day no
                '                                            If startDate.Day <> dayNo Then
                '                                                isEnd = False
                '                                                For l = 1 To totalDays - 1
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.Day = dayNo Then
                '                                                        isEnd = True
                '                                                        Exit For
                '                                                    End If
                '                                                Next
                '                                                If isEnd = False Then
                '                                                    ' startDate = tempStartDate.AddMonths(j - 1)
                '                                                    If j = 1 Then
                '                                                        startDate = tempStartDate
                '                                                    Else
                '                                                        startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                                    End If
                '                                                    If startDate.Month = monthEndDate.Month Then
                '                                                        startDate = monthEndDate
                '                                                    Else
                '                                                        If startDate.Day > dayNo Then
                '                                                            Continue For
                '                                                        Else
                '                                                            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                            If IsDate("30" & monthStr) Then
                '                                                                startDate = CDate("30" & monthStr)
                '                                                            ElseIf IsDate("29" & monthStr) Then
                '                                                                startDate = CDate("29" & monthStr)
                '                                                            ElseIf IsDate("28" & monthStr) Then
                '                                                                startDate = CDate("28" & monthStr)
                '                                                            End If
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If

                '                                        Else
                '                                            startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                '                                            startDate = startDate.AddDays((weekno - 1) * 7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                        serviceDate = startDate
                '                                        'serviceDate = CDate(txtMonthStartDate.Text)


                '                                        'If j = 1 Then
                '                                        '    'If serviceDate < tempStartDate Then
                '                                        '    If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                        '        noOfInterval = noOfInterval + 1
                '                                        '        fromMonth = 2
                '                                        '        isLaterThanEndDate = True
                '                                        '        'GoTo IntervalAddOne1
                '                                        '    End If
                '                                        'End If


                '                                        If j = 1 Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                'noOfInterval = noOfInterval + 1
                '                                                'weekno = weekno + 1
                '                                                'fromMonth = 2
                '                                                'GoTo IntervalAddOne
                '                                                GoTo nextrec1
                '                                            End If
                '                                        End If

                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                            'serviceDate = CDate(txtMonthEndDate.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If


                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1

                '                                        AddNewRowSch()

                'nextrec1:
                '                                    Next
                '                                Next

                '                            End If
                '                        Next

                '                        '''''''''''''''''''''''END: Previous Dates



                '                        '4. (IsPerServiceValue = "N")

                '                        '''''''''''''''''' START: Next Dates
                '                        tempStartDate = gMaxServiceDate
                '                        gActive = "N"
                '                        isLaterThanEndDate = False
                '                        For i = 0 To dtservicecontractDet.Rows.Count - 1

                '                            Dim command2 As MySqlCommand = New MySqlCommand
                '                            command2.CommandType = CommandType.Text

                '                            command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                            command2.Connection = conn

                '                            Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                '                            Dim dttblservicecontractFrequency As New DataTable
                '                            dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                '                            noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                '                            gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                '                            command2.Dispose()

                '                            If noOfInterval = 0 Then Continue For

                '                            gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                            gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                '                            gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                '                            gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                '                            gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                '                            gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                '                            gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                '                            gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                '                            gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()



                '                            If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                '                                IsWeekly = "Y"
                '                                Dim daysAdded As Integer = 0
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                        serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                        'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                        If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                serviceDate = serviceDate.AddDays(1)
                '                                                daysAdded = daysAdded + 1
                '                                                If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        Else
                '                                            daysAdded = daysAdded + 1
                '                                        End If

                '                                        'isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        '    serviceDate = CDate(txtTo.Text)
                '                                        '    isLaterThanEndDate = True
                '                                        'End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'AddNewRowSch()

                '                                        isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        Else
                '                                            AddNewRowSch()
                '                                        End If
                '                                        holiday = ""
                '                                    Next
                '                                Next

                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                '                                Dim daysAdded As Integer = 0
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                '                                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                            'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    serviceDate = serviceDate.AddDays(1)
                '                                                    daysAdded = daysAdded + 1
                '                                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            Else
                '                                                daysAdded = daysAdded + 1
                '                                            End If
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                            'isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            '    'serviceDate = CDate(txtTo.Text)
                '                                            '    isLaterThanEndDate = True
                '                                            'End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                                'serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            Else
                '                                                AddNewRowSch()
                '                                            End If

                '                                            'AddNewRowSch()

                '                                            holiday = ""
                '                                        End If
                '                                    Next

                '                                Next
                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(14 * (j - 1))
                '                                            If weekno = 2 Then startDate = startDate.AddDays(7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1


                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                                serviceDate = CDate(txtMonthEndDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()

                '                                            holiday = ""

                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then
                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(21 * (j - 1))
                '                                            If weekno = 2 Then
                '                                                startDate = startDate.AddDays(7)
                '                                            ElseIf weekno = 3 Then
                '                                                startDate = startDate.AddDays(14)
                '                                            End If

                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                                serviceDate = CDate(txtMonthEndDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If


                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()


                '                                            holiday = ""
                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                '                                Dim firstMonthHasRec As Boolean = True
                '                                Dim fromMonth = 1
                '                                Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                'IntervalAddOne2:
                '                                For j = fromMonth To noOfInterval + 1

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'startDate = tempStartDate.AddMonths(j - 1)

                '                                        If j = 1 Then
                '                                            startDate = tempStartDate
                '                                        Else
                '                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                        End If


                '                                        Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                '                                        If dayNo > 0 Then
                '                                            'day no
                '                                            If startDate.Day <> dayNo Then
                '                                                isEnd = False
                '                                                For l = 1 To totalDays - 1
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.Day = dayNo Then
                '                                                        isEnd = True
                '                                                        Exit For
                '                                                    End If
                '                                                Next
                '                                                If isEnd = False Then
                '                                                    ' startDate = tempStartDate.AddMonths(j - 1)
                '                                                    If j = 1 Then
                '                                                        startDate = tempStartDate
                '                                                    Else
                '                                                        startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                                    End If
                '                                                    If startDate.Month = monthEndDate.Month Then
                '                                                        startDate = monthEndDate
                '                                                    Else
                '                                                        If startDate.Day > dayNo Then
                '                                                            Continue For
                '                                                        Else
                '                                                            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                            If IsDate("30" & monthStr) Then
                '                                                                startDate = CDate("30" & monthStr)
                '                                                            ElseIf IsDate("29" & monthStr) Then
                '                                                                startDate = CDate("29" & monthStr)
                '                                                            ElseIf IsDate("28" & monthStr) Then
                '                                                                startDate = CDate("28" & monthStr)
                '                                                            End If
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If

                '                                        Else
                '                                            startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                '                                            startDate = startDate.AddDays((weekno - 1) * 7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                        serviceDate = startDate

                '                                        'If j = 1 Then
                '                                        '    If serviceDate < tempStartDate Then
                '                                        '        'If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                        '        noOfInterval = noOfInterval + 1
                '                                        '        fromMonth = 2
                '                                        '        GoTo IntervalAddOne2


                '                                        '    End If
                '                                        'End If

                '                                        If j = 1 Then
                '                                            If serviceDate < tempStartDate Then
                '                                                'noOfInterval = noOfInterval + 1
                '                                                'weekno = weekno + 1
                '                                                'fromMonth = 2
                '                                                'GoTo IntervalAddOne
                '                                                GoTo nextrec3
                '                                            End If
                '                                        End If

                '                                        isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                            'serviceDate = CDate(txtMonthEndDate.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If

                '                                        'serviceDate = startDate
                '                                        'txtServiceDate.Text = startDate.ToString()

                '                                        'dgv24SCSchedule.Rows.Add(1)
                '                                        'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        'gServiceDate = serviceDate


                '                                        'Dim gServiceDatestr As String
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        'gServiceDate = gServiceDatestr
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                '                                        '    RowIndexSch = j - 2
                '                                        'Else
                '                                        '    RowIndexSch = j - 1
                '                                        'End If

                '                                        If (tempStartDate.Month < gServiceDate.Month) Then
                '                                            GoTo calcval
                '                                        End If

                '                                        AddNewRowSch()
                'nextrec3:

                '                                    Next
                '                                Next

                '                            End If
                '                        Next

                '                        '''''''''''''''''''''''END: Next Dates


                'calcval:
                '                        '5. (IsPerServiceValue = "N")
                '                        'Start: Calculate Values

                '                        'If txtComputationMethod.Text = "1" Then
                '                        Dim commandValues As MySqlCommand = New MySqlCommand

                '                        commandValues.CommandType = CommandType.Text
                '                        commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
                '                        commandValues.Connection = conn

                '                        Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                '                        Dim dtValues As New DataTable
                '                        dtValues.Load(drValues)

                '                        Dim lTotalServices = dtValues.Rows.Count
                '                        Dim lbillingamount As Double
                '                        Dim lbillingamountTotal As Double

                '                        lbillingamount = 0.0
                '                        lbillingamountTotal = 0.0
                '                        'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

                '                        Dim z As Integer
                '                        z = 0

                '                        Dim lMonthYear As String
                '                        lMonthYear = ""

                '                        Dim lWeekMonthYear As String
                '                        lWeekMonthYear = ""

                '                        For Each row As DataRow In dtValues.Rows

                '                            If lMonthYear <> row("MonthYear") Then
                '                                lMonthYear = row("MonthYear")

                '                                Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                '                                commandMonthYearCount.CommandType = CommandType.Text
                '                                commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                '                                commandMonthYearCount.Connection = conn

                '                                Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                '                                Dim dtMonthYearCount As New DataTable
                '                                dtMonthYearCount.Load(drMonthYearCount)

                '                                Dim MonthYearCount As String
                '                                MonthYearCount = dtMonthYearCount.Rows(0)("MY").ToString()

                '                                lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                '                            End If


                '                            Dim commandVal As MySqlCommand = New MySqlCommand
                '                            commandVal.CommandType = CommandType.Text
                '                            commandVal.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                            commandVal.Parameters.Clear()

                '                            commandVal.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                            commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))

                '                            If z <> (dtValues.Rows.Count - 1) Then
                '                                commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                '                                If row("Active") = "Y" Then
                '                                    lbillingamountTotal = lbillingamountTotal + Math.Round(lbillingamount, 2) / row("CountDays")
                '                                End If
                '                            End If

                '                            'Else

                '                            'If txtComputationMethod.Text = "1" Then
                '                            '    If z = (dtValues.Rows.Count - 1) Then
                '                            '        commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                '                            '    End If

                '                            'Else
                '                            '    If z = (dtValues.Rows.Count - 1) Then
                '                            '        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                '                            '    End If
                '                            'End If

                '                            If txtComputationMethod.Text <> "Monthly" Then
                '                                If z = (dtValues.Rows.Count - 1) Then
                '                                    commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                '                                End If

                '                            Else
                '                                If z = (dtValues.Rows.Count - 1) Then
                '                                    commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                '                                End If
                '                            End If
                '                            commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                '                            commandVal.Connection = conn
                '                            commandVal.ExecuteScalar()
                '                            z = z + 1
                '                            'conn.Close()
                '                        Next row
                '                        'End If

                '                        'End: Calculate Values
                '                    End If   'End if PersErviceValue is N







                '                    '' start if PersErviceValue is Y

                '                    If IsPerServiceValue = "Y" Then

                '                        For i = 0 To dtservicecontractDet.Rows.Count - 1

                '                            Dim command2 As MySqlCommand = New MySqlCommand
                '                            command2.CommandType = CommandType.Text
                '                            command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                            command2.Connection = conn

                '                            Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                '                            Dim dttblservicecontractFrequency As New DataTable
                '                            dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                '                            noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                '                            gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                '                            command2.Dispose()

                '                            If noOfInterval = 0 Then Continue For

                '                            gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                            gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                '                            gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                '                            gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                '                            gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()

                '                            gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                '                            gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                '                            gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                '                            gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()
                '                            gServiceLocationGroup = dtservicecontractDet.Rows(i)("ServiceLocationGroup").ToString()
                '                            gSalesman = dtservicecontractDet.Rows(i)("Salesman").ToString()

                '                            'Target

                '                            gtargetID_SR = ""
                '                            gTargetDesc = ""
                '                            Dim lreason As String
                '                            Dim commandTarget As MySqlCommand = New MySqlCommand
                '                            commandTarget.CommandType = CommandType.Text

                '                            commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                            commandTarget.Connection = conn

                '                            Dim laction As String

                '                            'Dim gtargetID_SR As String

                '                            laction = ""
                '                            lreason = ""
                '                            gtargetID_SR = ""

                '                            Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                '                            Dim dtTarget As New DataTable
                '                            dtTarget.Load(drTarget)

                '                            If dtTarget.Rows.Count Then
                '                                For t = 0 To dtTarget.Rows.Count - 1
                '                                    If lreason <> "" Then lreason = lreason & vbCrLf
                '                                    lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
                '                                    If gtargetID_SR <> "" Then gtargetID_SR = gtargetID_SR & ", "
                '                                    'gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetDesc").ToString()
                '                                    gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetID").ToString()  'modified on 02.05.17
                '                                Next
                '                            End If


                '                            'Target

                '                            ''''''''''''''''''''''''''FREQUENCY ''''''''''''''''''''''''''''''''

                '                            '' Daily
                '                            If dtservicecontractDet.Rows(i)("Frequency").ToString() = "DAILY" Then
                '                                'dtservicecontractDet.Rows(0)("Frequency").ToString()
                '                                For j = 1 To noOfInterval
                '                                    serviceDate = tempStartDate.AddDays((j - 1))
                '                                    'dgv24SCSchedule.Rows.Add(1)
                '                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                '                                    holiday = ""


                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                    RowIndexSch = j - 1
                '                                    AddNewRowSch()

                '                                Next

                '                                ''End:Daily


                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "ADHOC" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "PER-SERVICE" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SVC CALL" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOLLOW UP" Then
                '                                For j = 1 To noOfInterval
                '                                    serviceDate = tempStartDate.AddDays((j - 1))

                '                                    dayofWeek = ""
                '                                    Select Case pWeekNumber(serviceDate)
                '                                        Case 1
                '                                            dayofWeek = "1st "
                '                                        Case 2
                '                                            dayofWeek = "2nd "
                '                                        Case 3
                '                                            dayofWeek = "3rd "
                '                                        Case 4
                '                                            dayofWeek = "4th "
                '                                        Case 5
                '                                            dayofWeek = "5th "
                '                                    End Select
                '                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                '                                    holiday = ""


                '                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                    gServiceDatestr = gServiceDate
                '                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                    gdayofWeek = dayofWeek
                '                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                    RowIndexSch = j - 1
                '                                    AddNewRowSch()

                '                                Next

                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                '                                IsWeekly = "Y"
                '                                Dim daysAdded As Integer = 0
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                        serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                        'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                        If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                serviceDate = serviceDate.AddDays(1)
                '                                                daysAdded = daysAdded + 1
                '                                                If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        Else
                '                                            daysAdded = daysAdded + 1
                '                                        End If

                '                                        'isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        '    serviceDate = CDate(txtTo.Text)
                '                                        '    isLaterThanEndDate = True
                '                                        'End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'AddNewRowSch()

                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtTo.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        Else
                '                                            AddNewRowSch()
                '                                        End If
                '                                        holiday = ""
                '                                    Next
                '                                Next

                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                '                                Dim daysAdded As Integer = 0
                '                                isLaterThanEndDate = False
                '                                For j = 1 To noOfInterval

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                '                                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                            'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    serviceDate = serviceDate.AddDays(1)
                '                                                    daysAdded = daysAdded + 1
                '                                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            Else
                '                                                daysAdded = daysAdded + 1
                '                                            End If
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                            'isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            '    'serviceDate = CDate(txtTo.Text)
                '                                            '    isLaterThanEndDate = True
                '                                            'End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1

                '                                            isLaterThanEndDate = False
                '                                            If serviceDate > CDate(txtTo.Text) Then
                '                                                'serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            Else
                '                                                AddNewRowSch()
                '                                            End If

                '                                            'AddNewRowSch()

                '                                            holiday = ""
                '                                        End If
                '                                    Next

                '                                Next
                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(14 * (j - 1))
                '                                            If weekno = 2 Then startDate = startDate.AddDays(7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate

                '                                            isLaterThanEndDate = False
                '                                            If serviceDate > CDate(txtTo.Text) Then
                '                                                serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()

                '                                            holiday = ""

                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then
                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(21 * (j - 1))
                '                                            If weekno = 2 Then
                '                                                startDate = startDate.AddDays(7)
                '                                            ElseIf weekno = 3 Then
                '                                                startDate = startDate.AddDays(14)
                '                                            End If

                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1


                '                                            isLaterThanEndDate = False
                '                                            If serviceDate > CDate(txtTo.Text) Then
                '                                                serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If


                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()


                '                                            holiday = ""
                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                '                                Dim firstMonthHasRec As Boolean = True
                '                                Dim fromMonth = 1
                '                                Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                'IntervalAddOneY:
                '                                For j = fromMonth To noOfInterval + 1

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'startDate = tempStartDate.AddMonths(j - 1)

                '                                        If j = 1 Then
                '                                            startDate = tempStartDate
                '                                        Else
                '                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                        End If


                '                                        Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                '                                        If dayNo > 0 Then
                '                                            'day no
                '                                            If startDate.Day <> dayNo Then
                '                                                isEnd = False
                '                                                For l = 1 To totalDays - 1
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.Day = dayNo Then
                '                                                        isEnd = True
                '                                                        Exit For
                '                                                    End If
                '                                                Next
                '                                                If isEnd = False Then
                '                                                    ' startDate = tempStartDate.AddMonths(j - 1)
                '                                                    If j = 1 Then
                '                                                        startDate = tempStartDate
                '                                                    Else
                '                                                        startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                                    End If
                '                                                    If startDate.Month = monthEndDate.Month Then
                '                                                        startDate = monthEndDate
                '                                                    Else
                '                                                        If startDate.Day > dayNo Then
                '                                                            Continue For
                '                                                        Else
                '                                                            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                            If IsDate("30" & monthStr) Then
                '                                                                startDate = CDate("30" & monthStr)
                '                                                            ElseIf IsDate("29" & monthStr) Then
                '                                                                startDate = CDate("29" & monthStr)
                '                                                            ElseIf IsDate("28" & monthStr) Then
                '                                                                startDate = CDate("28" & monthStr)
                '                                                            End If
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If

                '                                        Else
                '                                            startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                '                                            startDate = startDate.AddDays((weekno - 1) * 7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                        serviceDate = startDate

                '                                        ''''''''''''''''''''

                '                                        'firstDayOfMonth = CDate("01/" & serviceDate.ToString("MM/yyyy"))
                '                                        '''''''''''''''''''''''

                '                                        'If j = 1 Then
                '                                        '    If serviceDate < tempStartDate Then
                '                                        '        noOfInterval = noOfInterval + 1
                '                                        '        fromMonth = 2
                '                                        '        GoTo IntervalAddOneY
                '                                        '    End If
                '                                        'End If

                '                                        If j = 1 Then
                '                                            If serviceDate < tempStartDate Then
                '                                                'noOfInterval = noOfInterval + 1
                '                                                'weekno = weekno + 1
                '                                                'fromMonth = 2
                '                                                'GoTo IntervalAddOne
                '                                                GoTo nextrec4
                '                                            End If
                '                                        End If

                '                                        '''''''''''''''''''''
                '                                        If j = 1 Then
                '                                            If dayNo > 0 Then
                '                                                If dayNo < tempStartDate.Day Then
                '                                                    noOfInterval = noOfInterval + 1
                '                                                    fromMonth = 2
                '                                                    j = j + 1
                '                                                    GoTo IntervalAddOneY
                '                                                End If
                '                                            End If
                '                                        End If
                '                                        '''''''''''''''''''''

                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtTo.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If

                '                                        'serviceDate = startDate
                '                                        'txtServiceDate.Text = startDate.ToString()

                '                                        'dgv24SCSchedule.Rows.Add(1)
                '                                        'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        'gServiceDate = serviceDate


                '                                        'Dim gServiceDatestr As String
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        'gServiceDate = gServiceDatestr
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                '                                        '    RowIndexSch = j - 2
                '                                        'Else
                '                                        '    RowIndexSch = j - 1
                '                                        'End If
                '                                        AddNewRowSch()
                'nextrec4:

                '                                    Next
                '                                Next


                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                '                                'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                '                                Dim interval1 As Integer = 0

                '                                'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                '                                'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                '                                Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                '                                    Case "BI-MONTHLY"
                '                                        interval1 = 2
                '                                    Case "QUARTERLY"
                '                                        interval1 = 3
                '                                    Case "HALF-ANNUALLY"
                '                                        interval1 = 6
                '                                    Case "THRICE-ANNUALLY"
                '                                        interval1 = 4
                '                                    Case "ANNUALLY"
                '                                        interval1 = 12
                '                                    Case "BI-ANNUALLY"
                '                                        interval1 = 24
                '                                End Select


                '                                If interval1 = 0 Then Continue For
                '                                Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                '                                For j = 1 To noOfInterval

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                '                                        If j = 1 Then
                '                                            startDate = tempStartDate
                '                                        Else
                '                                            startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                        End If

                '                                        Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                '                                        Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                '                                        If dayNo > 0 And monthNo > 0 Then
                '                                            startDate = startDate.AddMonths(monthNo - 1)
                '                                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                '                                            If startDate.Day <> dayNo Then

                '                                                isEnd = False
                '                                                For l = 1 To totalDays - 1
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.Day = dayNo Then
                '                                                        isEnd = True
                '                                                        Exit For
                '                                                    End If
                '                                                Next
                '                                                If isEnd = False Then
                '                                                    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                '                                                    If j = 1 Then
                '                                                        startDate = tempStartDate
                '                                                    Else
                '                                                        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                '                                                    End If
                '                                                    startDate = startDate.AddMonths(monthNo - 1)
                '                                                    If startDate.Month = monthEndDate.Month Then
                '                                                        startDate = monthEndDate
                '                                                    Else
                '                                                        If startDate.Day > dayNo Then
                '                                                            Continue For
                '                                                        Else
                '                                                            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                            If IsDate("30" & monthStr) Then
                '                                                                startDate = CDate("30" & monthStr)
                '                                                            ElseIf IsDate("29" & monthStr) Then
                '                                                                startDate = CDate("29" & monthStr)
                '                                                            ElseIf IsDate("28" & monthStr) Then
                '                                                                startDate = CDate("28" & monthStr)
                '                                                            End If
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If

                '                                        Else
                '                                            If weekno.ToUpper = "L" Then
                '                                                startDate = startDate.AddMonths(interval1).AddDays(-1)
                '                                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                    isEnd = False
                '                                                    Do Until isEnd = True
                '                                                        startDate = startDate.AddDays(-1)
                '                                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                            isEnd = True
                '                                                            Exit Do
                '                                                        End If
                '                                                    Loop
                '                                                End If
                '                                            Else

                '                                                If j <> 1 Then
                '                                                    startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                Else
                '                                                    Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                '                                                    If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                        isEnd = False
                '                                                        Do Until isEnd = True
                '                                                            weekNoDate = weekNoDate.AddDays(1)
                '                                                            If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                                isEnd = True
                '                                                                Exit Do
                '                                                            End If
                '                                                        Loop
                '                                                    End If

                '                                                    If Date.Compare(startDate, weekNoDate) > 0 Then
                '                                                        startDate = firstDayOfMonth.AddMonths(1)
                '                                                        firstDayOfMonth = startDate
                '                                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                '                                                    End If
                '                                                End If
                '                                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                    isEnd = False
                '                                                    Do Until isEnd = True
                '                                                        startDate = startDate.AddDays(1)
                '                                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                            isEnd = True
                '                                                            Exit Do
                '                                                        End If
                '                                                    Loop
                '                                                End If
                '                                            End If

                '                                        End If
                '                                        serviceDate = startDate
                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtTo.Text) Then
                '                                            serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                '                                        RowIndexSch = j - 1
                '                                        AddNewRowSch()

                '                                        'holiday = ""

                '                                    Next
                '                                Next
                '                                ''
                '                            End If
                '                        Next

                '                        'conn.Close()




                '                        'Exit Sub

                '                        '2. (IsPerServiceValue = "Y")
                '                        'Start: for Quarterly / Half Annually / Annually

                '                        Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
                '                        commandDailyWeekly.CommandType = CommandType.Text
                '                        commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
                '                        commandDailyWeekly.Connection = conn

                '                        Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
                '                        Dim dtContractDailyWeekly As New DataTable
                '                        dtContractDailyWeekly.Load(drContractDailyWeekly)
                '                        Dim lServiceVal As Decimal


                '                        'End: for Quarterly / Half Annually / Annually


                '                        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
                '                        conn1.Open()

                '                        Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
                '                        commandMaxSrviceDate.CommandType = CommandType.Text
                '                        commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
                '                        commandMaxSrviceDate.Connection = conn1

                '                        Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
                '                        Dim dtMaxSrviceDate As New DataTable
                '                        dtMaxSrviceDate.Load(drMaxSrviceDate)

                '                        If dtMaxSrviceDate.Rows.Count > 0 Then
                '                            gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
                '                        End If

                '                        conn1.Close()
                '                        conn1.Dispose()


                '                        '3. (IsPerServiceValue = "Y")
                '                        ''''''''''''''''''Start: Previous Dates

                '                        gActive = "N"
                '                        For i = 0 To dtservicecontractDet.Rows.Count - 1

                '                            Dim command2 As MySqlCommand = New MySqlCommand
                '                            command2.CommandType = CommandType.Text

                '                            command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                            command2.Connection = conn

                '                            Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                '                            Dim dttblservicecontractFrequency As New DataTable
                '                            dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                '                            noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                '                            gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                '                            command2.Dispose()

                '                            If noOfInterval = 0 Then Continue For

                '                            gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                            gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                '                            gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                '                            gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                '                            gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                '                            gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                '                            gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                '                            gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                '                            gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()

                '                            If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                '                                IsWeekly = "Y"
                '                                Dim daysAdded As Integer = 0
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                        serviceDate = tempStartDate.AddDays(7 * (-j))
                '                                        'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                        If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                serviceDate = serviceDate.AddDays(1)
                '                                                daysAdded = daysAdded + 1
                '                                                If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        Else
                '                                            daysAdded = daysAdded + 1
                '                                        End If

                '                                        'isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        '    serviceDate = CDate(txtTo.Text)
                '                                        '    isLaterThanEndDate = True
                '                                        'End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'AddNewRowSch()

                '                                        isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        Else
                '                                            AddNewRowSch()
                '                                        End If
                '                                        holiday = ""
                '                                    Next
                '                                Next

                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                '                                Dim daysAdded As Integer = 0

                '                                For j = 1 To noOfInterval

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                '                                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                            serviceDate = tempStartDate.AddDays(7 * (-j))
                '                                            'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    serviceDate = serviceDate.AddDays(1)
                '                                                    daysAdded = daysAdded + 1
                '                                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            Else
                '                                                daysAdded = daysAdded + 1
                '                                            End If
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                            'isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            '    'serviceDate = CDate(txtTo.Text)
                '                                            '    isLaterThanEndDate = True
                '                                            'End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                'serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            Else
                '                                                AddNewRowSch()
                '                                            End If

                '                                            'AddNewRowSch()

                '                                            holiday = ""
                '                                        End If
                '                                    Next

                '                                Next
                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(14 * (-j))
                '                                            If weekno = 2 Then startDate = startDate.AddDays(7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1


                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                serviceDate = CDate(txtMonthStartDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()

                '                                            holiday = ""

                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then
                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(21 * (-j))
                '                                            If weekno = 2 Then
                '                                                startDate = startDate.AddDays(7)
                '                                            ElseIf weekno = 3 Then
                '                                                startDate = startDate.AddDays(14)
                '                                            End If

                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                serviceDate = CDate(txtMonthStartDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If


                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()


                '                                            holiday = ""
                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                '                                Dim firstMonthHasRec As Boolean = True
                '                                Dim fromMonth = 1
                '                                Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                'IntervalAddOne1Y:
                '                                For j = fromMonth To noOfInterval + 1

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                '                                        If j = 1 Then
                '                                            startDate = tempStartDate
                '                                        Else
                '                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                        End If

                '                                        Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                '                                        If dayNo > 0 Then
                '                                            'day no
                '                                            If startDate.Day <> dayNo Then
                '                                                isEnd = False
                '                                                For l = 1 To totalDays - 1
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.Day = dayNo Then
                '                                                        isEnd = True
                '                                                        Exit For
                '                                                    End If
                '                                                Next
                '                                                If isEnd = False Then
                '                                                    ' startDate = tempStartDate.AddMonths(j - 1)
                '                                                    If j = 1 Then
                '                                                        startDate = tempStartDate
                '                                                    Else
                '                                                        startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                                    End If
                '                                                    If startDate.Month = monthEndDate.Month Then
                '                                                        startDate = monthEndDate
                '                                                    Else
                '                                                        If startDate.Day > dayNo Then
                '                                                            Continue For
                '                                                        Else
                '                                                            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                            If IsDate("30" & monthStr) Then
                '                                                                startDate = CDate("30" & monthStr)
                '                                                            ElseIf IsDate("29" & monthStr) Then
                '                                                                startDate = CDate("29" & monthStr)
                '                                                            ElseIf IsDate("28" & monthStr) Then
                '                                                                startDate = CDate("28" & monthStr)
                '                                                            End If
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If

                '                                        Else
                '                                            startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                '                                            startDate = startDate.AddDays((weekno - 1) * 7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                        serviceDate = startDate
                '                                        'serviceDate = CDate(txtMonthStartDate.Text)

                '                                        'If j = 1 Then
                '                                        '    'If serviceDate < tempStartDate Then
                '                                        '    If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                        '        noOfInterval = noOfInterval + 1
                '                                        '        fromMonth = 2
                '                                        '        isLaterThanEndDate = True
                '                                        '        'GoTo IntervalAddOne1
                '                                        '    End If
                '                                        'End If


                '                                        If j = 1 Then
                '                                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                                'noOfInterval = noOfInterval + 1
                '                                                'weekno = weekno + 1
                '                                                'fromMonth = 2
                '                                                'GoTo IntervalAddOne
                '                                                GoTo nextrec5
                '                                            End If
                '                                        End If
                '                                        isLaterThanEndDate = False
                '                                        If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                            'serviceDate = CDate(txtMonthEndDate.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If


                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1

                '                                        AddNewRowSch()

                'nextrec5:
                '                                    Next
                '                                Next

                '                            End If
                '                        Next

                '                        '''''''''''''''''''''''END: Previous Dates



                '                        '4. (IsPerServiceValue = "Y")

                '                        '''''''''''''''''' START: Next Dates
                '                        tempStartDate = gMaxServiceDate
                '                        gActive = "N"
                '                        isLaterThanEndDate = False
                '                        For i = 0 To dtservicecontractDet.Rows.Count - 1

                '                            Dim command2 As MySqlCommand = New MySqlCommand
                '                            command2.CommandType = CommandType.Text

                '                            command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                '                            command2.Connection = conn

                '                            Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                '                            Dim dttblservicecontractFrequency As New DataTable
                '                            dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                '                            noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                '                            gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                '                            command2.Dispose()

                '                            If noOfInterval = 0 Then Continue For

                '                            gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                            gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                '                            gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                '                            gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                '                            gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                '                            gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                '                            gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                '                            gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                '                            gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()



                '                            If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                '                                IsWeekly = "Y"
                '                                Dim daysAdded As Integer = 0
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                        serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                        'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                        If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                            isEnd = False
                '                                            Do Until isEnd = True
                '                                                serviceDate = serviceDate.AddDays(1)
                '                                                daysAdded = daysAdded + 1
                '                                                If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                    isEnd = True
                '                                                    Exit Do
                '                                                End If
                '                                            Loop
                '                                        Else
                '                                            daysAdded = daysAdded + 1
                '                                        End If

                '                                        'isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        '    serviceDate = CDate(txtTo.Text)
                '                                        '    isLaterThanEndDate = True
                '                                        'End If

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'AddNewRowSch()

                '                                        isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                            'serviceDate = CDate(txtTo.Text)
                '                                            isLaterThanEndDate = True
                '                                        Else
                '                                            AddNewRowSch()
                '                                        End If
                '                                        holiday = ""
                '                                    Next
                '                                Next

                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                '                                Dim daysAdded As Integer = 0

                '                                For j = 1 To noOfInterval

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                '                                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                '                                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                '                                            'serviceDate = tempStartDate.AddDays(daysAdded)
                '                                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    serviceDate = serviceDate.AddDays(1)
                '                                                    daysAdded = daysAdded + 1
                '                                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            Else
                '                                                daysAdded = daysAdded + 1
                '                                            End If
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                            'isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            '    'serviceDate = CDate(txtTo.Text)
                '                                            '    isLaterThanEndDate = True
                '                                            'End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                                'serviceDate = CDate(txtTo.Text)
                '                                                isLaterThanEndDate = True
                '                                            Else
                '                                                AddNewRowSch()
                '                                            End If

                '                                            'AddNewRowSch()

                '                                            holiday = ""
                '                                        End If
                '                                    Next

                '                                Next
                '                                ''
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then

                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(14 * (j - 1))
                '                                            If weekno = 2 Then startDate = startDate.AddDays(7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate
                '                                            'dgv24SCSchedule.Rows.Add(1)
                '                                            'rowIndex = dgv24SCSchedule.Rows.Count - 1


                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                                serviceDate = CDate(txtMonthEndDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If

                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()

                '                                            holiday = ""

                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                '                                For j = 1 To noOfInterval
                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        If isLaterThanEndDate = False Then
                '                                            Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                '                                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                            'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                '                                            startDate = tempStartDate.AddDays(21 * (j - 1))
                '                                            If weekno = 2 Then
                '                                                startDate = startDate.AddDays(7)
                '                                            ElseIf weekno = 3 Then
                '                                                startDate = startDate.AddDays(14)
                '                                            End If

                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                            serviceDate = startDate

                '                                            isLaterThanEndDate = False
                '                                            'If serviceDate > CDate(txtTo.Text) Then
                '                                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                                serviceDate = CDate(txtMonthEndDate.Text)
                '                                                isLaterThanEndDate = True
                '                                            End If


                '                                            dayofWeek = ""
                '                                            Select Case pWeekNumber(serviceDate)
                '                                                Case 1
                '                                                    dayofWeek = "1st "
                '                                                Case 2
                '                                                    dayofWeek = "2nd "
                '                                                Case 3
                '                                                    dayofWeek = "3rd "
                '                                                Case 4
                '                                                    dayofWeek = "4th "
                '                                                Case 5
                '                                                    dayofWeek = "5th "
                '                                            End Select
                '                                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                            gServiceDatestr = gServiceDate
                '                                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                            gdayofWeek = dayofWeek
                '                                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                            RowIndexSch = j - 1
                '                                            AddNewRowSch()


                '                                            holiday = ""
                '                                        End If
                '                                    Next
                '                                Next
                '                            ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                '                                'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                '                                Dim firstMonthHasRec As Boolean = True
                '                                Dim fromMonth = 1
                '                                Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                'IntervalAddOne2Y:
                '                                For j = fromMonth To noOfInterval + 1

                '                                    For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                '                                        'startDate = tempStartDate.AddMonths(j - 1)

                '                                        If j = 1 Then
                '                                            startDate = tempStartDate
                '                                        Else
                '                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                        End If


                '                                        Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                '                                        Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                '                                        Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                '                                        Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                '                                        Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                '                                        If dayNo > 0 Then
                '                                            'day no
                '                                            If startDate.Day <> dayNo Then
                '                                                isEnd = False
                '                                                For l = 1 To totalDays - 1
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.Day = dayNo Then
                '                                                        isEnd = True
                '                                                        Exit For
                '                                                    End If
                '                                                Next
                '                                                If isEnd = False Then
                '                                                    ' startDate = tempStartDate.AddMonths(j - 1)
                '                                                    If j = 1 Then
                '                                                        startDate = tempStartDate
                '                                                    Else
                '                                                        startDate = firstDayOfMonth.AddMonths((j - 1))
                '                                                    End If
                '                                                    If startDate.Month = monthEndDate.Month Then
                '                                                        startDate = monthEndDate
                '                                                    Else
                '                                                        If startDate.Day > dayNo Then
                '                                                            Continue For
                '                                                        Else
                '                                                            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                '                                                            If IsDate("30" & monthStr) Then
                '                                                                startDate = CDate("30" & monthStr)
                '                                                            ElseIf IsDate("29" & monthStr) Then
                '                                                                startDate = CDate("29" & monthStr)
                '                                                            ElseIf IsDate("28" & monthStr) Then
                '                                                                startDate = CDate("28" & monthStr)
                '                                                            End If
                '                                                        End If
                '                                                    End If
                '                                                End If
                '                                            End If

                '                                        Else
                '                                            startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                '                                            startDate = startDate.AddDays((weekno - 1) * 7)
                '                                            If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                '                                                isEnd = False
                '                                                Do Until isEnd = True
                '                                                    startDate = startDate.AddDays(1)
                '                                                    If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                '                                                        isEnd = True
                '                                                        Exit Do
                '                                                    End If
                '                                                Loop
                '                                            End If
                '                                        End If

                '                                        serviceDate = startDate

                '                                        'If j = 1 Then
                '                                        '    If serviceDate < tempStartDate Then
                '                                        '        'If serviceDate < CDate(txtMonthStartDate.Text) Then
                '                                        '        noOfInterval = noOfInterval + 1
                '                                        '        fromMonth = 2
                '                                        '        GoTo IntervalAddOne2Y


                '                                        '    End If
                '                                        'End If


                '                                        If j = 1 Then
                '                                            If serviceDate < tempStartDate Then
                '                                                'noOfInterval = noOfInterval + 1
                '                                                'weekno = weekno + 1
                '                                                'fromMonth = 2
                '                                                'GoTo IntervalAddOne
                '                                                GoTo nextrec6
                '                                            End If
                '                                        End If

                '                                        isLaterThanEndDate = False
                '                                        'If serviceDate > CDate(txtTo.Text) Then
                '                                        If serviceDate > CDate(txtMonthEndDate.Text) Then
                '                                            'serviceDate = CDate(txtMonthEndDate.Text)
                '                                            isLaterThanEndDate = True
                '                                        End If

                '                                        'serviceDate = startDate
                '                                        'txtServiceDate.Text = startDate.ToString()

                '                                        'dgv24SCSchedule.Rows.Add(1)
                '                                        'rowIndex = dgv24SCSchedule.Rows.Count - 1

                '                                        dayofWeek = ""
                '                                        Select Case pWeekNumber(serviceDate)
                '                                            Case 1
                '                                                dayofWeek = "1st "
                '                                            Case 2
                '                                                dayofWeek = "2nd "
                '                                            Case 3
                '                                                dayofWeek = "3rd "
                '                                            Case 4
                '                                                dayofWeek = "4th "
                '                                            Case 5
                '                                                dayofWeek = "5th "
                '                                        End Select
                '                                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                '                                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                '                                        'gServiceDate = serviceDate


                '                                        'Dim gServiceDatestr As String
                '                                        gServiceDatestr = gServiceDate
                '                                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                '                                        'gServiceDate = gServiceDatestr
                '                                        gdayofWeek = dayofWeek
                '                                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                '                                        RowIndexSch = j - 1
                '                                        'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                '                                        '    RowIndexSch = j - 2
                '                                        'Else
                '                                        '    RowIndexSch = j - 1
                '                                        'End If

                '                                        If (tempStartDate.Month < gServiceDate.Month) Then
                '                                            GoTo calcvalY
                '                                        End If

                '                                        AddNewRowSch()

                'nextrec6:
                '                                    Next
                '                                Next

                '                            End If
                '                        Next

                '                        '''''''''''''''''''''''END: Next Dates


                'calcvalY:

                '                        '5. (IsPerServiceValue = "Y")
                '                        'Start: Calculate Values

                '                        'If txtComputationMethod.Text = "1" Then
                '                        Dim commandValues As MySqlCommand = New MySqlCommand

                '                        commandValues.CommandType = CommandType.Text
                '                        commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
                '                        commandValues.Connection = conn

                '                        Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                '                        Dim dtValues As New DataTable
                '                        dtValues.Load(drValues)

                '                        Dim lTotalServices = dtValues.Rows.Count
                '                        Dim lbillingamount As Double
                '                        Dim lbillingamountTotal As Double

                '                        lbillingamount = 0.0
                '                        lbillingamountTotal = 0.0
                '                        'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

                '                        Dim z As Integer
                '                        z = 0

                '                        Dim lMonthYear As String
                '                        lMonthYear = ""

                '                        Dim lWeekMonthYear As String
                '                        lWeekMonthYear = ""

                '                        For Each row As DataRow In dtValues.Rows

                '                            If lMonthYear <> row("MonthYear") Then
                '                                lMonthYear = row("MonthYear")

                '                                Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                '                                commandMonthYearCount.CommandType = CommandType.Text
                '                                commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                '                                commandMonthYearCount.Connection = conn

                '                                Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                '                                Dim dtMonthYearCount As New DataTable
                '                                dtMonthYearCount.Load(drMonthYearCount)

                '                                lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                '                            End If



                '                            z = z + 1
                '                            'conn.Close()
                '                        Next row

                '                        'End: Calculate Values
                '                    End If   'End if PersErviceValue is N


                '                    ''''' End: if Y
                'EndScheduling:

                '                    If IsPerServiceValue = "N" Then 'If IsPerServiceValue = "N" Then 13.01.19
                '                        '''''''''''''''''''''''''''''
                '                        '' Start: update for fixed value

                '                        ''''''''''''''''''''''''''''''

                '                        ''''''''''''' 15.07

                '                        '''''''''''''''''''''''''''''
                '                        '' Start: update for Fixed Contract Value Computaion Method

                '                        ''''''''''''''''''''''''''''''
                '                        If ((txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
                '                            'If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                '                            Dim commandValues1 As MySqlCommand = New MySqlCommand

                '                            commandValues1.CommandType = CommandType.Text
                '                            commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                            commandValues1.Connection = conn

                '                            Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                '                            Dim dtValues1 As New DataTable
                '                            dtValues1.Load(drValues1)

                '                            If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then


                '                                '''' Monthly and higher

                '                                Dim commandValues10 As MySqlCommand = New MySqlCommand

                '                                commandValues10.CommandType = CommandType.Text
                '                                commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                                commandValues10.Connection = conn

                '                                Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                '                                Dim dtValues10 As New DataTable
                '                                dtValues10.Load(drValues10)

                '                                If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues2 As MySqlCommand = New MySqlCommand

                '                                    commandValues2.CommandType = CommandType.Text
                '                                    commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                                    commandValues2.Connection = conn

                '                                    Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                '                                    Dim dtValues2 As New DataTable
                '                                    dtValues2.Load(drValues2)

                '                                    Dim ldistinctmonthyear As Integer

                '                                    ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                '                                    '''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues3 As MySqlCommand = New MySqlCommand

                '                                    commandValues3.CommandType = CommandType.Text
                '                                    commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                '                                    commandValues3.Connection = conn

                '                                    Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                '                                    Dim dtValues3 As New DataTable
                '                                    dtValues3.Load(drValues3)

                '                                    ''''''''' 31.10.17
                '                                    Dim lrcno As Long
                '                                    Dim lmonthear As String

                '                                    lrcno = 0
                '                                    lmonthear = ""

                '                                    lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                '                                    lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                '                                    ''''''''' 31.10.17

                '                                    For Each row As DataRow In dtValues3.Rows

                '                                        Dim updateval As Decimal = 0.0
                '                                        updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                '                                        'Dim commandVal4 As MySqlCommand = New MySqlCommand
                '                                        'commandVal4.CommandType = CommandType.Text
                '                                        'commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        'commandVal4.Parameters.Clear()

                '                                        'commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                '                                        ''commandVal4.Parameters.AddWithValue("@Val", updateval)

                '                                        'commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                '                                        'commandVal4.Connection = conn
                '                                        'commandVal4.ExecuteScalar()

                '                                        'commandVal4.Dispose()

                '                                        ''''''''' 31.10.17
                '                                        If lmonthear <> row("MonthYear") Then

                '                                            Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                '                                            commandSumMonthYear.CommandType = CommandType.Text
                '                                            commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                            commandSumMonthYear.Connection = conn

                '                                            Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                '                                            Dim dtSumMonthYear As New DataTable
                '                                            dtSumMonthYear.Load(drSumMonthYear)
                '                                            Dim monthyearsum As Decimal = 0.0

                '                                            monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                '                                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                                Dim addiff As Decimal = 0.0
                '                                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                '                                                ' Retrive the last value for the month

                '                                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                                commandLastVal.CommandType = CommandType.Text
                '                                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                                commandLastVal.Connection = conn

                '                                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                                Dim dtLastVal As New DataTable
                '                                                dtLastVal.Load(drLastVal)


                '                                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                                ' Retrive the last value for the month

                '                                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                                commandupdateAddDiff.CommandType = CommandType.Text
                '                                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                                commandupdateAddDiff.Parameters.Clear()

                '                                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                '                                                commandupdateAddDiff.Connection = conn
                '                                                commandupdateAddDiff.ExecuteScalar()

                '                                                commandupdateAddDiff.Dispose()
                '                                                'End If
                '                                            End If


                '                                            lrcno = row("Rcno")
                '                                            lmonthear = row("MonthYear")
                '                                        Else
                '                                            lrcno = row("Rcno")
                '                                        End If

                '                                        ''''''''' 31.10.17

                '                                    Next row

                '                                    commandValues3.Dispose()




                '                                    '''''''''''''''''''' for the last recrd


                '                                    Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                '                                    commandSumMonthYear1.CommandType = CommandType.Text
                '                                    commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                    commandSumMonthYear1.Connection = conn

                '                                    Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                '                                    Dim dtSumMonthYear1 As New DataTable
                '                                    dtSumMonthYear1.Load(drSumMonthYear1)
                '                                    Dim monthyearsum1 As Decimal = 0.0

                '                                    monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                '                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                        Dim addiff As Decimal = 0.0
                '                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                '                                        ' Retrive the last value for the month

                '                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                        commandLastVal.CommandType = CommandType.Text
                '                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                        commandLastVal.Connection = conn

                '                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                        Dim dtLastVal As New DataTable
                '                                        dtLastVal.Load(drLastVal)


                '                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                        ' Retrive the last value for the month

                '                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                        commandupdateAddDiff.CommandType = CommandType.Text
                '                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        commandupdateAddDiff.Parameters.Clear()

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                '                                        commandupdateAddDiff.Connection = conn
                '                                        commandupdateAddDiff.ExecuteScalar()

                '                                        commandupdateAddDiff.Dispose()
                '                                        'End If
                '                                    End If

                '                                    '''''''''''''''''' for the last record


                '                                ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues2 As MySqlCommand = New MySqlCommand

                '                                    commandValues2.CommandType = CommandType.Text
                '                                    commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                                    commandValues2.Connection = conn

                '                                    Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                '                                    Dim dtValues2 As New DataTable
                '                                    dtValues2.Load(drValues2)

                '                                    Dim ldistinctmonthyear As Integer

                '                                    ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                '                                    '''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues3 As MySqlCommand = New MySqlCommand

                '                                    commandValues3.CommandType = CommandType.Text
                '                                    commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                '                                    commandValues3.Connection = conn

                '                                    Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                '                                    Dim dtValues3 As New DataTable
                '                                    dtValues3.Load(drValues3)


                '                                    ''''''''' 31.10.17
                '                                    Dim lrcno As Long
                '                                    Dim lmonthear As String

                '                                    lrcno = 0
                '                                    lmonthear = ""

                '                                    lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                '                                    lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                '                                    ''''''''' 31.10.17
                '                                    For Each row As DataRow In dtValues3.Rows

                '                                        Dim updateval As Decimal = 0.0
                '                                        updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")



                '                                        ''''''''' 31.10.17
                '                                        If lmonthear <> row("MonthYear") Then

                '                                            Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                '                                            commandSumMonthYear.CommandType = CommandType.Text
                '                                            commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                            commandSumMonthYear.Connection = conn

                '                                            Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                '                                            Dim dtSumMonthYear As New DataTable
                '                                            dtSumMonthYear.Load(drSumMonthYear)
                '                                            Dim monthyearsum As Decimal = 0.0

                '                                            monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                '                                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                                Dim addiff As Decimal = 0.0
                '                                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                '                                                ' Retrive the last value for the month

                '                                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                                commandLastVal.CommandType = CommandType.Text
                '                                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                                commandLastVal.Connection = conn

                '                                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                                Dim dtLastVal As New DataTable
                '                                                dtLastVal.Load(drLastVal)


                '                                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                                ' Retrive the last value for the month

                '                                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                                commandupdateAddDiff.CommandType = CommandType.Text
                '                                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                                commandupdateAddDiff.Parameters.Clear()
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                '                                                commandupdateAddDiff.Connection = conn
                '                                                commandupdateAddDiff.ExecuteScalar()
                '                                                commandupdateAddDiff.Dispose()
                '                                                'End If
                '                                            End If


                '                                            lrcno = row("Rcno")
                '                                            lmonthear = row("MonthYear")
                '                                        Else
                '                                            lrcno = row("Rcno")
                '                                        End If

                '                                        ''''''''' 31.10.17
                '                                    Next row
                '                                    commandValues3.Dispose()


                '                                    '''''''''''''''''''' for the last recrd
                '                                    Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                '                                    commandSumMonthYear1.CommandType = CommandType.Text
                '                                    commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                    commandSumMonthYear1.Connection = conn

                '                                    Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                '                                    Dim dtSumMonthYear1 As New DataTable
                '                                    dtSumMonthYear1.Load(drSumMonthYear1)
                '                                    Dim monthyearsum1 As Decimal = 0.0

                '                                    monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                '                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                        Dim addiff As Decimal = 0.0
                '                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                '                                        ' Retrive the last value for the month

                '                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                        commandLastVal.CommandType = CommandType.Text
                '                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                        commandLastVal.Connection = conn

                '                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                        Dim dtLastVal As New DataTable
                '                                        dtLastVal.Load(drLastVal)


                '                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                        ' Retrive the last value for the month

                '                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                        commandupdateAddDiff.CommandType = CommandType.Text
                '                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        commandupdateAddDiff.Parameters.Clear()

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                '                                        commandupdateAddDiff.Connection = conn
                '                                        commandupdateAddDiff.ExecuteScalar()

                '                                        commandupdateAddDiff.Dispose()
                '                                        dtLastVal.Dispose()
                '                                        commandLastVal.Dispose()

                '                                        'End If
                '                                    End If
                '                                    commandSumMonthYear1.Dispose()
                '                                    dtSumMonthYear1.Dispose()
                '                                    '''''''''''''''''' for the last record
                '                                End If
                '                                commandValues1.Dispose()
                '                                commandValues10.Dispose()
                '                                dtValues1.Dispose()
                '                                dtValues10.Dispose()

                '                            End If
                '                        End If



                '                        ''''''''''''''''''''''''''''''''''''''''

                '                        ''''''''''''''' 15.07

                '                        If txtComputationMethod1.Text = "Fixed Contract Value" Then
                '                            Dim dblTotalValue As Decimal = 0.0
                '                            Dim dbldiff As Decimal = 0.0

                '                            Dim rcnoAdjusted As Integer = 0
                '                            Dim ValueAdjusted As Decimal = 0.0

                '                            Dim commandFixedValue As MySqlCommand = New MySqlCommand

                '                            commandFixedValue.CommandType = CommandType.Text
                '                            commandFixedValue.CommandText = "SELECT sum(value) as totalvalue FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y'"
                '                            commandFixedValue.Connection = conn

                '                            Dim drFixedValue As MySqlDataReader = commandFixedValue.ExecuteReader()
                '                            Dim dtFixedValue As New DataTable
                '                            dtFixedValue.Load(drFixedValue)

                '                            dblTotalValue = Convert.ToDouble(dtFixedValue.Rows(0)("totalvalue").ToString)


                '                            'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                '                            '    dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                '                            'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '                            '    dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                '                            'End If

                '                            'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                '                            dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                '                            'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '                            'dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                '                            'End If
                '                            '''''''''''''''

                '                            Dim commandAdjustLastRecord As MySqlCommand = New MySqlCommand
                '                            commandAdjustLastRecord.CommandType = CommandType.Text
                '                            commandAdjustLastRecord.CommandText = "select rcno, Value from tbwserviceschedule  where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y' order by ServiceDate desc limit 1"
                '                            commandAdjustLastRecord.Connection = conn

                '                            Dim drAdjustLastRecord As MySqlDataReader = commandAdjustLastRecord.ExecuteReader()
                '                            Dim dtAdjustLastRecord As New DataTable
                '                            dtAdjustLastRecord.Load(drAdjustLastRecord)

                '                            If dtAdjustLastRecord.Rows.Count > 0 Then
                '                                rcnoAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("rcno").ToString)
                '                                ValueAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("Value").ToString)
                '                            End If
                '                            ''''''''''''''''''''

                '                            '''''''''''''''''''''''
                '                            Dim AdjustValue As Decimal = 0.0

                '                            'If dbldiff > 0 Then
                '                            '    AdjustValue = ValueAdjusted - dbldiff
                '                            'Else
                '                            '    AdjustValue = ValueAdjusted + dbldiff
                '                            'End If

                '                            AdjustValue = ValueAdjusted + dbldiff

                '                            Dim commandAdjustLastRec As MySqlCommand = New MySqlCommand
                '                            commandAdjustLastRec.CommandType = CommandType.Text

                '                            Dim qryT As String = "UPDATE tbwserviceschedule SET  Value = " & AdjustValue & " where rcno = " & rcnoAdjusted

                '                            commandAdjustLastRec.CommandText = qryT
                '                            commandAdjustLastRec.Parameters.Clear()
                '                            commandAdjustLastRec.Connection = conn
                '                            commandAdjustLastRec.ExecuteNonQuery()

                '                            commandAdjustLastRecord.Dispose()
                '                            commandAdjustLastRec.Dispose()

                '                        End If

                '                        '''''''''''''''''''''''''''''
                '                        '' End: update for fixed value

                '                        ''''''''''''''''''''''''''''''

                '                        '''''''''''''''''''''''''''''
                '                        '' Start: update for Monthly Computaion Method

                '                        ''''''''''''''''''''''''''''''
                '                        'If ((txtComputationMethod1.Text = "Monthly") Or (txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
                '                        If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                '                            Dim commandValues1 As MySqlCommand = New MySqlCommand

                '                            commandValues1.CommandType = CommandType.Text
                '                            commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                            commandValues1.Connection = conn

                '                            Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                '                            Dim dtValues1 As New DataTable
                '                            dtValues1.Load(drValues1)

                '                            If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then

                '                                '''' Monthly and higher

                '                                Dim commandValues10 As MySqlCommand = New MySqlCommand

                '                                commandValues10.CommandType = CommandType.Text
                '                                commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                                commandValues10.Connection = conn

                '                                Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                '                                Dim dtValues10 As New DataTable
                '                                dtValues10.Load(drValues10)

                '                                If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues2 As MySqlCommand = New MySqlCommand

                '                                    commandValues2.CommandType = CommandType.Text
                '                                    commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                                    commandValues2.Connection = conn

                '                                    Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                '                                    Dim dtValues2 As New DataTable
                '                                    dtValues2.Load(drValues2)

                '                                    Dim ldistinctmonthyear As Integer

                '                                    ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                '                                    '''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues3 As MySqlCommand = New MySqlCommand

                '                                    commandValues3.CommandType = CommandType.Text
                '                                    commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                '                                    commandValues3.Connection = conn

                '                                    Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                '                                    Dim dtValues3 As New DataTable
                '                                    dtValues3.Load(drValues3)

                '                                    ''''''''' 31.10.17
                '                                    Dim lrcno As Long
                '                                    Dim lmonthear As String

                '                                    lrcno = 0
                '                                    lmonthear = ""

                '                                    lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                '                                    lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                '                                    ''''''''' 31.10.17

                '                                    For Each row As DataRow In dtValues3.Rows

                '                                        Dim updateval As Decimal = 0.0
                '                                        updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                '                                        Dim commandVal4 As MySqlCommand = New MySqlCommand
                '                                        commandVal4.CommandType = CommandType.Text
                '                                        commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        commandVal4.Parameters.Clear()

                '                                        commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                '                                        'commandVal4.Parameters.AddWithValue("@Val", updateval)

                '                                        commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                '                                        commandVal4.Connection = conn
                '                                        commandVal4.ExecuteScalar()

                '                                        commandVal4.Dispose()

                '                                        ''''''''' 31.10.17
                '                                        If lmonthear <> row("MonthYear") Then

                '                                            Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                '                                            commandSumMonthYear.CommandType = CommandType.Text
                '                                            commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                            commandSumMonthYear.Connection = conn

                '                                            Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                '                                            Dim dtSumMonthYear As New DataTable
                '                                            dtSumMonthYear.Load(drSumMonthYear)
                '                                            Dim monthyearsum As Decimal = 0.0

                '                                            monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                '                                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                                Dim addiff As Decimal = 0.0
                '                                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                '                                                ' Retrive the last value for the month

                '                                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                                commandLastVal.CommandType = CommandType.Text
                '                                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                                commandLastVal.Connection = conn

                '                                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                                Dim dtLastVal As New DataTable
                '                                                dtLastVal.Load(drLastVal)


                '                                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                                ' Retrive the last value for the month

                '                                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                                commandupdateAddDiff.CommandType = CommandType.Text
                '                                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                                commandupdateAddDiff.Parameters.Clear()

                '                                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                '                                                commandupdateAddDiff.Connection = conn
                '                                                commandupdateAddDiff.ExecuteScalar()

                '                                                commandupdateAddDiff.Dispose()
                '                                                'End If
                '                                            End If


                '                                            lrcno = row("Rcno")
                '                                            lmonthear = row("MonthYear")
                '                                        Else
                '                                            lrcno = row("Rcno")
                '                                        End If

                '                                        ''''''''' 31.10.17

                '                                    Next row

                '                                    commandValues3.Dispose()




                '                                    '''''''''''''''''''' for the last recrd


                '                                    Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                '                                    commandSumMonthYear1.CommandType = CommandType.Text
                '                                    commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                    commandSumMonthYear1.Connection = conn

                '                                    Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                '                                    Dim dtSumMonthYear1 As New DataTable
                '                                    dtSumMonthYear1.Load(drSumMonthYear1)
                '                                    Dim monthyearsum1 As Decimal = 0.0

                '                                    monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                '                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                        Dim addiff As Decimal = 0.0
                '                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                '                                        ' Retrive the last value for the month

                '                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                        commandLastVal.CommandType = CommandType.Text
                '                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                        commandLastVal.Connection = conn

                '                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                        Dim dtLastVal As New DataTable
                '                                        dtLastVal.Load(drLastVal)


                '                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                        ' Retrive the last value for the month

                '                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                        commandupdateAddDiff.CommandType = CommandType.Text
                '                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        commandupdateAddDiff.Parameters.Clear()

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                '                                        commandupdateAddDiff.Connection = conn
                '                                        commandupdateAddDiff.ExecuteScalar()

                '                                        commandupdateAddDiff.Dispose()
                '                                        'End If
                '                                    End If

                '                                    '''''''''''''''''' for the last record


                '                                ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues2 As MySqlCommand = New MySqlCommand

                '                                    commandValues2.CommandType = CommandType.Text
                '                                    commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                '                                    commandValues2.Connection = conn

                '                                    Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                '                                    Dim dtValues2 As New DataTable
                '                                    dtValues2.Load(drValues2)

                '                                    Dim ldistinctmonthyear As Integer

                '                                    ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                '                                    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                '                                    '''''''''''''''''''''''''''''''''''''
                '                                    Dim commandValues3 As MySqlCommand = New MySqlCommand

                '                                    commandValues3.CommandType = CommandType.Text
                '                                    commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                '                                    commandValues3.Connection = conn

                '                                    Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                '                                    Dim dtValues3 As New DataTable
                '                                    dtValues3.Load(drValues3)


                '                                    ''''''''' 31.10.17
                '                                    Dim lrcno As Long
                '                                    Dim lmonthear As String

                '                                    lrcno = 0
                '                                    lmonthear = ""

                '                                    lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                '                                    lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                '                                    ''''''''' 31.10.17
                '                                    For Each row As DataRow In dtValues3.Rows

                '                                        Dim updateval As Decimal = 0.0
                '                                        updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")

                '                                        Dim commandVal4 As MySqlCommand = New MySqlCommand
                '                                        commandVal4.CommandType = CommandType.Text
                '                                        commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        commandVal4.Parameters.Clear()

                '                                        commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        'commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                '                                        'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear"))
                '                                        commandVal4.Parameters.AddWithValue("@Val", updateval)
                '                                        commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                '                                        commandVal4.Connection = conn
                '                                        commandVal4.ExecuteScalar()

                '                                        commandVal4.Dispose()


                '                                        ''''''''' 31.10.17
                '                                        If lmonthear <> row("MonthYear") Then

                '                                            Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                '                                            commandSumMonthYear.CommandType = CommandType.Text
                '                                            commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                            commandSumMonthYear.Connection = conn

                '                                            Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                '                                            Dim dtSumMonthYear As New DataTable
                '                                            dtSumMonthYear.Load(drSumMonthYear)
                '                                            Dim monthyearsum As Decimal = 0.0

                '                                            monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                '                                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                                Dim addiff As Decimal = 0.0
                '                                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                '                                                ' Retrive the last value for the month

                '                                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                                commandLastVal.CommandType = CommandType.Text
                '                                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                                commandLastVal.Connection = conn

                '                                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                                Dim dtLastVal As New DataTable
                '                                                dtLastVal.Load(drLastVal)


                '                                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                                ' Retrive the last value for the month

                '                                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                                commandupdateAddDiff.CommandType = CommandType.Text
                '                                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                                commandupdateAddDiff.Parameters.Clear()
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                '                                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                '                                                commandupdateAddDiff.Connection = conn
                '                                                commandupdateAddDiff.ExecuteScalar()
                '                                                commandupdateAddDiff.Dispose()
                '                                                'End If
                '                                            End If


                '                                            lrcno = row("Rcno")
                '                                            lmonthear = row("MonthYear")
                '                                        Else
                '                                            lrcno = row("Rcno")
                '                                        End If

                '                                        ''''''''' 31.10.17
                '                                    Next row
                '                                    commandValues3.Dispose()


                '                                    '''''''''''''''''''' for the last recrd
                '                                    Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                '                                    commandSumMonthYear1.CommandType = CommandType.Text
                '                                    commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                '                                    commandSumMonthYear1.Connection = conn

                '                                    Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                '                                    Dim dtSumMonthYear1 As New DataTable
                '                                    dtSumMonthYear1.Load(drSumMonthYear1)
                '                                    Dim monthyearsum1 As Decimal = 0.0

                '                                    monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                '                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                '                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                '                                        Dim addiff As Decimal = 0.0
                '                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                '                                        ' Retrive the last value for the month

                '                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                '                                        commandLastVal.CommandType = CommandType.Text
                '                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                '                                        commandLastVal.Connection = conn

                '                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                '                                        Dim dtLastVal As New DataTable
                '                                        dtLastVal.Load(drLastVal)


                '                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                '                                        ' Retrive the last value for the month

                '                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                '                                        commandupdateAddDiff.CommandType = CommandType.Text
                '                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                '                                        commandupdateAddDiff.Parameters.Clear()

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                '                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                '                                        commandupdateAddDiff.Connection = conn
                '                                        commandupdateAddDiff.ExecuteScalar()

                '                                        commandupdateAddDiff.Dispose()
                '                                        dtLastVal.Dispose()
                '                                        commandLastVal.Dispose()

                '                                        'End If
                '                                    End If
                '                                    commandSumMonthYear1.Dispose()
                '                                    dtSumMonthYear1.Dispose()
                '                                    '''''''''''''''''' for the last record
                '                                End If
                '                                commandValues1.Dispose()
                '                                commandValues10.Dispose()
                '                                dtValues1.Dispose()
                '                                dtValues10.Dispose()

                '                            End If
                '                        End If


                '                    End If ' If IsPerServiceValue = "N" Then 13.01.19

                '                    ''''''''''''''''''''''''''''''''''''''''

                '                    conn.Close()
                '                    conn.Dispose()

                '                    command1.Dispose()
                '                    command3.Dispose()
                '                    dtservicecontractDet.Dispose()
                '                    drservicecontractDet.Close()




                '                    SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

                '                    txtTotalRecords.Text = grvschedule.Rows.Count
                '                    If Convert.ToDouble(txtAgreeValue.Text) <> Convert.ToDouble(txtTotalServiceValue.Text) Then
                '                        AdjustLastRecord()
                '                    End If

                '                    'End:Scheduling
            End If
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "Page_Load", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Private Sub PopulateGrid()


        TotDetailRecords = 0
        txtMode.Text = "New"
        rowdeleted = False
        gTargetDesc = ""

        Dim startday As Integer
        startday = CDate(txtServStart.Text).Day
        startday = startday - 1
        startday = (-1) * startday

        txtMonthStartDate.Text = CDate(txtServStart.Text).AddDays(startday)

        startday = CDate(txtServEnd.Text).Day
        startday = startday
        startday = (-1) * startday
        txtMonthEndDate.Text = (CDate(txtServEnd.Text).AddMonths(1))
        txtMonthEndDate.Text = CDate(txtMonthEndDate.Text).AddDays(startday)


        'txtFrom.Text = CDate(txtServStart.Text)
        'txtTo.Text = CDate(txtServEnd.Text)

        'If txtFixedContinuous.Text = "FIXED" Then
        '    txtMonths.Visible = False
        '    lblMonths.Visible = False
        'Else
        '    Dim NoofMonth As Integer
        '    NoofMonth = DateDiff(DateInterval.Month, CDate(txtFrom.Text), CDate(txtTo.Text))
        '    txtMonths.Text = Convert.ToInt32(NoofMonth)

        'End If
        

        ''

        'Start: Scheduling

        Dim conn As MySqlConnection = New MySqlConnection(constr)
        conn.Open()

        Dim command3 As MySqlCommand = New MySqlCommand
        command3.CommandType = CommandType.Text

        command3.CommandText = "DELETE from tbwserviceschedule where ContractNo= @ContractNo"
        command3.Parameters.Clear()

        command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
        command3.Connection = conn
        command3.ExecuteNonQuery()

        'conn.Close()
        command3.Dispose()



        '17.10.20

        Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
        commandServiceRecordMasterSetup.CommandType = CommandType.Text
        commandServiceRecordMasterSetup.CommandText = "SELECT WindowsSVCAutoServiceSchedule  FROM tblservicerecordmastersetup"
        commandServiceRecordMasterSetup.Connection = conn

        Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
        Dim dtServiceRecordMasterSetup As New DataTable
        dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

        txtWindowsSVCAutoServiceSchedule.Text = dtServiceRecordMasterSetup.Rows(0)("WindowsSVCAutoServiceSchedule")

        'conn.Close()
        'conn.Dispose()
        commandServiceRecordMasterSetup.Dispose()
        '17.10.20
        Dim noOfInterval As Integer
        Dim tempStartDate, startDate As Date
        Dim isEnd As Boolean
        Dim dayofWeek, holiday As String, serviceDate As Date
        Dim Frequency As String

        Dim IsWeekly As String
        IsWeekly = "N"

        tempStartDate = txtServStart.Text
        txtBatchNo.Text = (txtContractNo.Text + Now()).Trim

        Dim d As Date
        'Dim strdate As Date
        If Date.TryParseExact(txtServStart.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
            tempStartDate = d.ToShortDateString
        End If

        ''

      

        Dim command1 As MySqlCommand = New MySqlCommand
        command1.CommandType = CommandType.Text
        command1.CommandText = "SELECT ContractNo, NoOfInterval, Frequency, ServiceID, ServiceDesc, Value, OrigCode, LocationID, ServiceName, Address1, LocateGRP, ServiceLocationGroup, Salesman FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
        command1.Connection = conn

        Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
        Dim dtservicecontractDet As New DataTable
        dtservicecontractDet.Load(drservicecontractDet)

        gproductService = ""
        gserviceValue = 0
        gSQLID = 0
        Dim isLaterThanEndDate As Boolean
        gActive = "Y"
        ''

        '''''''''''''''''''

        Dim commandPSV As MySqlCommand = New MySqlCommand
        commandPSV.CommandType = CommandType.Text
        commandPSV.CommandText = "SELECT count(rcno) as IsPSV FROM tblcontractdet where Value > 0.00 and ContractNo ='" & txtContractNo.Text & "'"
        commandPSV.Connection = conn

        Dim drservicecontractDetPSV As MySqlDataReader = commandPSV.ExecuteReader()
        Dim dtservicecontractDetPSV As New DataTable
        dtservicecontractDetPSV.Load(drservicecontractDetPSV)



        ''''''''''''''''''
        'Dim IsPerServiceValue As String
        'Dim PerServiceValue As Decimal
        'IsPerServiceValue = "N"
        'PerServiceValue = 0.0

        'PerServiceValue = dtservicecontractDet.Rows(0)("Value").ToString()

        Dim IsPerServiceValue As String
        Dim PerServiceValue As Long
        IsPerServiceValue = "N"
        PerServiceValue = 0

        PerServiceValue = dtservicecontractDetPSV.Rows(0)("IsPSV").ToString()

        If PerServiceValue > 0 Then
            IsPerServiceValue = "Y"
        Else
            IsPerServiceValue = "N"
        End If



        '' start if PersErviceValue is N

        If IsPerServiceValue = "N" Then

            For i = 0 To dtservicecontractDet.Rows.Count - 1

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                command2.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                command2.Dispose()

                If noOfInterval = 0 Then Continue For

                gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()

                gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()
                gServiceLocationGroup = dtservicecontractDet.Rows(i)("ServiceLocationGroup").ToString()
                gSalesman = dtservicecontractDet.Rows(i)("Salesman").ToString()

                'Target

                gtargetID_SR = ""
                gTargetDesc = ""
                Dim lreason As String
                Dim commandTarget As MySqlCommand = New MySqlCommand
                commandTarget.CommandType = CommandType.Text

                commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                commandTarget.Connection = conn

                Dim laction As String

                'Dim gtargetID_SR As String

                laction = ""
                lreason = ""
                gtargetID_SR = ""

                Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                Dim dtTarget As New DataTable
                dtTarget.Load(drTarget)

                If dtTarget.Rows.Count Then
                    For t = 0 To dtTarget.Rows.Count - 1
                        If lreason <> "" Then lreason = lreason & vbCrLf
                        lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
                        If gtargetID_SR <> "" Then gtargetID_SR = gtargetID_SR & ", "
                        'gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetDesc").ToString()
                        gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetID").ToString()  'modified on 02.05.17
                    Next
                End If


                'Target

                ''''''''''''''''''''''''''FREQUENCY ''''''''''''''''''''''''''''''''

                '' Daily
                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "DAILY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    'dtservicecontractDet.Rows(0)("Frequency").ToString()
                    For j = 1 To noOfInterval
                        serviceDate = tempStartDate.AddDays((j - 1))
                        'dgv24SCSchedule.Rows.Add(1)
                        'rowIndex = dgv24SCSchedule.Rows.Count - 1

                        dayofWeek = ""
                        Select Case pWeekNumber(serviceDate)
                            Case 1
                                dayofWeek = "1st "
                            Case 2
                                dayofWeek = "2nd "
                            Case 3
                                dayofWeek = "3rd "
                            Case 4
                                dayofWeek = "4th "
                            Case 5
                                dayofWeek = "5th "
                        End Select
                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                        holiday = ""


                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                        gServiceDatestr = gServiceDate
                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                        gdayofWeek = dayofWeek
                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                        RowIndexSch = j - 1
                        AddNewRowSch()

                    Next

                    ''End:Daily


                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "ADHOC" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "PER-SERVICE" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SVC CALL" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOLLOW UP" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        serviceDate = tempStartDate.AddDays((j - 1))

                        dayofWeek = ""
                        Select Case pWeekNumber(serviceDate)
                            Case 1
                                dayofWeek = "1st "
                            Case 2
                                dayofWeek = "2nd "
                            Case 3
                                dayofWeek = "3rd "
                            Case 4
                                dayofWeek = "4th "
                            Case 5
                                dayofWeek = "5th "
                        End Select
                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                        holiday = ""


                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                        gServiceDatestr = gServiceDate
                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                        gdayofWeek = dayofWeek
                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                        RowIndexSch = j - 1
                        AddNewRowSch()

                    Next

                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                    IsWeekly = "Y"
                    isLaterThanEndDate = False
                    Dim daysAdded As Integer = 0
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                            'serviceDate = tempStartDate.AddDays(daysAdded)
                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                isEnd = False
                                Do Until isEnd = True
                                    serviceDate = serviceDate.AddDays(1)
                                    daysAdded = daysAdded + 1
                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        isEnd = True
                                        Exit Do
                                    End If
                                Loop
                            Else
                                daysAdded = daysAdded + 1
                            End If



                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'AddNewRowSch()

                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            Else
                                AddNewRowSch()
                            End If
                            holiday = ""
                        Next
                    Next

                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                    Dim daysAdded As Integer = 0
                    isLaterThanEndDate = False

                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    'serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If

                                'AddNewRowSch()

                                holiday = ""
                            End If
                        Next

                    Next
                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(14 * (j - 1))
                                If weekno = 2 Then startDate = startDate.AddDays(7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()

                                holiday = ""

                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then
                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(21 * (j - 1))
                                If weekno = 2 Then
                                    startDate = startDate.AddDays(7)
                                ElseIf weekno = 3 Then
                                    startDate = startDate.AddDays(14)
                                End If

                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()


                                holiday = ""
                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                    'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim firstMonthHasRec As Boolean = True
                    Dim fromMonth = 1
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne:
                    For j = fromMonth To noOfInterval + 1

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'startDate = tempStartDate.AddMonths(j - 1)

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1))
                            End If


                            Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                            If dayNo > 0 Then
                                'day no
                                If startDate.Day <> dayNo Then
                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        ' startDate = tempStartDate.AddMonths(j - 1)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                                        End If
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                startDate = startDate.AddDays((weekno - 1) * 7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                            End If

                            serviceDate = startDate

                            ''''''''''''''''''''

                            'firstDayOfMonth = CDate("01/" & serviceDate.ToString("MM/yyyy"))
                            '''''''''''''''''''''''

                            If j = 1 Then
                                If serviceDate < tempStartDate Then
                                    'noOfInterval = noOfInterval + 1
                                    'weekno = weekno + 1
                                    'fromMonth = 2
                                    'GoTo IntervalAddOne
                                    GoTo nextrec
                                End If
                            End If

                            '''''''''''''''''''''
                            If j = 1 Then
                                If dayNo > 0 Then
                                    If dayNo < tempStartDate.Day Then
                                        noOfInterval = noOfInterval + 1
                                        fromMonth = 2
                                        j = j + 1
                                        GoTo IntervalAddOne
                                    End If
                                End If
                            End If
                            '''''''''''''''''''''

                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                                'GoTo nextrec
                            End If

                            'serviceDate = startDate
                            'txtServiceDate.Text = startDate.ToString()

                            'dgv24SCSchedule.Rows.Add(1)
                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            'gServiceDate = serviceDate


                            'Dim gServiceDatestr As String
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            'gServiceDate = gServiceDatestr
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                            '    RowIndexSch = j - 2
                            'Else
                            '    RowIndexSch = j - 1
                            'End If
                            AddNewRowSch()

nextrec:
                        Next

                    Next


                    ''

                    '14.11.19

                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim interval1 As Integer = 0

                    'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                    'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                    Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                        Case "BI-MONTHLY"
                            interval1 = 2
                        Case "QUARTERLY"
                            interval1 = 3
                        Case "HALF-ANNUALLY"
                            interval1 = 6
                        Case "THRICE-ANNUALLY"
                            interval1 = 4
                        Case "ANNUALLY"
                            interval1 = 12
                        Case "BI-ANNUALLY"
                            interval1 = 24
                    End Select


                    If interval1 = 0 Then Continue For
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                            End If

                            Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                            Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                            If dayNo > 0 And monthNo > 0 Then
                                If j = 1 Then
                                    startDate = startDate.AddMonths(monthNo - 1)
                                End If

                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                If startDate.Day <> dayNo Then

                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True

                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                        End If

                                        startDate = startDate.AddMonths(monthNo - 1)
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                                'Start: 14.11.19
                            ElseIf dayNo = 0 And monthNo > 0 Then
                                If j = 1 Then
                                    startDate = startDate.AddMonths(monthNo - 1)
                                End If

                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                'test

                                If weekno.ToUpper = "L" Then
                                    'startDate = startDate.AddMonths(interval1).AddDays(-1)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(-1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else

                                    If j <> 1 Then
                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                    Else
                                        'Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                        Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno)) * 7)

                                        'If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        '    isEnd = False
                                        '    Do Until isEnd = True
                                        '        weekNoDate = weekNoDate.AddDays(1)
                                        '        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        '            isEnd = True
                                        '            Exit Do
                                        '        End If
                                        '    Loop
                                        'End If

                                        If Date.Compare(startDate, weekNoDate) > 0 Then
                                            'startDate = firstDayOfMonth.AddMonths(1)
                                            startDate = firstDayOfMonth.AddMonths(monthNo - 1)
                                            firstDayOfMonth = startDate
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        End If
                                    End If
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If
                                'test


                                'If startDate.Day <> dayNo Then

                                'isEnd = False
                                'For l = 1 To totalDays - 1
                                '    startDate = startDate.AddDays(1)
                                '    If startDate.Day = dayNo Then
                                '        isEnd = True

                                '        Exit For
                                '    End If
                                'Next
                                'If isEnd = False Then
                                '    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                '    If j = 1 Then
                                '        'startDate = tempStartDate
                                '        startDate = tempStartDate.AddMonths(monthNo - 1)
                                '    Else
                                '        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                '    End If


                                '    'startDate = startDate.AddMonths(monthNo - 1)
                                '    startDate = startDate.AddMonths(monthNo)
                                '    If startDate.Month = monthEndDate.Month Then
                                '        startDate = monthEndDate
                                '    Else
                                '        If startDate.Day > dayNo Then
                                '            Continue For
                                '        Else
                                '            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                '            If IsDate("30" & monthStr) Then
                                '                startDate = CDate("30" & monthStr)
                                '            ElseIf IsDate("29" & monthStr) Then
                                '                startDate = CDate("29" & monthStr)
                                '            ElseIf IsDate("28" & monthStr) Then
                                '                startDate = CDate("28" & monthStr)
                                '            End If
                                '        End If
                                '    End If
                                'End If
                                'End If

                                'end: 14.11.19
                            Else
                                If weekno.ToUpper = "L" Then
                                    startDate = startDate.AddMonths(interval1).AddDays(-1)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(-1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else

                                    If j <> 1 Then
                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                    Else
                                        Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                        If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                weekNoDate = weekNoDate.AddDays(1)
                                                If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If

                                        If Date.Compare(startDate, weekNoDate) > 0 Then
                                            startDate = firstDayOfMonth.AddMonths(1)
                                            firstDayOfMonth = startDate
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        End If
                                    End If
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                            End If
                            serviceDate = startDate
                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            End If

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                            If dayNo > 0 And monthNo > 0 Then
                                If j = 1 Then
                                    firstDayOfMonth = gServiceDate  ''27.06.18
                                End If
                            End If

                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                            RowIndexSch = j - 1

                            If isLaterThanEndDate = False Then
                                AddNewRowSch()
                            End If
                            'holiday = ""

                        Next
                    Next
                    '14.11.19


                    'start:22.12.19

                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                    Dim interval1 As Integer = 0
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                    'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                    Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                        Case "BI-MONTHLY"
                            interval1 = 2
                        Case "QUARTERLY"
                            interval1 = 3
                        Case "HALF-ANNUALLY"
                            interval1 = 6
                        Case "THRICE-ANNUALLY"
                            interval1 = 4
                        Case "ANNUALLY"
                            interval1 = 12
                        Case "BI-ANNUALLY"
                            interval1 = 24
                    End Select


                    If interval1 = 0 Then Continue For
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                            End If

                            Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                            Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                            If dayNo > 0 And monthNo > 0 Then
                                If j = 1 Then
                                    startDate = startDate.AddMonths(monthNo - 1)
                                End If

                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                If startDate.Day <> dayNo Then

                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True

                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                        End If

                                        startDate = startDate.AddMonths(monthNo - 1)
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                                'Start: 14.11.19
                            ElseIf dayNo = 0 And monthNo > 0 Then
                                If j = 1 Then
                                    startDate = startDate.AddMonths(monthNo - 1)
                                End If

                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                'test

                                If weekno.ToUpper = "L" Then
                                    'startDate = startDate.AddMonths(interval1).AddDays(-1)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(-1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else

                                    If j <> 1 Then
                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                    Else
                                        'Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                        Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno)) * 7)

                                        'If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        '    isEnd = False
                                        '    Do Until isEnd = True
                                        '        weekNoDate = weekNoDate.AddDays(1)
                                        '        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        '            isEnd = True
                                        '            Exit Do
                                        '        End If
                                        '    Loop
                                        'End If

                                        If Date.Compare(startDate, weekNoDate) > 0 Then
                                            'startDate = firstDayOfMonth.AddMonths(1)
                                            startDate = firstDayOfMonth.AddMonths(monthNo - 1)
                                            firstDayOfMonth = startDate
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        End If
                                    End If
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If
                                'test


                                'If startDate.Day <> dayNo Then

                                'isEnd = False
                                'For l = 1 To totalDays - 1
                                '    startDate = startDate.AddDays(1)
                                '    If startDate.Day = dayNo Then
                                '        isEnd = True

                                '        Exit For
                                '    End If
                                'Next
                                'If isEnd = False Then
                                '    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                '    If j = 1 Then
                                '        'startDate = tempStartDate
                                '        startDate = tempStartDate.AddMonths(monthNo - 1)
                                '    Else
                                '        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                '    End If


                                '    'startDate = startDate.AddMonths(monthNo - 1)
                                '    startDate = startDate.AddMonths(monthNo)
                                '    If startDate.Month = monthEndDate.Month Then
                                '        startDate = monthEndDate
                                '    Else
                                '        If startDate.Day > dayNo Then
                                '            Continue For
                                '        Else
                                '            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                '            If IsDate("30" & monthStr) Then
                                '                startDate = CDate("30" & monthStr)
                                '            ElseIf IsDate("29" & monthStr) Then
                                '                startDate = CDate("29" & monthStr)
                                '            ElseIf IsDate("28" & monthStr) Then
                                '                startDate = CDate("28" & monthStr)
                                '            End If
                                '        End If
                                '    End If
                                'End If
                                'End If

                                'end: 14.11.19
                            Else
                                If weekno.ToUpper = "L" Then
                                    startDate = startDate.AddMonths(interval1).AddDays(-1)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(-1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else

                                    If j <> 1 Then
                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                    Else
                                        Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                        If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                weekNoDate = weekNoDate.AddDays(1)
                                                If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If

                                        If Date.Compare(startDate, weekNoDate) > 0 Then
                                            startDate = firstDayOfMonth.AddMonths(1)
                                            firstDayOfMonth = startDate
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        End If
                                    End If
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                            End If
                            serviceDate = startDate
                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            End If

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                            If dayNo > 0 And monthNo > 0 Then
                                If j = 1 Then
                                    firstDayOfMonth = gServiceDate  ''27.06.18
                                End If
                            End If

                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                            RowIndexSch = j - 1
                            AddNewRowSch()

                            'holiday = ""

                        Next
                    Next
                    'end:22.12.19

                    'ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                    Dim interval1 As Integer = 0
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                    'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                    Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                        Case "BI-MONTHLY"
                            interval1 = 2
                        Case "QUARTERLY"
                            interval1 = 3
                        Case "HALF-ANNUALLY"
                            interval1 = 6
                        Case "THRICE-ANNUALLY"
                            interval1 = 4
                        Case "ANNUALLY"
                            interval1 = 12
                        Case "BI-ANNUALLY"
                            interval1 = 24
                    End Select


                    If interval1 = 0 Then Continue For
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                            End If

                            Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                            Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                            If dayNo > 0 And monthNo > 0 Then
                                If j = 1 Then
                                    startDate = startDate.AddMonths(monthNo - 1)
                                End If

                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                If startDate.Day <> dayNo Then

                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True



                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                        End If

                                        startDate = startDate.AddMonths(monthNo - 1)
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                If weekno.ToUpper = "L" Then
                                    startDate = startDate.AddMonths(interval1).AddDays(-1)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(-1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else

                                    If j <> 1 Then
                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                    Else
                                        Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                        If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                weekNoDate = weekNoDate.AddDays(1)
                                                If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If

                                        If Date.Compare(startDate, weekNoDate) > 0 Then
                                            startDate = firstDayOfMonth.AddMonths(1)
                                            firstDayOfMonth = startDate
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        End If
                                    End If
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                            End If
                            serviceDate = startDate
                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            End If

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                            If dayNo > 0 And monthNo > 0 Then
                                If j = 1 Then
                                    firstDayOfMonth = gServiceDate  ''27.06.18
                                End If
                            End If

                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                            RowIndexSch = j - 1
                            AddNewRowSch()

                            'holiday = ""

                        Next
                    Next
                    ''
                End If
            Next

            'conn.Close()

            'Exit Sub

            '2. (IsPerServiceValue = "N")

            'Start: for Quarterly / Half Annually / Annually

            Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
            commandDailyWeekly.CommandType = CommandType.Text
            commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
            commandDailyWeekly.Connection = conn

            Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
            Dim dtContractDailyWeekly As New DataTable
            dtContractDailyWeekly.Load(drContractDailyWeekly)
            Dim lServiceVal As Decimal

            If Val(dtContractDailyWeekly.Rows(0)("dailyweekly").ToString) = 0 Then

                'start quoted :16.12.20
                Dim commandDailyWeeklyUpd As MySqlCommand = New MySqlCommand
                commandDailyWeeklyUpd.CommandType = CommandType.Text
                commandDailyWeeklyUpd.CommandText = "SELECT count((ServiceDate)) as DW FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                commandDailyWeeklyUpd.Connection = conn

                Dim drDailyWeeklyUpd As MySqlDataReader = commandDailyWeeklyUpd.ExecuteReader()
                Dim dtDailyWeeklyUpd As New DataTable
                dtDailyWeeklyUpd.Load(drDailyWeeklyUpd)

                '''
                Dim commandDailyWeeklyFre As MySqlCommand = New MySqlCommand
                commandDailyWeeklyFre.CommandType = CommandType.Text
                commandDailyWeeklyFre.CommandText = "SELECT Frequency FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                commandDailyWeeklyFre.Connection = conn

                Dim drDailyWeeklyUpdFre As MySqlDataReader = commandDailyWeeklyFre.ExecuteReader()
                Dim dtDailyWeeklyUpdFre As New DataTable
                dtDailyWeeklyUpdFre.Load(drDailyWeeklyUpdFre)

                '''

                'lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)

                If dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "MONTHLY" Then
                    lServiceVal = Convert.ToDouble(txtValPerMnth.Text)
                ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "QUARTERLY" Then
                    lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 3
                ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "BI-MONTHLY" Then
                    lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 2
                ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "HALF-ANNUALLY" Then
                    lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 6
                ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "ANNUALLY" Then
                    lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 12
                Else
                    lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)
                End If

                Dim commandValUpd As MySqlCommand = New MySqlCommand
                commandValUpd.CommandType = CommandType.Text
                commandValUpd.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo"
                commandValUpd.Parameters.Clear()

                commandValUpd.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                'commandValUpd.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                commandValUpd.Parameters.AddWithValue("@Val", Math.Round(lServiceVal, 2))
                'commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                commandValUpd.Connection = conn
                commandValUpd.ExecuteScalar()

                'end quoted: 16.12.20

                GoTo EndScheduling

            End If

            'End: for Quarterly / Half Annually / Annually


            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
            commandMaxSrviceDate.CommandType = CommandType.Text
            commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
            commandMaxSrviceDate.Connection = conn1

            Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
            Dim dtMaxSrviceDate As New DataTable
            dtMaxSrviceDate.Load(drMaxSrviceDate)

            If dtMaxSrviceDate.Rows.Count > 0 Then
                gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
            End If

            conn1.Close()
            conn1.Dispose()
            'Exit Sub

            '3. (IsPerServiceValue = "N")
            ''''''''''''''''''Start: Previous Dates

            gActive = "N"
            For i = 0 To dtservicecontractDet.Rows.Count - 1

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                command2.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()


                command2.Dispose()

                If noOfInterval = 0 Then Continue For

                gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()





                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                    IsWeekly = "Y"
                    isLaterThanEndDate = False
                    Dim daysAdded As Integer = 0
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                            serviceDate = tempStartDate.AddDays(7 * (-j))
                            'serviceDate = tempStartDate.AddDays(daysAdded)
                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                isEnd = False
                                Do Until isEnd = True
                                    serviceDate = serviceDate.AddDays(1)
                                    daysAdded = daysAdded + 1
                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        isEnd = True
                                        Exit Do
                                    End If
                                Loop
                            Else
                                daysAdded = daysAdded + 1
                            End If

                            'isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            '    serviceDate = CDate(txtTo.Text)
                            '    isLaterThanEndDate = True
                            'End If

                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'AddNewRowSch()

                            isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            Else
                                AddNewRowSch()
                            End If
                            holiday = ""
                        Next
                    Next

                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                    Dim daysAdded As Integer = 0
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (-j))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    'serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                DayOfWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        DayOfWeek = "1st "
                                    Case 2
                                        DayOfWeek = "2nd "
                                    Case 3
                                        DayOfWeek = "3rd "
                                    Case 4
                                        DayOfWeek = "4th "
                                    Case 5
                                        DayOfWeek = "5th "
                                End Select
                                DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = DayOfWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If

                                'AddNewRowSch()

                                holiday = ""
                            End If
                        Next

                    Next
                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(14 * (-j))
                                If weekno = 2 Then startDate = startDate.AddDays(7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    serviceDate = CDate(txtMonthStartDate.Text)
                                    isLaterThanEndDate = True
                                End If

                                DayOfWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        DayOfWeek = "1st "
                                    Case 2
                                        DayOfWeek = "2nd "
                                    Case 3
                                        DayOfWeek = "3rd "
                                    Case 4
                                        DayOfWeek = "4th "
                                    Case 5
                                        DayOfWeek = "5th "
                                End Select
                                DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = DayOfWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                If String.IsNullOrEmpty(dow) = False Then
                                    If gdayofWeek1 = dow Then
                                        AddNewRowSch()
                                    End If
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""

                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then
                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(21 * (-j))
                                If weekno = 2 Then
                                    startDate = startDate.AddDays(7)
                                ElseIf weekno = 3 Then
                                    startDate = startDate.AddDays(14)
                                End If

                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    serviceDate = CDate(txtMonthStartDate.Text)
                                    isLaterThanEndDate = True
                                End If


                                DayOfWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        DayOfWeek = "1st "
                                    Case 2
                                        DayOfWeek = "2nd "
                                    Case 3
                                        DayOfWeek = "3rd "
                                    Case 4
                                        DayOfWeek = "4th "
                                    Case 5
                                        DayOfWeek = "5th "
                                End Select
                                DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = DayOfWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()


                                holiday = ""
                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim firstMonthHasRec As Boolean = True
                    Dim fromMonth = 1
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne1:
                    For j = fromMonth To noOfInterval + 1

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1))
                            End If

                            Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                            If dayNo > 0 Then
                                'day no
                                If startDate.Day <> dayNo Then
                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        ' startDate = tempStartDate.AddMonths(j - 1)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                                        End If
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                startDate = startDate.AddDays((weekno - 1) * 7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                            End If

                            serviceDate = startDate
                            'serviceDate = CDate(txtMonthStartDate.Text)


                            'If j = 1 Then
                            '    'If serviceDate < tempStartDate Then
                            '    If serviceDate < CDate(txtMonthStartDate.Text) Then
                            '        noOfInterval = noOfInterval + 1
                            '        fromMonth = 2
                            '        isLaterThanEndDate = True
                            '        'GoTo IntervalAddOne1
                            '    End If
                            'End If


                            If j = 1 Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    'noOfInterval = noOfInterval + 1
                                    'weekno = weekno + 1
                                    'fromMonth = 2
                                    'GoTo IntervalAddOne
                                    GoTo nextrec1
                                End If
                            End If

                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                                'serviceDate = CDate(txtMonthEndDate.Text)
                                isLaterThanEndDate = True
                            End If


                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1

                            AddNewRowSch()

nextrec1:
                        Next
                    Next

                End If
            Next

            '''''''''''''''''''''''END: Previous Dates



            '4. (IsPerServiceValue = "N")

            '''''''''''''''''' START: Next Dates
            tempStartDate = gMaxServiceDate
            gActive = "N"
            isLaterThanEndDate = False
            For i = 0 To dtservicecontractDet.Rows.Count - 1

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                command2.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                command2.Dispose()

                If noOfInterval = 0 Then Continue For

                gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()



                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    IsWeekly = "Y"
                    Dim daysAdded As Integer = 0
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                            'serviceDate = tempStartDate.AddDays(daysAdded)
                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                isEnd = False
                                Do Until isEnd = True
                                    serviceDate = serviceDate.AddDays(1)
                                    daysAdded = daysAdded + 1
                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        isEnd = True
                                        Exit Do
                                    End If
                                Loop
                            Else
                                daysAdded = daysAdded + 1
                            End If

                            'isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            '    serviceDate = CDate(txtTo.Text)
                            '    isLaterThanEndDate = True
                            'End If

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'AddNewRowSch()

                            isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            Else
                                AddNewRowSch()
                            End If
                            holiday = ""
                        Next
                    Next

                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                    Dim daysAdded As Integer = 0
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    'serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If

                                'AddNewRowSch()

                                holiday = ""
                            End If
                        Next

                    Next
                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(14 * (j - 1))
                                If weekno = 2 Then startDate = startDate.AddDays(7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()

                                holiday = ""

                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then
                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(21 * (j - 1))
                                If weekno = 2 Then
                                    startDate = startDate.AddDays(7)
                                ElseIf weekno = 3 Then
                                    startDate = startDate.AddDays(14)
                                End If

                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()


                                holiday = ""
                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                    'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim firstMonthHasRec As Boolean = True
                    Dim fromMonth = 1
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne2:
                    For j = fromMonth To noOfInterval + 1

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'startDate = tempStartDate.AddMonths(j - 1)

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1))
                            End If


                            Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                            If dayNo > 0 Then
                                'day no
                                If startDate.Day <> dayNo Then
                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        ' startDate = tempStartDate.AddMonths(j - 1)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                                        End If
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                startDate = startDate.AddDays((weekno - 1) * 7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                            End If

                            serviceDate = startDate

                            'If j = 1 Then
                            '    If serviceDate < tempStartDate Then
                            '        'If serviceDate < CDate(txtMonthStartDate.Text) Then
                            '        noOfInterval = noOfInterval + 1
                            '        fromMonth = 2
                            '        GoTo IntervalAddOne2


                            '    End If
                            'End If

                            If j = 1 Then
                                If serviceDate < tempStartDate Then
                                    'noOfInterval = noOfInterval + 1
                                    'weekno = weekno + 1
                                    'fromMonth = 2
                                    'GoTo IntervalAddOne
                                    GoTo nextrec3
                                End If
                            End If

                            isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                                'serviceDate = CDate(txtMonthEndDate.Text)
                                isLaterThanEndDate = True
                            End If

                            'serviceDate = startDate
                            'txtServiceDate.Text = startDate.ToString()

                            'dgv24SCSchedule.Rows.Add(1)
                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            'gServiceDate = serviceDate


                            'Dim gServiceDatestr As String
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            'gServiceDate = gServiceDatestr
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                            '    RowIndexSch = j - 2
                            'Else
                            '    RowIndexSch = j - 1
                            'End If

                            If (tempStartDate.Month < gServiceDate.Month) Then
                                GoTo calcval
                            End If

                            AddNewRowSch()
nextrec3:

                        Next
                    Next

                End If
            Next

            '''''''''''''''''''''''END: Next Dates


calcval:
            '5. (IsPerServiceValue = "N")
            'Start: Calculate Values

            'If txtComputationMethod.Text = "1" Then
            Dim commandValues As MySqlCommand = New MySqlCommand

            commandValues.CommandType = CommandType.Text
            commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
            commandValues.Connection = conn

            Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            dtValues.Load(drValues)

            Dim lTotalServices = dtValues.Rows.Count
            Dim lbillingamount As Double
            Dim lbillingamountTotal As Double

            lbillingamount = 0.0
            lbillingamountTotal = 0.0
            'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

            Dim z As Integer
            z = 0

            Dim lMonthYear As String
            lMonthYear = ""

            Dim lWeekMonthYear As String
            lWeekMonthYear = ""

            For Each row As DataRow In dtValues.Rows

                If lMonthYear <> row("MonthYear") Then
                    lMonthYear = row("MonthYear")

                    Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                    commandMonthYearCount.CommandType = CommandType.Text
                    commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                    commandMonthYearCount.Connection = conn

                    Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                    Dim dtMonthYearCount As New DataTable
                    dtMonthYearCount.Load(drMonthYearCount)

                    Dim MonthYearCount As String
                    MonthYearCount = dtMonthYearCount.Rows(0)("MY").ToString()

                    lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                End If


                Dim commandVal As MySqlCommand = New MySqlCommand
                commandVal.CommandType = CommandType.Text
                commandVal.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                commandVal.Parameters.Clear()

                commandVal.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))

                If z <> (dtValues.Rows.Count - 1) Then
                    commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                    If row("Active") = "Y" Then
                        lbillingamountTotal = lbillingamountTotal + Math.Round(lbillingamount, 2) / row("CountDays")
                    End If
                End If

                'Else

                'If txtComputationMethod.Text = "1" Then
                '    If z = (dtValues.Rows.Count - 1) Then
                '        commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                '    End If

                'Else
                '    If z = (dtValues.Rows.Count - 1) Then
                '        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                '    End If
                'End If

                If txtComputationMethod.Text <> "Monthly" Then
                    If z = (dtValues.Rows.Count - 1) Then
                        commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                    End If

                Else
                    If z = (dtValues.Rows.Count - 1) Then
                        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                    End If
                End If
                commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                commandVal.Connection = conn
                commandVal.ExecuteScalar()
                z = z + 1
                'conn.Close()
            Next row
            'End If

            'End: Calculate Values
        End If   'End if PersErviceValue is N







        '' start if PersErviceValue is Y

        If IsPerServiceValue = "Y" Then

            For i = 0 To dtservicecontractDet.Rows.Count - 1

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                command2.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                command2.Dispose()

                If noOfInterval = 0 Then Continue For

                gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()

                gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()
                gServiceLocationGroup = dtservicecontractDet.Rows(i)("ServiceLocationGroup").ToString()
                gSalesman = dtservicecontractDet.Rows(i)("Salesman").ToString()

                'Target

                gtargetID_SR = ""
                gTargetDesc = ""
                Dim lreason As String
                Dim commandTarget As MySqlCommand = New MySqlCommand
                commandTarget.CommandType = CommandType.Text

                commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                commandTarget.Connection = conn

                Dim laction As String

                'Dim gtargetID_SR As String

                laction = ""
                lreason = ""
                gtargetID_SR = ""

                Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                Dim dtTarget As New DataTable
                dtTarget.Load(drTarget)

                If dtTarget.Rows.Count Then
                    For t = 0 To dtTarget.Rows.Count - 1
                        If lreason <> "" Then lreason = lreason & vbCrLf
                        lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
                        If gtargetID_SR <> "" Then gtargetID_SR = gtargetID_SR & ", "
                        'gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetDesc").ToString()
                        gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetID").ToString()  'modified on 02.05.17
                    Next
                End If


                'Target

                ''''''''''''''''''''''''''FREQUENCY ''''''''''''''''''''''''''''''''

                '' Daily
                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "DAILY" Then
                    'dtservicecontractDet.Rows(0)("Frequency").ToString()
                    For j = 1 To noOfInterval
                        serviceDate = tempStartDate.AddDays((j - 1))
                        'dgv24SCSchedule.Rows.Add(1)
                        'rowIndex = dgv24SCSchedule.Rows.Count - 1

                        DayOfWeek = ""
                        Select Case pWeekNumber(serviceDate)
                            Case 1
                                DayOfWeek = "1st "
                            Case 2
                                DayOfWeek = "2nd "
                            Case 3
                                DayOfWeek = "3rd "
                            Case 4
                                DayOfWeek = "4th "
                            Case 5
                                DayOfWeek = "5th "
                        End Select
                        DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper
                        holiday = ""


                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                        gServiceDatestr = gServiceDate
                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                        gdayofWeek = DayOfWeek
                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                        RowIndexSch = j - 1
                        AddNewRowSch()

                    Next

                    ''End:Daily


                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "ADHOC" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "PER-SERVICE" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SVC CALL" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOLLOW UP" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        serviceDate = tempStartDate.AddDays((j - 1))

                        dayofWeek = ""
                        Select Case pWeekNumber(serviceDate)
                            Case 1
                                dayofWeek = "1st "
                            Case 2
                                dayofWeek = "2nd "
                            Case 3
                                dayofWeek = "3rd "
                            Case 4
                                dayofWeek = "4th "
                            Case 5
                                dayofWeek = "5th "
                        End Select
                        dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                        holiday = ""


                        gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                        gServiceDatestr = gServiceDate
                        gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                        gdayofWeek = dayofWeek
                        gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                        RowIndexSch = j - 1
                        AddNewRowSch()

                    Next

                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    IsWeekly = "Y"
                    Dim daysAdded As Integer = 0
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                            'serviceDate = tempStartDate.AddDays(daysAdded)
                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                isEnd = False
                                Do Until isEnd = True
                                    serviceDate = serviceDate.AddDays(1)
                                    daysAdded = daysAdded + 1
                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        isEnd = True
                                        Exit Do
                                    End If
                                Loop
                            Else
                                daysAdded = daysAdded + 1
                            End If

                            'isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            '    serviceDate = CDate(txtTo.Text)
                            '    isLaterThanEndDate = True
                            'End If

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'AddNewRowSch()

                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            Else
                                AddNewRowSch()
                            End If
                            holiday = ""
                        Next
                    Next

                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then

                    Dim daysAdded As Integer = 0
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    'serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                DayOfWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        DayOfWeek = "1st "
                                    Case 2
                                        DayOfWeek = "2nd "
                                    Case 3
                                        DayOfWeek = "3rd "
                                    Case 4
                                        DayOfWeek = "4th "
                                    Case 5
                                        DayOfWeek = "5th "
                                End Select
                                DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = DayOfWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If

                                'AddNewRowSch()

                                holiday = ""
                            End If
                        Next

                    Next
                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    isLaterThanEndDate = False
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(14 * (j - 1))
                                If weekno = 2 Then startDate = startDate.AddDays(7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()

                                holiday = ""

                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then
                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(21 * (j - 1))
                                If weekno = 2 Then
                                    startDate = startDate.AddDays(7)
                                ElseIf weekno = 3 Then
                                    startDate = startDate.AddDays(14)
                                End If

                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()


                                holiday = ""
                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                    'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim firstMonthHasRec As Boolean = True
                    Dim fromMonth = 1
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOneY:
                    For j = fromMonth To noOfInterval + 1

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'startDate = tempStartDate.AddMonths(j - 1)

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1))
                            End If


                            Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                            If dayNo > 0 Then
                                'day no
                                If startDate.Day <> dayNo Then
                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        ' startDate = tempStartDate.AddMonths(j - 1)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                                        End If
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                startDate = startDate.AddDays((weekno - 1) * 7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                            End If

                            serviceDate = startDate

                            ''''''''''''''''''''

                            'firstDayOfMonth = CDate("01/" & serviceDate.ToString("MM/yyyy"))
                            '''''''''''''''''''''''

                            'If j = 1 Then
                            '    If serviceDate < tempStartDate Then
                            '        noOfInterval = noOfInterval + 1
                            '        fromMonth = 2
                            '        GoTo IntervalAddOneY
                            '    End If
                            'End If

                            If j = 1 Then
                                If serviceDate < tempStartDate Then
                                    'noOfInterval = noOfInterval + 1
                                    'weekno = weekno + 1
                                    'fromMonth = 2
                                    'GoTo IntervalAddOne
                                    GoTo nextrec4
                                End If
                            End If

                            '''''''''''''''''''''
                            If j = 1 Then
                                If dayNo > 0 Then
                                    If dayNo < tempStartDate.Day Then
                                        noOfInterval = noOfInterval + 1
                                        fromMonth = 2
                                        j = j + 1
                                        GoTo IntervalAddOneY
                                    End If
                                End If
                            End If
                            '''''''''''''''''''''

                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            End If

                            'serviceDate = startDate
                            'txtServiceDate.Text = startDate.ToString()

                            'dgv24SCSchedule.Rows.Add(1)
                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            'gServiceDate = serviceDate


                            'Dim gServiceDatestr As String
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            'gServiceDate = gServiceDatestr
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                            '    RowIndexSch = j - 2
                            'Else
                            '    RowIndexSch = j - 1
                            'End If
                            AddNewRowSch()
nextrec4:

                        Next
                    Next


                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                    'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                    Dim interval1 As Integer = 0
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                    'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                    Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                        Case "BI-MONTHLY"
                            interval1 = 2
                        Case "QUARTERLY"
                            interval1 = 3
                        Case "HALF-ANNUALLY"
                            interval1 = 6
                        Case "THRICE-ANNUALLY"
                            interval1 = 4
                        Case "ANNUALLY"
                            interval1 = 12
                        Case "BI-ANNUALLY"
                            interval1 = 24
                    End Select


                    If interval1 = 0 Then Continue For
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                            End If

                            Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                            Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                            If dayNo > 0 And monthNo > 0 Then
                                startDate = startDate.AddMonths(monthNo - 1)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                If startDate.Day <> dayNo Then

                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                        End If
                                        startDate = startDate.AddMonths(monthNo - 1)
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                If weekno.ToUpper = "L" Then
                                    startDate = startDate.AddMonths(interval1).AddDays(-1)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(-1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                Else

                                    If j <> 1 Then
                                        startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                    Else
                                        Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                        If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                weekNoDate = weekNoDate.AddDays(1)
                                                If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If

                                        If Date.Compare(startDate, weekNoDate) > 0 Then
                                            startDate = firstDayOfMonth.AddMonths(1)
                                            firstDayOfMonth = startDate
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        End If
                                    End If
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                            End If
                            serviceDate = startDate
                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtTo.Text) Then
                                serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            End If

                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                            RowIndexSch = j - 1
                            AddNewRowSch()

                            'holiday = ""

                        Next
                    Next
                    ''
                End If
            Next

            'conn.Close()




            'Exit Sub

            '2. (IsPerServiceValue = "Y")
            'Start: for Quarterly / Half Annually / Annually

            Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
            commandDailyWeekly.CommandType = CommandType.Text
            commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
            commandDailyWeekly.Connection = conn

            Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
            Dim dtContractDailyWeekly As New DataTable
            dtContractDailyWeekly.Load(drContractDailyWeekly)
            Dim lServiceVal As Decimal


            'End: for Quarterly / Half Annually / Annually


            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
            commandMaxSrviceDate.CommandType = CommandType.Text
            commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
            commandMaxSrviceDate.Connection = conn1

            Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
            Dim dtMaxSrviceDate As New DataTable
            dtMaxSrviceDate.Load(drMaxSrviceDate)

            If dtMaxSrviceDate.Rows.Count > 0 Then
                gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
            End If

            conn1.Close()
            conn1.Dispose()


            '3. (IsPerServiceValue = "Y")
            ''''''''''''''''''Start: Previous Dates

            gActive = "N"
            For i = 0 To dtservicecontractDet.Rows.Count - 1

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                command2.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                command2.Dispose()

                If noOfInterval = 0 Then Continue For

                gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()

                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                    IsWeekly = "Y"
                    Dim daysAdded As Integer = 0
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                            serviceDate = tempStartDate.AddDays(7 * (-j))
                            'serviceDate = tempStartDate.AddDays(daysAdded)
                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                isEnd = False
                                Do Until isEnd = True
                                    serviceDate = serviceDate.AddDays(1)
                                    daysAdded = daysAdded + 1
                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        isEnd = True
                                        Exit Do
                                    End If
                                Loop
                            Else
                                daysAdded = daysAdded + 1
                            End If

                            'isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            '    serviceDate = CDate(txtTo.Text)
                            '    isLaterThanEndDate = True
                            'End If

                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'AddNewRowSch()

                            isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            If serviceDate < CDate(txtMonthStartDate.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            Else
                                AddNewRowSch()
                            End If
                            holiday = ""
                        Next
                    Next

                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                    Dim daysAdded As Integer = 0
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (-j))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    'serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                DayOfWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        DayOfWeek = "1st "
                                    Case 2
                                        DayOfWeek = "2nd "
                                    Case 3
                                        DayOfWeek = "3rd "
                                    Case 4
                                        DayOfWeek = "4th "
                                    Case 5
                                        DayOfWeek = "5th "
                                End Select
                                DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = DayOfWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If

                                'AddNewRowSch()

                                holiday = ""
                            End If
                        Next

                    Next
                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(14 * (-j))
                                If weekno = 2 Then startDate = startDate.AddDays(7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    serviceDate = CDate(txtMonthStartDate.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()

                                holiday = ""

                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then
                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(21 * (-j))
                                If weekno = 2 Then
                                    startDate = startDate.AddDays(7)
                                ElseIf weekno = 3 Then
                                    startDate = startDate.AddDays(14)
                                End If

                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    serviceDate = CDate(txtMonthStartDate.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()


                                holiday = ""
                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim firstMonthHasRec As Boolean = True
                    Dim fromMonth = 1
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne1Y:
                    For j = fromMonth To noOfInterval + 1

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1))
                            End If

                            Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                            If dayNo > 0 Then
                                'day no
                                If startDate.Day <> dayNo Then
                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        ' startDate = tempStartDate.AddMonths(j - 1)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                                        End If
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                startDate = startDate.AddDays((weekno - 1) * 7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                            End If

                            serviceDate = startDate
                            'serviceDate = CDate(txtMonthStartDate.Text)

                            'If j = 1 Then
                            '    'If serviceDate < tempStartDate Then
                            '    If serviceDate < CDate(txtMonthStartDate.Text) Then
                            '        noOfInterval = noOfInterval + 1
                            '        fromMonth = 2
                            '        isLaterThanEndDate = True
                            '        'GoTo IntervalAddOne1
                            '    End If
                            'End If


                            If j = 1 Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    'noOfInterval = noOfInterval + 1
                                    'weekno = weekno + 1
                                    'fromMonth = 2
                                    'GoTo IntervalAddOne
                                    GoTo nextrec5
                                End If
                            End If
                            isLaterThanEndDate = False
                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                                'serviceDate = CDate(txtMonthEndDate.Text)
                                isLaterThanEndDate = True
                            End If


                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1

                            AddNewRowSch()

nextrec5:
                        Next
                    Next

                End If
            Next

            '''''''''''''''''''''''END: Previous Dates



            '4. (IsPerServiceValue = "Y")

            '''''''''''''''''' START: Next Dates
            tempStartDate = gMaxServiceDate
            gActive = "N"
            isLaterThanEndDate = False
            For i = 0 To dtservicecontractDet.Rows.Count - 1

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                command2.Connection = conn

                Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                Dim dttblservicecontractFrequency As New DataTable
                dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                command2.Dispose()

                If noOfInterval = 0 Then Continue For

                gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()



                If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    IsWeekly = "Y"
                    Dim daysAdded As Integer = 0
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                            serviceDate = tempStartDate.AddDays(7 * (j - 1))
                            'serviceDate = tempStartDate.AddDays(daysAdded)
                            If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                isEnd = False
                                Do Until isEnd = True
                                    serviceDate = serviceDate.AddDays(1)
                                    daysAdded = daysAdded + 1
                                    If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                        isEnd = True
                                        Exit Do
                                    End If
                                Loop
                            Else
                                daysAdded = daysAdded + 1
                            End If

                            'isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            '    serviceDate = CDate(txtTo.Text)
                            '    isLaterThanEndDate = True
                            'End If

                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'AddNewRowSch()

                            isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                                'serviceDate = CDate(txtTo.Text)
                                isLaterThanEndDate = True
                            Else
                                AddNewRowSch()
                            End If
                            holiday = ""
                        Next
                    Next

                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                    Dim daysAdded As Integer = 0
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    'serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                DayOfWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        DayOfWeek = "1st "
                                    Case 2
                                        DayOfWeek = "2nd "
                                    Case 3
                                        DayOfWeek = "3rd "
                                    Case 4
                                        DayOfWeek = "4th "
                                    Case 5
                                        DayOfWeek = "5th "
                                End Select
                                DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = DayOfWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If

                                'AddNewRowSch()

                                holiday = ""
                            End If
                        Next

                    Next
                    ''
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                    'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then

                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(14 * (j - 1))
                                If weekno = 2 Then startDate = startDate.AddDays(7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate
                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()

                                holiday = ""

                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    For j = 1 To noOfInterval
                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            If isLaterThanEndDate = False Then
                                Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                startDate = tempStartDate.AddDays(21 * (j - 1))
                                If weekno = 2 Then
                                    startDate = startDate.AddDays(7)
                                ElseIf weekno = 3 Then
                                    startDate = startDate.AddDays(14)
                                End If

                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                                serviceDate = startDate

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                AddNewRowSch()


                                holiday = ""
                            End If
                        Next
                    Next
                ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                    'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then
                    isLaterThanEndDate = False 'Latest : 10.11.21
                    Dim firstMonthHasRec As Boolean = True
                    Dim fromMonth = 1
                    Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne2Y:
                    For j = fromMonth To noOfInterval + 1

                        For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                            'startDate = tempStartDate.AddMonths(j - 1)

                            If j = 1 Then
                                startDate = tempStartDate
                            Else
                                startDate = firstDayOfMonth.AddMonths((j - 1))
                            End If


                            Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                            Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                            Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                            Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                            Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                            If dayNo > 0 Then
                                'day no
                                If startDate.Day <> dayNo Then
                                    isEnd = False
                                    For l = 1 To totalDays - 1
                                        startDate = startDate.AddDays(1)
                                        If startDate.Day = dayNo Then
                                            isEnd = True
                                            Exit For
                                        End If
                                    Next
                                    If isEnd = False Then
                                        ' startDate = tempStartDate.AddMonths(j - 1)
                                        If j = 1 Then
                                            startDate = tempStartDate
                                        Else
                                            startDate = firstDayOfMonth.AddMonths((j - 1))
                                        End If
                                        If startDate.Month = monthEndDate.Month Then
                                            startDate = monthEndDate
                                        Else
                                            If startDate.Day > dayNo Then
                                                Continue For
                                            Else
                                                Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                If IsDate("30" & monthStr) Then
                                                    startDate = CDate("30" & monthStr)
                                                ElseIf IsDate("29" & monthStr) Then
                                                    startDate = CDate("29" & monthStr)
                                                ElseIf IsDate("28" & monthStr) Then
                                                    startDate = CDate("28" & monthStr)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If

                            Else
                                startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                startDate = startDate.AddDays((weekno - 1) * 7)
                                If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                    isEnd = False
                                    Do Until isEnd = True
                                        startDate = startDate.AddDays(1)
                                        If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                End If
                            End If

                            serviceDate = startDate

                            'If j = 1 Then
                            '    If serviceDate < tempStartDate Then
                            '        'If serviceDate < CDate(txtMonthStartDate.Text) Then
                            '        noOfInterval = noOfInterval + 1
                            '        fromMonth = 2
                            '        GoTo IntervalAddOne2Y


                            '    End If
                            'End If


                            If j = 1 Then
                                If serviceDate < tempStartDate Then
                                    'noOfInterval = noOfInterval + 1
                                    'weekno = weekno + 1
                                    'fromMonth = 2
                                    'GoTo IntervalAddOne
                                    GoTo nextrec6
                                End If
                            End If

                            isLaterThanEndDate = False
                            'If serviceDate > CDate(txtTo.Text) Then
                            If serviceDate > CDate(txtMonthEndDate.Text) Then
                                'serviceDate = CDate(txtMonthEndDate.Text)
                                isLaterThanEndDate = True
                            End If

                            'serviceDate = startDate
                            'txtServiceDate.Text = startDate.ToString()

                            'dgv24SCSchedule.Rows.Add(1)
                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                            DayOfWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    DayOfWeek = "1st "
                                Case 2
                                    DayOfWeek = "2nd "
                                Case 3
                                    DayOfWeek = "3rd "
                                Case 4
                                    DayOfWeek = "4th "
                                Case 5
                                    DayOfWeek = "5th "
                            End Select
                            DayOfWeek = DayOfWeek & serviceDate.DayOfWeek.ToString.ToUpper

                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            'gServiceDate = serviceDate


                            'Dim gServiceDatestr As String
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            'gServiceDate = gServiceDatestr
                            gdayofWeek = DayOfWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                            '    RowIndexSch = j - 2
                            'Else
                            '    RowIndexSch = j - 1
                            'End If

                            If (tempStartDate.Month < gServiceDate.Month) Then
                                GoTo calcvalY
                            End If

                            AddNewRowSch()

nextrec6:
                        Next
                    Next

                End If
            Next

            '''''''''''''''''''''''END: Next Dates


calcvalY:

            '5. (IsPerServiceValue = "Y")
            'Start: Calculate Values

            'If txtComputationMethod.Text = "1" Then
            Dim commandValues As MySqlCommand = New MySqlCommand

            commandValues.CommandType = CommandType.Text
            commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
            commandValues.Connection = conn

            Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            dtValues.Load(drValues)

            Dim lTotalServices = dtValues.Rows.Count
            Dim lbillingamount As Double
            Dim lbillingamountTotal As Double

            lbillingamount = 0.0
            lbillingamountTotal = 0.0
            'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

            Dim z As Integer
            z = 0

            Dim lMonthYear As String
            lMonthYear = ""

            Dim lWeekMonthYear As String
            lWeekMonthYear = ""

            For Each row As DataRow In dtValues.Rows

                If lMonthYear <> row("MonthYear") Then
                    lMonthYear = row("MonthYear")

                    Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                    commandMonthYearCount.CommandType = CommandType.Text
                    commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                    commandMonthYearCount.Connection = conn

                    Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                    Dim dtMonthYearCount As New DataTable
                    dtMonthYearCount.Load(drMonthYearCount)

                    lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                End If



                z = z + 1
                'conn.Close()
            Next row

            'End: Calculate Values
        End If   'End if PersErviceValue is N


        ''''' End: if Y
EndScheduling:

        If IsPerServiceValue = "N" Then 'If IsPerServiceValue = "N" Then 13.01.19
            '''''''''''''''''''''''''''''
            '' Start: update for fixed value

            ''''''''''''''''''''''''''''''

            ''''''''''''' 15.07

            '''''''''''''''''''''''''''''
            '' Start: update for Fixed Contract Value Computaion Method

            ''''''''''''''''''''''''''''''
            If ((txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
                'If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                Dim commandValues1 As MySqlCommand = New MySqlCommand

                commandValues1.CommandType = CommandType.Text
                commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                commandValues1.Connection = conn

                Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                Dim dtValues1 As New DataTable
                dtValues1.Load(drValues1)

                If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then


                    '''' Monthly and higher

                    Dim commandValues10 As MySqlCommand = New MySqlCommand

                    commandValues10.CommandType = CommandType.Text
                    commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                    commandValues10.Connection = conn

                    Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                    Dim dtValues10 As New DataTable
                    dtValues10.Load(drValues10)

                    If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)

                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                        ''''''''' 31.10.17

                        For Each row As DataRow In dtValues3.Rows

                            Dim updateval As Decimal = 0.0
                            updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                            'Dim commandVal4 As MySqlCommand = New MySqlCommand
                            'commandVal4.CommandType = CommandType.Text
                            'commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            'commandVal4.Parameters.Clear()

                            'commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                            ''commandVal4.Parameters.AddWithValue("@Val", updateval)

                            'commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                            'commandVal4.Connection = conn
                            'commandVal4.ExecuteScalar()

                            'commandVal4.Dispose()

                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()

                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()

                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17

                        Next row

                        commandValues3.Dispose()




                        '''''''''''''''''''' for the last recrd


                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            'End If
                        End If

                        '''''''''''''''''' for the last record


                    ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)


                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                        ''''''''' 31.10.17
                        For Each row As DataRow In dtValues3.Rows

                            Dim updateval As Decimal = 0.0
                            updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")



                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()
                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()
                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17
                        Next row
                        commandValues3.Dispose()


                        '''''''''''''''''''' for the last recrd
                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            dtLastVal.Dispose()
                            commandLastVal.Dispose()

                            'End If
                        End If
                        commandSumMonthYear1.Dispose()
                        dtSumMonthYear1.Dispose()
                        '''''''''''''''''' for the last record
                    End If
                    commandValues1.Dispose()
                    commandValues10.Dispose()
                    dtValues1.Dispose()
                    dtValues10.Dispose()

                End If
            End If



            ''''''''''''''''''''''''''''''''''''''''

            ''''''''''''''' 15.07

            If txtComputationMethod1.Text = "Fixed Contract Value" Then
                Dim dblTotalValue As Decimal = 0.0
                Dim dbldiff As Decimal = 0.0

                Dim rcnoAdjusted As Integer = 0
                Dim ValueAdjusted As Decimal = 0.0

                Dim commandFixedValue As MySqlCommand = New MySqlCommand

                commandFixedValue.CommandType = CommandType.Text
                commandFixedValue.CommandText = "SELECT sum(value) as totalvalue FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y'"
                commandFixedValue.Connection = conn

                Dim drFixedValue As MySqlDataReader = commandFixedValue.ExecuteReader()
                Dim dtFixedValue As New DataTable
                dtFixedValue.Load(drFixedValue)

                dblTotalValue = Convert.ToDouble(dtFixedValue.Rows(0)("totalvalue").ToString)


                'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                '    dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '    dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                'End If

                'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                'dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                'End If
                '''''''''''''''

                Dim commandAdjustLastRecord As MySqlCommand = New MySqlCommand
                commandAdjustLastRecord.CommandType = CommandType.Text
                commandAdjustLastRecord.CommandText = "select rcno, Value from tbwserviceschedule  where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y' order by ServiceDate desc limit 1"
                commandAdjustLastRecord.Connection = conn

                Dim drAdjustLastRecord As MySqlDataReader = commandAdjustLastRecord.ExecuteReader()
                Dim dtAdjustLastRecord As New DataTable
                dtAdjustLastRecord.Load(drAdjustLastRecord)

                If dtAdjustLastRecord.Rows.Count > 0 Then
                    rcnoAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("rcno").ToString)
                    ValueAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("Value").ToString)
                End If
                ''''''''''''''''''''

                '''''''''''''''''''''''
                Dim AdjustValue As Decimal = 0.0

                'If dbldiff > 0 Then
                '    AdjustValue = ValueAdjusted - dbldiff
                'Else
                '    AdjustValue = ValueAdjusted + dbldiff
                'End If

                AdjustValue = ValueAdjusted + dbldiff

                Dim commandAdjustLastRec As MySqlCommand = New MySqlCommand
                commandAdjustLastRec.CommandType = CommandType.Text

                Dim qryT As String = "UPDATE tbwserviceschedule SET  Value = " & AdjustValue & " where rcno = " & rcnoAdjusted

                commandAdjustLastRec.CommandText = qryT
                commandAdjustLastRec.Parameters.Clear()
                commandAdjustLastRec.Connection = conn
                commandAdjustLastRec.ExecuteNonQuery()

                commandAdjustLastRecord.Dispose()
                commandAdjustLastRec.Dispose()

            End If

            '''''''''''''''''''''''''''''
            '' End: update for fixed value

            ''''''''''''''''''''''''''''''

            '''''''''''''''''''''''''''''
            '' Start: update for Monthly Computaion Method

            ''''''''''''''''''''''''''''''
            'If ((txtComputationMethod1.Text = "Monthly") Or (txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
            If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                Dim commandValues1 As MySqlCommand = New MySqlCommand

                commandValues1.CommandType = CommandType.Text
                commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                commandValues1.Connection = conn

                Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                Dim dtValues1 As New DataTable
                dtValues1.Load(drValues1)

                If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then

                    '''' Monthly and higher

                    Dim commandValues10 As MySqlCommand = New MySqlCommand

                    commandValues10.CommandType = CommandType.Text
                    commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                    commandValues10.Connection = conn

                    Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                    Dim dtValues10 As New DataTable
                    dtValues10.Load(drValues10)

                    If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)

                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                        ''''''''' 31.10.17

                        For Each row As DataRow In dtValues3.Rows

                            Dim updateval As Decimal = 0.0
                            updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                            If updateval > Convert.ToDecimal(txtAgreeValue.Text) Then

                            End If
                            Dim commandVal4 As MySqlCommand = New MySqlCommand
                            commandVal4.CommandType = CommandType.Text
                            commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandVal4.Parameters.Clear()

                            commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)

                            'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))

                            'Start: Modified on 20.03.22
                            If Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear") > Convert.ToDecimal(txtValPerMnth.Text) Then
                                commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear"))
                            Else
                                commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                            End If

                            'End: Modified on 20.03.22

                            commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                            commandVal4.Connection = conn
                            commandVal4.ExecuteScalar()

                            commandVal4.Dispose()

                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()

                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()

                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17

                        Next row

                        commandValues3.Dispose()




                        '''''''''''''''''''' for the last recrd


                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            'End If
                        End If

                        '''''''''''''''''' for the last record


                    ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)


                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                        ''''''''' 31.10.17
                        For Each row As DataRow In dtValues3.Rows

                            Dim updateval As Decimal = 0.0
                            updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")

                            Dim commandVal4 As MySqlCommand = New MySqlCommand
                            commandVal4.CommandType = CommandType.Text
                            commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandVal4.Parameters.Clear()

                            commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            'commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                            'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear"))
                            commandVal4.Parameters.AddWithValue("@Val", updateval)
                            commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                            commandVal4.Connection = conn
                            commandVal4.ExecuteScalar()

                            commandVal4.Dispose()


                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()
                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()
                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17
                        Next row
                        commandValues3.Dispose()


                        '''''''''''''''''''' for the last recrd
                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            dtLastVal.Dispose()
                            commandLastVal.Dispose()

                            'End If
                        End If
                        commandSumMonthYear1.Dispose()
                        dtSumMonthYear1.Dispose()
                        '''''''''''''''''' for the last record
                    End If
                    commandValues1.Dispose()
                    commandValues10.Dispose()
                    dtValues1.Dispose()
                    dtValues10.Dispose()

                End If
            End If


        End If ' If IsPerServiceValue = "N" Then 13.01.19

        ''''''''''''''''''''''''''''''''''''''''

        conn.Close()
        conn.Dispose()

        command1.Dispose()
        command3.Dispose()
        dtservicecontractDet.Dispose()
        drservicecontractDet.Close()




        SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

        'txtTotalRecords.Text = grvschedule.Rows.Count

        SqlDSServiceSchedule.DataBind()
        grvschedule.DataSourceID = "SqlDSServiceSchedule"
        grvschedule.DataBind()
        txtTotalRecords.Text = grvschedule.Rows.Count

        If Convert.ToDouble(txtAgreeValue.Text) <> Convert.ToDouble(txtTotalServiceValue.Text) Then
            AdjustLastRecord()
        End If

        'End:Scheduling

    End Sub
    Private Sub AdjustLastRecord()
        Try
            If txtComputationMethod.Text = "Monthly" Then

                Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                Dim commandValues1 As MySqlCommand = New MySqlCommand

                commandValues1.CommandType = CommandType.Text
                commandValues1.CommandText = "SELECT monthyear, sum(value) as sumvalue FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  group by monthyear order by monthyear"
                commandValues1.Connection = conn

                Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                Dim dtValues1 As New DataTable
                dtValues1.Load(drValues1)

                ''''''''' 31.10.17
                Dim lrcno As Long
                Dim lmonthear As String
                Dim sumvalue As Double
                sumvalue = 0.0

                lrcno = 0
                lmonthear = ""

                Dim lCurrentValue As Double
                Dim lCurrentRcno As Long

                'lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                lmonthear = dtValues1.Rows(0)("MonthYear").ToString
                sumvalue = dtValues1.Rows(0)("sumvalue").ToString

                For Each row As DataRow In dtValues1.Rows

                    If sumvalue <> Convert.ToDouble(txtValPerMnth.Text) Then

                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT max(rcno) as maxRcno, value FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' and monthyear = '" & lmonthear & "'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)



                        lCurrentValue = dtValues2.Rows(0)("value").ToString
                        lCurrentRcno = dtValues2.Rows(0)("maxRcno").ToString

                        'Dim updateval As Decimal = 0.0
                        'updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")

                        Dim commandVal4 As MySqlCommand = New MySqlCommand
                        commandVal4.CommandType = CommandType.Text
                        commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where Rcno = @Rcno and BatchNo =@BatchNo"
                        commandVal4.Parameters.Clear()

                        commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                        'commandVal4.Parameters.AddWithValue("@Val", dtValues2.Rows(0)("value").ToString + Convert.ToDouble(txtValPerMnth.Text) - row("sumvalue"))
                        commandVal4.Parameters.AddWithValue("@Val", dtValues2.Rows(0)("value").ToString + Convert.ToDouble(txtValPerMnth.Text) - sumvalue)

                        commandVal4.Parameters.AddWithValue("@Rcno", dtValues2.Rows(0)("maxRcno").ToString)

                        commandVal4.Connection = conn
                        commandVal4.ExecuteScalar()

                        commandVal4.Dispose()
                        commandValues2.Dispose()
                    End If

                    '        lrcno = row("Rcno")
                    lmonthear = row("MonthYear")
                    sumvalue = row("sumvalue")

                    '    ''''''''' 31.10.17
                Next row
                'commandValues3.Dispose()


                If sumvalue <> Convert.ToDouble(txtValPerMnth.Text) Then

                    Dim commandValues21 As MySqlCommand = New MySqlCommand

                    commandValues21.CommandType = CommandType.Text
                    commandValues21.CommandText = "SELECT max(rcno) as maxRcno, value FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' and monthyear = '" & lmonthear & "'"
                    commandValues21.Connection = conn

                    Dim drValues21 As MySqlDataReader = commandValues21.ExecuteReader()
                    Dim dtValues21 As New DataTable
                    dtValues21.Load(drValues21)

                    lCurrentValue = dtValues21.Rows(0)("value").ToString
                    lCurrentRcno = dtValues21.Rows(0)("maxRcno").ToString

                    Dim commandVal41 As MySqlCommand = New MySqlCommand
                    commandVal41.CommandType = CommandType.Text
                    commandVal41.CommandText = "Update tbwserviceschedule set Value = @Val where Rcno = @Rcno and BatchNo =@BatchNo"
                    commandVal41.Parameters.Clear()

                    commandVal41.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                    'commandVal4.Parameters.AddWithValue("@Val", dtValues2.Rows(0)("value").ToString + Convert.ToDouble(txtValPerMnth.Text) - row("sumvalue"))
                    commandVal41.Parameters.AddWithValue("@Val", lCurrentValue + Convert.ToDouble(txtValPerMnth.Text) - sumvalue)

                    commandVal41.Parameters.AddWithValue("@Rcno", lCurrentRcno)

                    commandVal41.Connection = conn
                    commandVal41.ExecuteScalar()

                    commandVal41.Dispose()
                    'commandValues21.Dispose()

                End If

                SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

                grvschedule.DataBind()

                Dim commandValuesTotalServiceValue As MySqlCommand = New MySqlCommand

                commandValuesTotalServiceValue.CommandType = CommandType.Text
                commandValuesTotalServiceValue.CommandText = "SELECT  sum(value) as sumvalue FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                commandValuesTotalServiceValue.Connection = conn

                Dim drValuesTotalServiceValue As MySqlDataReader = commandValuesTotalServiceValue.ExecuteReader()
                Dim dtValuesTotalServiceValue As New DataTable
                dtValuesTotalServiceValue.Load(drValuesTotalServiceValue)

                txtTotalServiceValue.Text = dtValuesTotalServiceValue.Rows(0)("sumvalue").ToString

                conn.Close()

                commandValues1.Dispose()
                commandValuesTotalServiceValue.Dispose()

                'txtTotalRecords.Text = grvschedule.Rows.Count
            End If
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "AdjustLastRecord", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Using con As New MySqlConnection(constr)
            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField
                ddl.DataValueField = valueField
                ddl.DataBind()
                con.Close()
                con.Dispose()
            End Using
        End Using
    End Sub





    Private Function pWeekNumber(ByVal pDate As Date) As Integer
        pWeekNumber = 0
        Dim temp As String = Math.Round((pDate.Day - 1) / 7, 1)
        If temp.Contains(".") Then temp = temp.Substring(0, temp.IndexOf("."))
        pWeekNumber = 1 + temp
    End Function


    Private Sub AddNewRowSch()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim strdate As DateTime

            Dim gholiday As String
            gholiday = ""

            If gActive = "Y" Then
                If gServiceDate > CDate(txtServEnd.Text) Then
                    Exit Sub
                End If
            End If

            'SP()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.StoredProcedure
            command.CommandTimeout = 0
            command.CommandText = "SaveServiceSchedule"
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.Trim)
            strdate = DateTime.Parse(gServiceDate)
            command.Parameters.AddWithValue("@pr_ServiceDate", gServiceDate.ToString("yyyy-MM-dd"))
            command.Parameters.AddWithValue("@pr_PublicHoliday", gholiday)
            command.Parameters.AddWithValue("@pr_Frequency", gFreq)
            command.Parameters.AddWithValue("@pr_Val", gserviceValue)
            command.Parameters.AddWithValue("@pr_DOW", gdayofWeek)
            command.Parameters.AddWithValue("@pr_DOW1", gdayofWeek1)
            command.Parameters.AddWithValue("@pr_Services", gproductService)
            command.Parameters.AddWithValue("@pr_Location", "")
            command.Parameters.AddWithValue("@pr_BranchId", "")
            command.Parameters.AddWithValue("@pr_ContractDetSQLID", gSQLID)
            command.Parameters.AddWithValue("@pr_ContractDetFreqSQLID", 0)
            command.Parameters.AddWithValue("@pr_TargetId", gtargetID_SR)
            'command.Parameters.AddWithValue("@pr_TargetId", gtargetID)

            command.Parameters.AddWithValue("@pr_TargetDesc", gTargetDesc)
            command.Parameters.AddWithValue("@pr_ServiceId", gServiceId)
            command.Parameters.AddWithValue("@pr_MonthYear", Month(gServiceDate) & Year(gServiceDate))
            command.Parameters.AddWithValue("@pr_WeekMonthYear", DatePart("ww", gServiceDate) & Month(gServiceDate) & Year(gServiceDate))

            command.Parameters.AddWithValue("@pr_LocationID", gLocationID)
            command.Parameters.AddWithValue("@pr_ServiceName", gServiceName)
            command.Parameters.AddWithValue("@pr_Address1", gServiceAddress)
            command.Parameters.AddWithValue("@pr_LocateGRP", gLocateGRP)
            command.Parameters.AddWithValue("@pr_Active", gActive)
            command.Parameters.AddWithValue("@pr_BatchNo", txtBatchNo.Text.Trim)
            command.Parameters.AddWithValue("@pr_ServiceLocationGroup", gServiceLocationGroup)
            command.Parameters.AddWithValue("@pr_Salesman", gSalesman)

            'If gServiceDate < CDate(txtServStart.Text) Or gServiceDate > CDate(txtServEnd.Text) Then
            '    command.Parameters.AddWithValue("@pr_Active", "N")
            'Else
            '    command.Parameters.AddWithValue("@pr_Active", "Y")
            '    gMaxServiceDate = gServiceDate
            'End If

            command.Connection = conn
            command.ExecuteScalar()
            conn.Close()
            conn.Dispose()
            command.Dispose()
        Catch ex As Exception
            lblAlert.Text = ex.Message
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "AddNewRowSch", ex.Message.ToString, txtContractNo.Text & " - " & gLocationID & " - " & gServiceDate.ToString("yyyy-MM-dd") & " - " & gFreq & " - " & gtargetID_SR)
            Exit Sub
        End Try
    End Sub

    Protected Sub grvschedule_RowDeleted(sender As Object, e As GridViewDeletedEventArgs) Handles grvschedule.RowDeleted
        SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

        SqlDSServiceSchedule.DataBind()
        grvschedule.DataSourceID = "SqlDSServiceSchedule"
        grvschedule.DataBind()
        txtTotalRecords.Text = grvschedule.Rows.Count

    End Sub


    Protected Sub grvschedule_RowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs) Handles grvschedule.RowDeleting
        'Try
        SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

        SqlDSServiceSchedule.DataBind()
        grvschedule.DataSourceID = "SqlDSServiceSchedule"
        grvschedule.DataBind()
        txtTotalRecords.Text = grvschedule.Rows.Count

        'If rowdeleted = True Then
        '    rowdeleted = False
        '    Exit Sub
        'End If
        ''SetRowDataSch()

        'Dim dt As DataTable = CType(ViewState("CurrentTableSch"), DataTable)
        'Dim drCurrentRow As DataRow = Nothing
        'Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)

        'If dt.Rows.Count > 1 Then
        '    rowdeleted = True
        '    dt.Rows.Remove(dt.Rows(rowIndex))
        '    drCurrentRow = dt.NewRow()
        '    ViewState("CurrentTableSch") = dt
        '    grvschedule.DataSource = dt
        '    grvschedule.DataBind()

        '    'SetPreviousDataSch()
        'ElseIf dt.Rows.Count = 1 Then
        '    rowdeleted = True
        '    dt.Rows.Remove(dt.Rows(rowIndex))
        '    drCurrentRow = dt.NewRow()
        '    ViewState("CurrentTableSch") = dt
        '    grvschedule.DataSource = dt
        '    grvschedule.DataBind()
        '    'FirstGridViewRowSchedule()
        '    'SetPreviousDataSch()
        'End If

        'Catch ex As Exception
        '    Throw ex
        'End Try

        'SqlDSServiceSchedule.DataBind()
        'grvschedule.DataBind()
        'txtTotalRecords.Text = grvschedule.Rows.Count
    End Sub


    Protected Sub grvschedule_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)
        Try
            SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

            SqlDSServiceSchedule.DataBind()
            grvschedule.DataSourceID = "SqlDSServiceSchedule"
            grvschedule.DataBind()
            txtTotalRecords.Text = grvschedule.Rows.Count
            'If e.Row.RowType = DataControlRowType.DataRow Then

            'Delete()

            'For Each cell As DataControlFieldCell In e.Row.Cells
            '    ' check all cells in one row
            '    For Each control As Control In cell.Controls

            '        Dim button As ImageButton = TryCast(control, ImageButton)
            '        If button IsNot Nothing And button.CommandName = "Delete" Then
            '            ' Add delete confirmation
            '            button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
            '        End If
            '    Next control
            'Next cell

            'End If



        Catch ex As Exception
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "grvschedule_RowDataBound", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Protected Sub btnLessGV_Click(ByVal sender As Object, ByVal e As EventArgs)
        Dim btnLess As Button = DirectCast(sender, Button)

        Dim xrow1 As GridViewRow = CType(btnLess.NamingContainer, GridViewRow)
        Dim rowindex1 As Integer
        rowindex1 = xrow1.RowIndex
        Dim valrcno As String
        Dim valdate As String
        Dim strdate As DateTime
        Dim gPublicHoliday As String
        Dim gdayofWeek1 As String

        valrcno = DirectCast(grvschedule.Rows(rowindex1).FindControl("Label1"), Label).Text
        valdate = DirectCast(grvschedule.Rows(rowindex1).FindControl("Label2"), Label).Text
        valdate = CDate(valdate).AddDays(-1).ToString("dd/MM/yyyy")
        '''
        strdate = DateTime.Parse(valdate)

        gdayofWeek1 = ""
        Select Case pWeekNumber(valdate)
            Case 1
                gdayofWeek1 = "1st "
            Case 2
                gdayofWeek1 = "2nd "
            Case 3
                gdayofWeek1 = "3rd "
            Case 4
                gdayofWeek1 = "4th "
            Case 5
                gdayofWeek1 = "5th "
        End Select
        gdayofWeek1 = gdayofWeek1 & CDate(valdate).DayOfWeek.ToString.ToUpper


        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()
        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text
        command1.CommandText = "SELECT * FROM tblHoliday where Holiday= '" & strdate.ToString("yyyy-MM-dd") & "'"
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)
        gPublicHoliday = ""
        If dt.Rows.Count > 0 Then

            If dt.Rows(0)("Holiday").ToString <> "" Then : gPublicHoliday = dt.Rows(0)("Description").ToString : End If

        End If
        command1.Dispose()



        Dim command As MySqlCommand = New MySqlCommand
        command.CommandType = CommandType.Text

        Dim qry As String = "Update tbwserviceschedule set servicedate = @servicedate, DOW = @DOW, PublicHoliday = @PublicHoliday where rcno= @Rcno"

        command.CommandText = qry
        command.Parameters.Clear()
        command.Parameters.AddWithValue("@servicedate", strdate.ToString("yyyy-MM-dd"))
        command.Parameters.AddWithValue("@DOW", gdayofWeek1)
        command.Parameters.AddWithValue("@PublicHoliday", gPublicHoliday)
        command.Parameters.AddWithValue("@Rcno", valrcno)
        command.Connection = conn
        command.ExecuteNonQuery()

        SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

        grvschedule.DataSourceID = "SqlDSServiceSchedule"

        conn.Close()
        conn.Dispose()
        command.Dispose()
        command1.Dispose()

        dt.Dispose()
        dr.Close()



        'Int(rowindex1 = xrow1.RowIndex)
        'Dim editindex As Integer = grvschedule.SelectedIndex
        'Dim lblid1 As String = grvschedule.EditIndex.ToString()

        'If String.IsNullOrEmpty(lblid1.Text) = False And lblid1.Text <> "" Then
        '    Dim lblid2 As TextBox = CType(xrow1.FindControl("txtDOWGV"), TextBox)
        '    Dim lblid3 As TextBox = CType(xrow1.FindControl("txtHolidayGV"), TextBox)

        '    Dim value As String
        '    Dim datevalue As Date
        '    value = CDate(lblid1.Text).AddDays(+1).ToString("dd/MM/yyyy")
        '    datevalue = Convert.ToDateTime(value)
        '    lblid1.Text = value

        '    gdayofWeek = ""
        '    Select Case pWeekNumber(value)
        '        Case 1
        '            gdayofWeek = "1st "
        '        Case 2
        '            gdayofWeek = "2nd "
        '        Case 3
        '            gdayofWeek = "3rd "
        '        Case 4
        '            gdayofWeek = "4th "
        '        Case 5
        '            gdayofWeek = "5th "
        '    End Select
        '    gdayofWeek = gdayofWeek & CDate(lblid1.Text).DayOfWeek.ToString
        '    lblid2.Text = gdayofWeek

        '    Dim conn As MySqlConnection = New MySqlConnection()

        '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '    conn.Open()
        '    Dim command1 As MySqlCommand = New MySqlCommand

        '    command1.CommandType = CommandType.Text

        '    command1.CommandText = "SELECT * FROM tblHoliday where Holiday= '" & datevalue.ToString("yyyy-MM-dd") & "'"
        '    command1.Connection = conn

        '    Dim dr As MySqlDataReader = command1.ExecuteReader()
        '    Dim dt As New DataTable
        '    dt.Load(dr)

        '    If dt.Rows.Count > 0 Then

        '        If dt.Rows(0)("Holiday").ToString <> "" Then : lblid3.Text = "Holiday" : End If

        '    End If
        '    conn.Close()
        '    command1.Dispose()
        'End If
    End Sub

    Protected Sub btnMoreGV_Click(ByVal sender As Object, ByVal e As EventArgs)
        Try
            Dim btnMore As Button = DirectCast(sender, Button)

            Dim xrowMore As GridViewRow = CType(btnMore.NamingContainer, GridViewRow)
            Dim rowindexMore As Integer
            rowindexMore = xrowMore.RowIndex
            Dim valrcnoMore As String
            Dim valdateMore As String
            Dim strdateMore As DateTime
            Dim gPublicHolidayMore As String
            Dim gdayofWeekMore As String

            valrcnoMore = DirectCast(grvschedule.Rows(rowindexMore).FindControl("Label1"), Label).Text
            valdateMore = DirectCast(grvschedule.Rows(rowindexMore).FindControl("Label2"), Label).Text
            valdateMore = CDate(valdateMore).AddDays(+1).ToString("dd/MM/yyyy")

            strdateMore = DateTime.Parse(valdateMore)

            gdayofWeekMore = ""
            Select Case pWeekNumber(valdateMore)
                Case 1
                    gdayofWeekMore = "1st "
                Case 2
                    gdayofWeekMore = "2nd "
                Case 3
                    gdayofWeekMore = "3rd "
                Case 4
                    gdayofWeekMore = "4th "
                Case 5
                    gdayofWeekMore = "5th "
            End Select
            gdayofWeekMore = gdayofWeekMore & CDate(valdateMore).DayOfWeek.ToString.ToUpper


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT * FROM tblHoliday where Holiday= '" & strdateMore.ToString("yyyy-MM-dd") & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            gPublicHolidayMore = ""
            If dt.Rows.Count > 0 Then

                If dt.Rows(0)("Holiday").ToString <> "" Then : gPublicHolidayMore = dt.Rows(0)("Description").ToString : End If

            End If
            command1.Dispose()

            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            Dim qry As String = "Update tbwserviceschedule set servicedate = @servicedate, DOW = @DOW, PublicHoliday = @PublicHoliday where rcno= @Rcno"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@servicedate", strdateMore.ToString("yyyy-MM-dd"))
            command.Parameters.AddWithValue("@DOW", gdayofWeekMore)
            command.Parameters.AddWithValue("@PublicHoliday", gPublicHolidayMore)
            command.Parameters.AddWithValue("@Rcno", valrcnoMore)
            command.Connection = conn
            command.ExecuteNonQuery()

            SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

            grvschedule.DataSourceID = "SqlDSServiceSchedule"

            conn.Close()
            conn.Dispose()

            command.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()

        Catch ex As Exception
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnMoreGV_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnDeleteGV_Click(ByVal sender As Object, ByVal e As EventArgs)
        Dim grdrow As GridViewRow = CType((CType(sender, Button)).NamingContainer, GridViewRow)
        lblDeleteQuery.Text = "Do you want to DELETE the " + grdrow.Cells(5).Text + " service dated " + grdrow.Cells(1).Text + " ?"
        Dim valrcnoMore As String = ""
        valrcnoMore = DirectCast(grdrow.FindControl("Label1"), Label).Text
        lblDeleteConfirm.Text = valrcnoMore

        mdlPopupDelete.Show()
        ' Try
        '    Dim confirmValue As String
        '    confirmValue = ""

        '    confirmValue = Request.Form("confirm_value")
        '    If Right(confirmValue, 3) = "Yes" Then
        '        Dim btnMore As Button = DirectCast(sender, Button)

        '        Dim xrowMore As GridViewRow = CType(btnMore.NamingContainer, GridViewRow)
        '        Dim rowindexMore As Integer
        '        rowindexMore = xrowMore.RowIndex
        '        Dim valrcnoMore As String

        '        valrcnoMore = DirectCast(grvschedule.Rows(rowindexMore).FindControl("Label1"), Label).Text


        '        Dim conn As MySqlConnection = New MySqlConnection()

        '        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '        conn.Open()

        '        Dim command As MySqlCommand = New MySqlCommand
        '        command.CommandType = CommandType.Text

        '        Dim qry As String = "Delete from tbwserviceschedule  where rcno= @Rcno"

        '        command.CommandText = qry
        '        command.Parameters.Clear()
        '        command.Parameters.AddWithValue("@Rcno", valrcnoMore)
        '        command.Connection = conn
        '        command.ExecuteNonQuery()
        '        SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

        '        grvschedule.DataSourceID = "SqlDSServiceSchedule"

        '        txtTotalRecords.Text = grvschedule.Rows.Count - 1

        '        conn.Close()
        '        conn.Dispose()

        '        command.Dispose()
        '        command.Dispose()

        '    End If
        'Catch ex As Exception
        '    InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnDeleteGV_Click", ex.Message.ToString, txtContractNo.Text)
        '    Exit Sub
        'End Try
    End Sub

    Public Function CheckTimeFormat(ByVal vString As String) As Boolean

        CheckTimeFormat = False
        Dim Str As String = ""
        If IsNumeric(Split(vString, ":")(0)) = False Then
            Exit Function
        End If

        If Val(Split(vString, ":")(0)) > 24 Then
            Exit Function
        End If

        If IsNumeric(Split(vString, ":")(1)) = False Then
            Exit Function
        End If

        If Val(Split(vString, ":")(1)) >= 60 Then
            Exit Function
        End If

        If Val(Split(vString, ":")(0) & Split(vString, ":")(0)) > 2400 Then
            Exit Function
        End If

        If Len(vString) > 5 Then '[jiancheng] 20130715 ST201307-077
            If IsNumeric(Split(vString, ":")(2)) = False Then
                Exit Function
            End If

            If Val(Split(vString, ":")(2)) >= 60 Then
                Exit Function
            End If
        End If
        CheckTimeFormat = True
    End Function

    Private Sub generateschedule()
        Try
            System.Threading.Thread.Sleep(5000)
            Label1.Visible = True

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            '' Start: Make Service Records VOID for Regeneration
            If txtnormalorregenerateschedule.Text = "regenerateschedule" Then
                Dim commandUpdRegenerate As MySqlCommand = New MySqlCommand
                commandUpdRegenerate.CommandType = CommandType.Text
                commandUpdRegenerate.CommandText = "Update tblservicerecord set Status ='V' where ContractNo = '" & txtContractNo.Text & "'"
                commandUpdRegenerate.Connection = conn
                commandUpdRegenerate.ExecuteNonQuery()

                commandUpdRegenerate.Dispose()
            End If

            '' End: Make Service Records VOID for Regeneration

            ''''''''''''''''''''''''''''''''''''
            Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
            commandServiceRecordMasterSetup.CommandType = CommandType.Text
            commandServiceRecordMasterSetup.CommandText = "SELECT PrefixDocNoService  FROM tblservicerecordmastersetup"
            commandServiceRecordMasterSetup.Connection = conn

            Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
            Dim dtServiceRecordMasterSetup As New DataTable
            dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

            txtPrefixDocNoService.Text = dtServiceRecordMasterSetup.Rows(0)("PrefixDocNoService")

            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lServiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String
            Dim lFullServiceNo As String
            Dim strUpdate As String
            Dim strdate As DateTime
            Dim lSeq As String

            ''Dim lintSqlCode As Integer, lbillAmt, lvalue, lContractDetSQLID, lContractDetFHzSQLID As Decimal
            Dim lteamID, lvehNo, lInChargeID, lScheduler, lCustTelephone, lCustFax, lContact, lwarranty, lNotes, lServiceNoActual, lContractNo, lProspectID, lComments, lreason, laction, ltargetID, lServiceBy, llocation, lbranchID, lheaderComments, lFrequency, lTeamName As String
            Dim laddBlock, laddNos, laddFloor, laddUnit, laddress1, laddBuilding, laddStreet, laddCity, laddState, laddCountry, laddPostal, lLocateGrp, lEmail, lContactType, lPONo, lOurRef, lYourRef As String
            Dim lBillingName, lbillAdress1, lbillStreet, lbillBuilding, lbillCity, lbillCountry, lbillState, lbillPostal, lSupervisor As String
            Dim ltimeIn, ltimeOut, lscheduleType As String, lallocateTime As Integer = 0

            Dim lservicenotes As String
            lservicenotes = ""

            'Start: Retrive values from Company/Person for headers

            laddBlock = ""
            laddNos = ""
            laddFloor = ""
            laddUnit = ""
            laddress1 = ""
            laddBuilding = ""
            laddStreet = ""
            laddCity = ""
            laddState = ""
            laddCountry = ""
            laddPostal = ""
            lLocateGrp = ""
            lEmail = ""
            lscheduleType = ""
            lNotes = "'"
            lScheduler = ""
            lteamID = ""
            lInChargeID = ""
            lheaderComments = ""
            lCustTelephone = ""
            lCustFax = ""
            lContact = ""
            ltimeIn = ""
            ltimeOut = ""
            lServiceBy = ""
            lreason = ""
            laction = ""
            ltargetID = ""
            lSeq = ""
            lContactType = ""
            lTeamName = ""
            lPONo = ""
            lOurRef = ""
            lYourRef = ""

            lBillingName = ""
            lbillAdress1 = ""
            lbillStreet = ""
            lbillBuilding = ""
            lbillCity = ""
            lbillCountry = ""
            lbillState = ""
            lbillPostal = ""
            llocation = ""

            'Dim conn As MySqlConnection = New MySqlConnection(constr)
            'conn.Open()

            Dim commandAddress As MySqlCommand = New MySqlCommand
            commandAddress.CommandType = CommandType.Text

            Dim comLocExist As Boolean = False


            If comLocExist = False Then
                'Dim dsAddress As DataSet = Nothing
                If txtContactType.Text.ToUpper = "COMPANY" Or txtContactType.Text.ToUpper = "CORPORATE" Then
                    lContactType = "COMPANY"
                    commandAddress.CommandText = "Select AddBlock, AddNos, AddFloor, AddUnit, Address1, AddStreet, AddBuilding, AddCity, AddCountry, AddState, AddPOstal, ContactPersonEmail, BillingName, billAddress1, billStreet, billBuilding, billCity, billCountry, billState, billPostal  from tblCompany where AccountiD = '" & txtAccountId.Text & "'"
                ElseIf txtContactType.Text.ToUpper = "PERSON" Or txtContactType.Text.ToUpper = "RESIDENTIAL" Then
                    lContactType = "PERSON"
                    commandAddress.CommandText = "Select AddBlock, AddNos, AddFloor, AddUnit, Address1, AddStreet, AddBuilding, AddCity, AddCountry, AddState, AddPOstal, Email, BillingName, billAddress1, billStreet, billBuilding, billCity, billCountry, billState, billPostal from tblPerson where AccountiD = '" & txtAccountId.Text & "'"
                End If
            End If


            ''''''''
            'commandAddress.CommandText = "SELECT *,UPPER(Salesman),UPPER(LocateGrp),UPPER(Industry) FROM tblcompany where rcno=" & Convert.ToInt32(txtRcno.Text)
            commandAddress.Connection = conn

            Dim drAddress As MySqlDataReader = commandAddress.ExecuteReader()
            Dim dtAddress As New DataTable
            dtAddress.Load(drAddress)

            If dtAddress.Rows.Count > 0 Then
                laddBlock = dtAddress.Rows(0)("AddBlock").ToString
                laddNos = dtAddress.Rows(0)("AddNos").ToString
                laddFloor = dtAddress.Rows(0)("AddFloor").ToString
                laddUnit = dtAddress.Rows(0)("AddUnit").ToString
                laddress1 = dtAddress.Rows(0)("Address1").ToString
                laddStreet = dtAddress.Rows(0)("AddStreet").ToString
                laddBuilding = dtAddress.Rows(0)("AddBuilding").ToString

                laddCity = dtAddress.Rows(0)("AddCity").ToString
                laddCountry = dtAddress.Rows(0)("AddCountry").ToString
                laddState = dtAddress.Rows(0)("AddState").ToString
                laddPostal = dtAddress.Rows(0)("AddPostal").ToString

                If txtContactType.Text.ToUpper = "COMPANY" Or txtContactType.Text.ToUpper = "CORPORATE" Then
                    lEmail = dtAddress.Rows(0)("ContactPersonEmail").ToString
                ElseIf txtContactType.Text.ToUpper = "PERSON" Or txtContactType.Text.ToUpper = "RESIDENTIAL" Then
                    lEmail = dtAddress.Rows(0)("Email").ToString
                End If


                lBillingName = dtAddress.Rows(0)("BillingName").ToString
                lbillAdress1 = dtAddress.Rows(0)("BillAddress1").ToString
                lbillStreet = dtAddress.Rows(0)("BillStreet").ToString
                lbillBuilding = dtAddress.Rows(0)("BillBuilding").ToString
                lbillCity = dtAddress.Rows(0)("BillCity").ToString
                lbillCountry = dtAddress.Rows(0)("BillCountry").ToString
                lbillState = dtAddress.Rows(0)("BillState").ToString
                lbillPostal = dtAddress.Rows(0)("BillPostal").ToString
            End If

            commandAddress.Dispose()
            dtAddress.Dispose()
            drAddress.Close()


            If lLocateGrp.Trim = "" And laddPostal.Trim <> "" Then

                Dim commandLocateGRP As MySqlCommand = New MySqlCommand
                commandLocateGRP.CommandType = CommandType.Text

                'commandAddress.CommandText = "Select LocateGrp from tblPostalToLocation WHERE '" & laddPostal & "' like PostalBeginWith +'%' and PostalBeginWith is not null and PostalBeginWith<>'' order by PostalBeginWith "
                commandAddress.CommandText = "Select LocateGrp from tblPostalToLocation WHERE PostalBeginWith = '" & Left(laddPostal, 2) & "' and PostalBeginWith is not null and PostalBeginWith<>'' order by PostalBeginWith "
                Dim drLocateGRP As MySqlDataReader = commandAddress.ExecuteReader()
                Dim dtLocateGRP As New DataTable
                dtLocateGRP.Load(drLocateGRP)

                If dtLocateGRP.Rows.Count > 0 Then
                    lLocateGrp = dtLocateGRP.Rows(0)("LocateGrp").ToString

                End If
                commandLocateGRP.Dispose()
                dtLocateGRP.Dispose()
                drLocateGRP.Close()
            End If

            'End: Retrive values Company/Person  for headers

            'Start: Retrive values from Contract for headers

            Dim commandContract As MySqlCommand = New MySqlCommand
            commandContract.CommandType = CommandType.Text
            commandContract.CommandText = "Select LocateGRP, Notes, Comments, ServiceNoActual, Contact, ContractNo, ProspectID, teamID, Telephone, Fax, Scheduler, InChargeID, ScheduleType, timeIn, timeOut, Support, PoNo, OurReference, YourReference, AllocatedSvcTime, Supervisor, Location  from tblContract where ContractNo = '" & txtContractNo.Text & "'"
            commandContract.Connection = conn

            Dim drContract As MySqlDataReader = commandContract.ExecuteReader()
            Dim dtContract As New DataTable
            dtContract.Load(drContract)

            If dtContract.Rows.Count > 0 Then
                lLocateGrp = dtContract.Rows(0)("LocateGrp").ToString
                lNotes = dtContract.Rows(0)("Notes").ToString
                lheaderComments = dtContract.Rows(0)("Comments").ToString
                lServiceNoActual = Val(dtContract.Rows(0)("ServiceNoActual")).ToString
                lContact = dtContract.Rows(0)("Contact").ToString
                lContractNo = dtContract.Rows(0)("ContractNo").ToString
                lProspectID = dtContract.Rows(0)("ProspectID").ToString
                lteamID = dtContract.Rows(0)("teamID").ToString
                lCustTelephone = dtContract.Rows(0)("Telephone").ToString
                lCustFax = dtContract.Rows(0)("Fax").ToString
                lScheduler = dtContract.Rows(0)("Scheduler").ToString
                lInChargeID = dtContract.Rows(0)("InChargeID").ToString
                lscheduleType = dtContract.Rows(0)("ScheduleType").ToString
                ltimeIn = dtContract.Rows(0)("timeIn").ToString
                ltimeOut = dtContract.Rows(0)("timeOut").ToString
                lServiceBy = dtContract.Rows(0)("Support").ToString
                lPONo = dtContract.Rows(0)("PoNo").ToString

                lOurRef = dtContract.Rows(0)("OurReference").ToString
                lYourRef = dtContract.Rows(0)("YourReference").ToString
                lallocateTime = dtContract.Rows(0)("AllocatedSvcTime").ToString
                lSupervisor = dtContract.Rows(0)("Supervisor").ToString

                llocation = dtContract.Rows(0)("Location").ToString

                lteamID = Strings.Left(lteamID, 25).Trim
                lvehNo = ""

                If lteamID.Trim <> "" Then

                    Dim commandVehNo As MySqlCommand = New MySqlCommand
                    commandVehNo.CommandType = CommandType.Text
                    commandVehNo.CommandText = "SELECT VehNos, TeamName FROM tblTeam where TeamID='" & lteamID & "'"
                    commandVehNo.Connection = conn

                    Dim drVehno As MySqlDataReader = commandVehNo.ExecuteReader()
                    Dim dtVehno As New DataTable
                    dtVehno.Load(drVehno)

                    If dtVehno.Rows.Count > 0 Then
                        lvehNo = dtVehno.Rows(0)("VehNos").ToString
                        lTeamName = dtVehno.Rows(0)("TeamName").ToString
                    End If

                    commandVehNo.Dispose()
                    dtVehno.Dispose()
                    drVehno.Close()
                End If

                ''''''''''''''''

            End If

            commandContract.Dispose()
            dtContract.Dispose()
            drContract.Close()

            'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "2", "")
            'End: Retrieve values Contract for headers

            Dim connService As MySqlConnection = New MySqlConnection(constr)
            connService.Open()

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text

            Dim sServiceDate, sDOW, sPH, sFrequency, starget, lTarget, sServices, sProductServices, sServiceId, sLocationId, sServiceLocationGroup As String, sValue As Decimal, sContractDetSQLID, sContractDetFHzSQLID As Integer

            sServiceDate = ""
            sFrequency = ""
            sDOW = ""
            sPH = ""
            starget = ""
            lTarget = ""
            sServices = ""
            sProductServices = ""
            sLocationId = ""
            gtargetID = ""

            Dim rownum As Integer
            rownum = 1
            sServiceLocationGroup = ""

            If grvschedule.Rows.Count > 0 Then

                For Each row As GridViewRow In grvschedule.Rows
                    For x As Integer = 0 To grvschedule.Columns.Count - 1

                        If x = 1 Then
                            sServiceDate = row.Cells(x).Text
                        End If
                        If x = 3 Then
                            sDOW = row.Cells(x).Text
                        End If

                        If x = 4 Then
                            sPH = row.Cells(x).Text
                        End If

                        If x = 5 Then
                            sFrequency = row.Cells(x).Text
                        End If

                        If x = 6 Then
                            sServices = row.Cells(x).Text
                        End If

                        If x = 7 Then
                            starget = row.Cells(x).Text
                            'gtargetID = row.Cells(x).Text
                        End If

                        If x = 8 Then
                            sValue = row.Cells(x).Text
                        End If

                        If x = 9 Then
                            sLocationId = row.Cells(x).Text
                        End If

                        'If x = 13 Then
                        '    txtAgreeValue.Text = row.Cells(x).Text
                        'End If

                        If x = 13 Then
                            sServiceLocationGroup = row.Cells(x).Text
                        End If

                        If x = 22 Then
                            sContractDetSQLID = row.Cells(x).Text
                        End If



                        If x = 23 Then
                            sContractDetFHzSQLID = row.Cells(x).Text
                        End If

                        If x = 25 Then
                            sServiceId = row.Cells(x).Text
                        End If


                    Next x

                    '31/10/16

                    'Start: Retrive values from Service whether record exists for the Date and Location

                    Dim commandServiceExists As MySqlCommand = New MySqlCommand
                    commandServiceExists.CommandType = CommandType.Text
                    commandServiceExists.CommandText = "Select RecordNo, BillAmount  from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and ServiceDate = '" + Convert.ToDateTime(sServiceDate).ToString("yyyy-MM-dd") & "' and LocationID ='" & sLocationId & "' and status ='O'"
                    commandServiceExists.Connection = conn

                    Dim drContractServiceExists As MySqlDataReader = commandServiceExists.ExecuteReader()
                    Dim dtContractServiceExists As New DataTable
                    dtContractServiceExists.Load(drContractServiceExists)

                    If dtContractServiceExists.Rows.Count > 0 Then
                        lFullServiceNo = dtContractServiceExists.Rows(0)("RecordNo").ToString

                        'Start: Update BillAmount for same location on 10.12.16
                        Dim lExistingBillAmount As Decimal
                        lExistingBillAmount = dtContractServiceExists.Rows(0)("BillAmount").ToString() + sValue

                        Dim commandUpdBillAmount As MySqlCommand = New MySqlCommand
                        commandUpdBillAmount.CommandType = CommandType.Text
                        commandUpdBillAmount.CommandText = "Update tblservicerecord set BillAmount = " & lExistingBillAmount & "  where ContractNo = '" & txtContractNo.Text & "' and ServiceDate = '" + Convert.ToDateTime(sServiceDate).ToString("yyyy-MM-dd") & "' and LocationID ='" & sLocationId & "' and status ='O'"
                        commandUpdBillAmount.Connection = conn
                        commandUpdBillAmount.ExecuteNonQuery()

                        'End:Update BillAmount for same location on 10.12.16

                        commandUpdBillAmount.Dispose()
                        commandServiceExists.Dispose()
                        dtContractServiceExists.Dispose()
                        drContractServiceExists.Close()

                        GoTo ServicedetailInsert
                    End If

                    commandServiceExists.Dispose()
                    dtContractServiceExists.Dispose()
                    drContractServiceExists.Close()

                    'End: Retrive values from Service whether record exists for the date

                    'Start: Retrive values from CompanyLocation/PersonLocation for the AccountId and Location

                    Dim lServiceNameLoc, lDescriptionLoc, lAddress1Loc, lAddStreetLoc, lAddBuildingLoc, lAddCityLoc, lAddStateLoc, lAddCountryLoc, lAddPostalLoc, lLocateGRPLoc, lContactPersonLoc, lTelephoneLoc, lMobileLoc, lEmailLoc, lFaxLoc, lContact1PositionLoc, lTelephone2Loc, lContactPerson2Loc, lContact2PositionLoc, lContact2TelLoc, lContact2FaxLoc, lContact2Tel2Loc, lContact2MobileLoc, lContact2EmailLoc, lBillEmail1SvcLoc, lBillEmail2SvcLoc, lEmailCCLoc, lSendServiceReportTo1Loc, lSendServiceReportTo2Loc, lSalesmansvc, lLocationLoc As String

                    lServiceNameLoc = ""
                    lDescriptionLoc = ""
                    lAddress1Loc = ""
                    lAddStreetLoc = ""
                    lAddBuildingLoc = ""
                    lAddCityLoc = ""
                    lAddStateLoc = ""
                    lAddCountryLoc = ""
                    lAddPostalLoc = ""
                    lLocateGRPLoc = ""
                    lContactPersonLoc = ""
                    lTelephoneLoc = ""
                    lMobileLoc = ""
                    lEmailLoc = ""
                    lFaxLoc = ""
                    lContact1PositionLoc = ""
                    lTelephone2Loc = ""
                    lContactPerson2Loc = ""
                    lContact2PositionLoc = ""
                    lContact2TelLoc = ""
                    lContact2FaxLoc = ""
                    lContact2Tel2Loc = ""
                    lContact2MobileLoc = ""
                    lContact2EmailLoc = ""

                    lBillEmail1SvcLoc = ""
                    lBillEmail2SvcLoc = ""
                    lSendServiceReportTo1Loc = ""
                    lSendServiceReportTo2Loc = ""
                    lSalesmansvc = ""
                    lEmailCCLoc = ""
                    lLocationLoc = ""

                    Dim commandCompanyPersonLocation As MySqlCommand = New MySqlCommand
                    commandCompanyPersonLocation.CommandType = CommandType.Text

                    If txtContactType.Text.ToUpper = "COMPANY" Or txtContactType.Text.ToUpper = "CORPORATE" Then
                        commandCompanyPersonLocation.CommandText = "Select ServiceName, Description, Address1, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, LocateGRP, ContactPerson, Telephone, Mobile, Email, Fax, Contact1Position, Telephone2, ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile,  Contact2Email, BillEmail1Svc, BillEmail2Svc, SendServiceReportTo1, SendServiceReportTo2, Salesmansvc, ServiceEmailCC, Location  from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'  and LocationID ='" & sLocationId & "'"
                    ElseIf txtContactType.Text.ToUpper = "PERSON" Or txtContactType.Text.ToUpper = "RESIDENTIAL" Then
                        commandCompanyPersonLocation.CommandText = "Select ServiceName, Description, Address1, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, LocateGRP, ContactPerson, Telephone, Mobile, Email, Fax, Contact1Position, Telephone2, ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile,  Contact2Email, BillEmail1Svc, BillEmail2Svc, SendServiceReportTo1, SendServiceReportTo2, Salesmansvc, ServiceEmailCC, Location  from tblPersonLocation where AccountID = '" & txtAccountId.Text & "'  and LocationID ='" & sLocationId & "'"
                    End If

                    commandCompanyPersonLocation.Connection = conn

                    Dim drContractCompanyPersonLocation As MySqlDataReader = commandCompanyPersonLocation.ExecuteReader()
                    Dim dtContractCompanyPersonLocation As New DataTable
                    dtContractCompanyPersonLocation.Load(drContractCompanyPersonLocation)

                    If dtContractCompanyPersonLocation.Rows.Count > 0 Then
                        lServiceNameLoc = dtContractCompanyPersonLocation.Rows(0)("ServiceName").ToString
                        lDescriptionLoc = dtContractCompanyPersonLocation.Rows(0)("Description").ToString

                        lAddress1Loc = dtContractCompanyPersonLocation.Rows(0)("Address1").ToString
                        lAddStreetLoc = dtContractCompanyPersonLocation.Rows(0)("AddStreet").ToString
                        lAddBuildingLoc = dtContractCompanyPersonLocation.Rows(0)("AddBuilding").ToString
                        lAddCityLoc = dtContractCompanyPersonLocation.Rows(0)("AddCity").ToString
                        lAddStateLoc = dtContractCompanyPersonLocation.Rows(0)("AddState").ToString
                        lAddCountryLoc = dtContractCompanyPersonLocation.Rows(0)("AddCountry").ToString
                        lAddPostalLoc = dtContractCompanyPersonLocation.Rows(0)("AddPostal").ToString
                        lLocateGRPLoc = dtContractCompanyPersonLocation.Rows(0)("LocateGRP").ToString
                        lContactPersonLoc = dtContractCompanyPersonLocation.Rows(0)("ContactPerson").ToString
                        lTelephoneLoc = dtContractCompanyPersonLocation.Rows(0)("Telephone").ToString
                        lMobileLoc = dtContractCompanyPersonLocation.Rows(0)("Mobile").ToString
                        lEmailLoc = dtContractCompanyPersonLocation.Rows(0)("Email").ToString
                        lFaxLoc = dtContractCompanyPersonLocation.Rows(0)("Fax").ToString
                        lContact1PositionLoc = dtContractCompanyPersonLocation.Rows(0)("Contact1Position").ToString
                        lTelephone2Loc = dtContractCompanyPersonLocation.Rows(0)("Telephone2").ToString
                        lContactPerson2Loc = dtContractCompanyPersonLocation.Rows(0)("ContactPerson2").ToString
                        lContact2PositionLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Position").ToString
                        lContact2TelLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Tel").ToString
                        lContact2FaxLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Fax").ToString
                        lContact2Tel2Loc = dtContractCompanyPersonLocation.Rows(0)("Contact2Tel2").ToString
                        lContact2MobileLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Mobile").ToString
                        lContact2EmailLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Email").ToString

                        'BillEmail1Svc, BillEmail2Svc, SendServiceReportTo1, SendServiceReportTo2

                        lBillEmail1SvcLoc = dtContractCompanyPersonLocation.Rows(0)("BillEmail1Svc").ToString
                        lBillEmail2SvcLoc = dtContractCompanyPersonLocation.Rows(0)("BillEmail2Svc").ToString
                        lSendServiceReportTo1Loc = dtContractCompanyPersonLocation.Rows(0)("SendServiceReportTo1").ToString
                        lSendServiceReportTo2Loc = dtContractCompanyPersonLocation.Rows(0)("SendServiceReportTo2").ToString
                        lSalesmansvc = dtContractCompanyPersonLocation.Rows(0)("Salesmansvc").ToString

                        lEmailCCLoc = dtContractCompanyPersonLocation.Rows(0)("ServiceEmailCC").ToString
                        lLocationLoc = dtContractCompanyPersonLocation.Rows(0)("Location").ToString

                    End If

                    commandCompanyPersonLocation.Dispose()
                    dtContractCompanyPersonLocation.Dispose()
                    drContractCompanyPersonLocation.Close()

                    'End: Retrive values from CompanyLocation/PersonLocation for the AccountId and Location

                    '31/10/16

                    'Start: Doc Control

                    lSeparator = "-"
                    strUpdate = ""
                    lPrefix = ""
                    lSuffixVal = 0
                    lServiceNo = ""
                    lMonth = ""
                    lYear = "'"

                    lPrefix = Format(CDate(sServiceDate), "yyyyMM")
                    'lServiceNo = "SERV" + lPrefix + "-"
                    lServiceNo = txtPrefixDocNoService.Text.Trim + "SERV" + lPrefix + "-"

                    lMonth = Right(lPrefix, 2)
                    lYear = Left(lPrefix, 4)

                    'lPrefix = "SERV" + lYear

                    lPrefix = "SERV" + lYear

                    lSeq = Format(Val(rownum), "0000")
                    lFullServiceNo = ""

                    Dim commandDocControl As MySqlCommand = New MySqlCommand
                    commandDocControl.CommandType = CommandType.Text
                    commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
                    commandDocControl.Connection = conn

                    Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        If lMonth = "01" Then
                            lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "02" Then
                            lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString
                            strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "03" Then
                            lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "04" Then
                            lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "05" Then
                            lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "06" Then
                            lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "07" Then
                            lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "08" Then
                            lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString
                            strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "09" Then
                            lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "10" Then
                            lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "11" Then
                            lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString

                            strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        ElseIf lMonth = "12" Then
                            lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                            lSetWidth = dt.Rows(0)("Width").ToString
                            strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                        End If

                        Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                        commandDocControlEdit.CommandType = CommandType.Text
                        commandDocControlEdit.CommandText = strUpdate
                        commandDocControlEdit.Connection = conn
                        commandDocControlEdit.ExecuteNonQuery()

                    Else

                        Dim lSuffixVal1 As String
                        Dim lSuffixVal2 As String
                        Dim lSuffixVal3 As String
                        Dim lSuffixVal4 As String
                        Dim lSuffixVal5 As String
                        Dim lSuffixVal6 As String
                        Dim lSuffixVal7 As String
                        Dim lSuffixVal8 As String
                        Dim lSuffixVal9 As String
                        Dim lSuffixVal10 As String
                        Dim lSuffixVal11 As String
                        Dim lSuffixVal12 As String

                        lSuffixVal1 = 0
                        lSuffixVal2 = 0
                        lSuffixVal3 = 0
                        lSuffixVal4 = 0
                        lSuffixVal5 = 0
                        lSuffixVal6 = 0
                        lSuffixVal7 = 0
                        lSuffixVal8 = 0
                        lSuffixVal9 = 0
                        lSuffixVal10 = 0
                        lSuffixVal11 = 0
                        lSuffixVal12 = 0

                        If lMonth = "01" Then
                            lSuffixVal1 = 1
                        ElseIf lMonth = "02" Then
                            lSuffixVal2 = 1
                        ElseIf lMonth = "03" Then
                            lSuffixVal3 = 1
                        ElseIf lMonth = "04" Then
                            lSuffixVal4 = 1
                        ElseIf lMonth = "05" Then
                            lSuffixVal5 = 1
                        ElseIf lMonth = "06" Then
                            lSuffixVal6 = 1
                        ElseIf lMonth = "07" Then
                            lSuffixVal7 = 1
                        ElseIf lMonth = "08" Then
                            lSuffixVal8 = 1
                        ElseIf lMonth = "09" Then
                            lSuffixVal9 = 1
                        ElseIf lMonth = "10" Then
                            lSuffixVal10 = 1
                        ElseIf lMonth = "11" Then
                            lSuffixVal11 = 1
                        ElseIf lMonth = "12" Then
                            lSuffixVal12 = 1
                        End If
                        Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                        commandDocControlInsert.CommandType = CommandType.Text
                        'commandDocControlInsert.CommandText = "INSERT INTO tblDocControl(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                        '               "('" & Left(lPrefix, Len(lPrefix) - 2) & "','M'," & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"
                        commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
         "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"

                        commandDocControlInsert.Connection = conn
                        commandDocControlInsert.ExecuteNonQuery()

                    End If


                    lSetZeroes = ""

                    Dim i As Integer
                    If lSetWidth > 0 Then
                        For i = 1 To lSetWidth - (Len(lSuffixVal))
                            lSetZeroes = lSetZeroes & "0"
                        Next i

                    End If
                    lSuffix = lSetZeroes + lSuffixVal.ToString()
                    lFullServiceNo = (lServiceNo + lSuffix).Trim

                    'txtContractNo.Text = lServiceNo + lSuffix
                    'End: Doc Control
                    'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "3", "")


                    'Dim qryService As String = "INSERT INTO tblserviceRecord(AccountId, CustaddBlock, CustaddNos, CustaddFloor, CustaddUnit, Custaddress1, CustaddBuilding,  "
                    'qryService = qryService + " CustaddStreet, CustaddCity, CustaddState,CustaddCountry, CustaddPostal,location,BranchCode, ServiceBy, "
                    'qryService = qryService + " ServiceDate, scheduleType, Status,RecordNo, SchServiceTime,SchServiceTimeOut, AllocatedSvcTime,ContactType, CustCode, CustName,"
                    'qryService = qryService + " Contact, Notes, SchServiceDate,BillAmount,ContractDetSQLID, ContractDetFHzSQLID, ContractNo, CompanyGroup, TargetId,"
                    'qryService = qryService + " VehNo, Scheduler, Seq,  Comments, TeamID, InChargeID, WebFlowFrom, WebFlowTo, WebEditSource, WebLastEditDevice,"
                    'qryService = qryService + " FlowFrom, FlowTo, EditSource, LastEditDevice,  CustTelephone, CustFax, ChkOnSite,   "
                    'qryService = qryService + " BillYN, ManualYN, SignatureYN, chkUrgent, Filling, Fax, FaxnReturn, BilledAmt, CollectPayment, CollectAmt, EmailSent, EmailSendFail, TabletDownloaded, SubmitCount, CustomerSign, ServiceBySign, InChargeSign, LocationID, "
                    'qryService = qryService + " ServiceName, Description, Address1, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, LocateGRP,"
                    'qryService = qryService + " ContactPersonID, Contact1Tel, ContactPersonMobile, Email, Contact1Fax, Contact1Position, Contact1Tel2, "
                    'qryService = qryService + " ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile,  Contact2Email, ServiceLocationGroup, PONo, OtherEmail, "
                    'qryService = qryService + " OffAddress, OffStreet, OffBuilding, OffCity, OffCountry, OffState,  OffPostal, BillingName, BillAddress, BillStreet, BillBuilding, BillCity, BillCountry, BillState,  BillPostal, OurRef, YourRef, Salesman, Supervisor, LockST, "
                    'qryService = qryService + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                    'qryService = qryService + " VALUES(@AccountId, @CustaddBlock, @CustaddNos, @CustaddFloor, @CustaddUnit, @Custaddress1, @CustaddBuilding,"
                    'qryService = qryService + " @CustaddStreet, @CustaddCity, @CustaddState, @CustaddCountry, @CustaddPostal, @location, @BranchCode, @ServiceBy, "
                    'qryService = qryService + " @ServiceDate, @scheduleType, @Status, @RecordNo, @SchServiceTime, @SchServiceTimeOut, @AllocatedSvcTime, @ContactType, @CustCode, @CustName,"
                    'qryService = qryService + " @Contact, @Notes, @SchServiceDate, @BillAmount,@ContractDetSQLID, @ContractDetFHzSQLID, @ContractNo, @CompanyGroup, @TargetId,"
                    'qryService = qryService + " @VehNo, @Scheduler, @Seq,  @Comments, @TeamID, @InChargeID, @WebFlowFrom, @WebFlowTo, @WebEditSource, @WebLastEditDevice,"
                    'qryService = qryService + " @FlowFrom, @FlowTo, @EditSource, @LastEditDevice,  @CustTelephone, @CustFax, @ChkOnSite,  "
                    'qryService = qryService + " 'N', 'N',  'Y', 0, 0, 0, 0, 0, 0.00, 0, 0, 0, 0.00, 0, '','','', @LocationId, "
                    'qryService = qryService + " @ServiceName, @Description, @Address1, @AddStreet, @AddBuilding, @AddCity, @AddState, @AddCountry, @AddPostal, @LocateGRP,"
                    'qryService = qryService + " @ContactPersonID, @Contact1Tel, @ContactPersonMobile, @Email, @Contact1Fax, @Contact1Position, @Contact1Tel2, "
                    'qryService = qryService + " @ContactPerson2, @Contact2Position, @Contact2Tel, @Contact2Fax, @Contact2Tel2, @Contact2Mobile,  @Contact2Email, @ServiceLocationGroup, @PoNo, @OtherEmail, "
                    'qryService = qryService + " @OffAddress, @OffStreet, @OffBuilding, @OffCity, @OffCountry, @OffState,  @OffPostal, @BillingName, @BillAddress, @BillStreet, @BillBuilding, @BillCity, @BillCountry, @BillState,  @BillPostal, @OurRef, @YourRef, @Salesman, @Supervisor, @LockST, "
                    'qryService = qryService + " @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                    'command.CommandText = qryService
                    'command.Parameters.Clear()
                    'command.Parameters.AddWithValue("@AccountId", txtAccountId.Text.Trim.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddBlock", laddBlock.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddNos", laddNos.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddFloor", laddFloor.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddUnit", laddUnit.ToUpper)
                    'command.Parameters.AddWithValue("@Custaddress1", laddress1.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddBuilding", laddBuilding.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddStreet", laddStreet.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddCity", laddCity.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddState", laddState.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddCountry", laddCountry.ToUpper)
                    'command.Parameters.AddWithValue("@CustaddPostal", laddPostal.ToUpper)
                    'command.Parameters.AddWithValue("@location", lLocationLoc)
                    'command.Parameters.AddWithValue("@BranchCode", "")
                    'command.Parameters.AddWithValue("@ServiceBy", lServiceBy.ToUpper)

                    'If sServiceDate.Trim = "" Then
                    '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    'Else
                    '    strdate = DateTime.Parse(sServiceDate.Trim)
                    '    command.Parameters.AddWithValue("@ServiceDate", strdate.ToString("yyyy-MM-dd"))
                    'End If

                    'command.Parameters.AddWithValue("@scheduleType", lscheduleType)
                    'command.Parameters.AddWithValue("@Status", "O")
                    ''command.Parameters.AddWithValue("@RecordNo", (lServiceNo + lSuffix).Trim)
                    'command.Parameters.AddWithValue("@RecordNo", lFullServiceNo)

                    'command.Parameters.AddWithValue("@SchServiceTime", ltimeIn)
                    'command.Parameters.AddWithValue("@SchServiceTimeOut", ltimeOut)
                    'command.Parameters.AddWithValue("@AllocatedSvcTime", lallocateTime)

                    ''If lContactType = "COMPANY" Then
                    ''    command.Parameters.AddWithValue("@ContactType", "CORPORATE")
                    ''Else
                    ''    command.Parameters.AddWithValue("@ContactType", "RESIDENTIAL")
                    ''End If
                    'command.Parameters.AddWithValue("@ContactType", lContactType.ToUpper)
                    'command.Parameters.AddWithValue("@CustCode", txtClient.Text.ToUpper)
                    'command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)

                    'command.Parameters.AddWithValue("@Contact", lContact.ToUpper)
                    'command.Parameters.AddWithValue("@Notes", lNotes.ToUpper)

                    'If sServiceDate.Trim = "" Then
                    '    command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
                    'Else
                    '    strdate = DateTime.Parse(sServiceDate.Trim)
                    '    command.Parameters.AddWithValue("@SchServiceDate", strdate.ToString("yyyy-MM-dd"))
                    'End If

                    'command.Parameters.AddWithValue("@BillAmount", sValue)
                    'command.Parameters.AddWithValue("@ContractDetSQLID", sContractDetSQLID)
                    'command.Parameters.AddWithValue("@ContractDetFHzSQLID", sContractDetFHzSQLID)
                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                    'command.Parameters.AddWithValue("@CompanyGroup", Session("companygrp"))
                    'command.Parameters.AddWithValue("@TargetId", "")
                    'command.Parameters.AddWithValue("@VehNo", lvehNo.ToUpper)
                    'command.Parameters.AddWithValue("@Scheduler", lScheduler.ToUpper)
                    'command.Parameters.AddWithValue("@Seq", Right(lSeq, 3))
                    ''command.Parameters.AddWithValue("@Email", lEmail)
                    'command.Parameters.AddWithValue("@Comments", lheaderComments.ToUpper)
                    'command.Parameters.AddWithValue("@TeamID", lteamID.ToUpper)
                    'command.Parameters.AddWithValue("@InChargeID", lInChargeID.ToUpper)
                    'command.Parameters.AddWithValue("@WebFlowFrom", "ZS")
                    'command.Parameters.AddWithValue("@WebFlowTo", "ZS")
                    'command.Parameters.AddWithValue("@WebEditSource", "ZS")
                    'command.Parameters.AddWithValue("@WebLastEditDevice", "")
                    'command.Parameters.AddWithValue("@FlowFrom", "ZS")
                    'command.Parameters.AddWithValue("@FlowTo", "ZS")
                    'command.Parameters.AddWithValue("@EditSource", "ZS")

                    'command.Parameters.AddWithValue("@LastEditDevice", "")

                    ''command.Parameters.AddWithValue("@LastEditDevice", Left(System.Net.Dns.GetHostEntry(Request.UserHostAddress).HostName, 25))
                    ''command.Parameters.AddWithValue("@LocateGRP", lLocateGrp)
                    'command.Parameters.AddWithValue("@CustTelephone", lCustTelephone)
                    'command.Parameters.AddWithValue("@CustFax", lCustFax)
                    'command.Parameters.AddWithValue("@ChkOnSite", 1)
                    'command.Parameters.AddWithValue("@LocationId", sLocationId.ToUpper)
                    'command.Parameters.AddWithValue("@ServiceName", lServiceNameLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Description", lDescriptionLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Address1", lAddress1Loc.ToUpper)
                    'command.Parameters.AddWithValue("@AddStreet", lAddStreetLoc.ToUpper)
                    'command.Parameters.AddWithValue("@AddBuilding", lAddBuildingLoc.ToUpper)
                    'command.Parameters.AddWithValue("@AddCity", lAddCityLoc.ToUpper)
                    'command.Parameters.AddWithValue("@AddState", lAddStateLoc.ToUpper)
                    'command.Parameters.AddWithValue("@AddCountry", lAddCountryLoc.ToUpper)
                    'command.Parameters.AddWithValue("@AddPostal", lAddPostalLoc)
                    'command.Parameters.AddWithValue("@LocateGRP", lLocateGRPLoc.ToUpper)
                    'command.Parameters.AddWithValue("@ContactPersonID", lContactPersonLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Contact1Tel", lTelephoneLoc)
                    'command.Parameters.AddWithValue("@ContactPersonMobile", lMobileLoc)
                    'command.Parameters.AddWithValue("@Email", lEmailLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Contact1Fax", lFaxLoc)
                    'command.Parameters.AddWithValue("@Contact1Position", lContact1PositionLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Contact1Tel2", lTelephone2Loc)
                    'command.Parameters.AddWithValue("@ContactPerson2", lContactPerson2Loc.ToUpper)
                    'command.Parameters.AddWithValue("@Contact2Position", lContact2PositionLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Contact2Tel", lContact2TelLoc)
                    'command.Parameters.AddWithValue("@Contact2Fax", lContact2FaxLoc)
                    'command.Parameters.AddWithValue("@Contact2Tel2", lContact2Tel2Loc)
                    'command.Parameters.AddWithValue("@Contact2Mobile", lContact2MobileLoc.ToUpper)
                    'command.Parameters.AddWithValue("@Contact2Email", Left(lContact2EmailLoc.ToUpper, 100))

                    'command.Parameters.AddWithValue("@OffAddress", laddress1.ToUpper)
                    'command.Parameters.AddWithValue("@OffStreet", laddStreet.ToUpper)
                    'command.Parameters.AddWithValue("@OffBuilding", laddBuilding.ToUpper)
                    'command.Parameters.AddWithValue("@OffCity", laddCity.ToUpper)
                    'command.Parameters.AddWithValue("@OffCountry", laddCountry.ToUpper)
                    'command.Parameters.AddWithValue("@OffState", laddState.ToUpper)
                    'command.Parameters.AddWithValue("@OffPostal", laddPostal.ToUpper)

                    'command.Parameters.AddWithValue("@BillingName", Left(lBillingName.ToUpper, 100))
                    'command.Parameters.AddWithValue("@BillAddress", lbillAdress1.ToUpper)
                    'command.Parameters.AddWithValue("@BillStreet", lbillStreet.ToUpper)
                    'command.Parameters.AddWithValue("@BillBuilding", lbillBuilding.ToUpper)
                    'command.Parameters.AddWithValue("@BillCity", lbillCity.ToUpper)
                    'command.Parameters.AddWithValue("@BillCountry", lbillCountry.ToUpper)
                    'command.Parameters.AddWithValue("@BillState", lbillState.ToUpper)
                    'command.Parameters.AddWithValue("@BillPostal", lbillPostal)

                    'If String.IsNullOrEmpty(sServiceLocationGroup) = True Or sServiceLocationGroup = "&nbsp;" Then
                    '    command.Parameters.AddWithValue("@ServiceLocationGroup", "")
                    'Else
                    '    command.Parameters.AddWithValue("@ServiceLocationGroup", sServiceLocationGroup.ToUpper)
                    'End If


                    'command.Parameters.AddWithValue("@PONo", lPONo.ToUpper)
                    ''command.Parameters.AddWithValue("@OurRef", lOurRef.ToUpper)
                    'command.Parameters.AddWithValue("@OurRef", "")
                    'command.Parameters.AddWithValue("@YourRef", lYourRef.ToUpper)
                    'command.Parameters.AddWithValue("@Salesman", lSalesmansvc.ToUpper)
                    'command.Parameters.AddWithValue("@Supervisor", lSupervisor.ToUpper)


                    'Dim lOtherEmail As String
                    'lOtherEmail = ""

                    'If lSendServiceReportTo1Loc = "Y" Then
                    '    lOtherEmail = lBillEmail1SvcLoc.Trim
                    'End If

                    'If lSendServiceReportTo2Loc = "Y" Then
                    '    'If String.IsNullOrEmpty(lOtherEmail.Trim()) = False Then
                    '    '    lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
                    '    'Else
                    '    '    lOtherEmail = lBillEmail2SvcLoc.Trim()
                    '    'End If

                    '    If String.IsNullOrEmpty(lBillEmail2SvcLoc.Trim()) = False Then
                    '        If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
                    '            lOtherEmail = lBillEmail2SvcLoc.Trim()
                    '        Else
                    '            lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
                    '        End If
                    '    End If
                    'End If

                    'If String.IsNullOrEmpty(lEmailCCLoc.Trim()) = False Then
                    '    If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
                    '        lOtherEmail = lEmailCCLoc.Trim()
                    '    Else
                    '        lOtherEmail = lOtherEmail.Trim() & ";" & lEmailCCLoc.Trim()
                    '    End If
                    'End If

                    'command.Parameters.AddWithValue("@OtherEmail", Left(lOtherEmail.ToUpper.Trim(), 500))
                    'command.Parameters.AddWithValue("@LockST", "N")

                    'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    'command.Connection = connService
                    'command.ExecuteNonQuery()

                    'Start : 02.08.20

                    Dim commandInsertIntoTblServiceRecord As MySqlCommand = New MySqlCommand
                    commandInsertIntoTblServiceRecord.CommandType = CommandType.StoredProcedure
                    commandInsertIntoTblServiceRecord.CommandText = "SaveServiceScheduleToService"
                    'command.CommandText = qryService
                    commandInsertIntoTblServiceRecord.Parameters.Clear()
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AccountId", txtAccountId.Text.Trim.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddBlock", laddBlock.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddNos", laddNos.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddFloor", laddFloor.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddUnit", laddUnit.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Custaddress1", laddress1.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddBuilding", laddBuilding.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddStreet", laddStreet.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddCity", laddCity.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddState", laddState.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddCountry", laddCountry.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddPostal", laddPostal.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_location", lLocationLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BranchCode", "")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceBy", lServiceBy.ToUpper)

                    If sServiceDate.Trim = "" Then
                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceDate", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(sServiceDate.Trim)
                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceDate", strdate.ToString("yyyy-MM-dd"))
                    End If

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_scheduleType", lscheduleType)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Status", "O")
                    'command.Parameters.AddWithValue("@pr_RecordNo", (lServiceNo + lSuffix).Trim)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_RecordNo", lFullServiceNo)

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceTime", ltimeIn)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceTimeOut", ltimeOut)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AllocatedSvcTime", lallocateTime)

                    'If lContactType = "COMPANY" Then
                    '    command.Parameters.AddWithValue("@pr_ContactType", "CORPORATE")
                    'Else
                    '    command.Parameters.AddWithValue("@pr_ContactType", "RESIDENTIAL")
                    'End If
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactType", lContactType.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustCode", txtClient.Text.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustName", txtCustName.Text.ToUpper)

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact", lContact.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Notes", lNotes.ToUpper)

                    If sServiceDate.Trim = "" Then
                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceDate", DBNull.Value)
                    Else
                        strdate = DateTime.Parse(sServiceDate.Trim)
                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceDate", strdate.ToString("yyyy-MM-dd"))
                    End If

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillAmount", sValue)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractDetSQLID", sContractDetSQLID)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractDetFHzSQLID", sContractDetFHzSQLID)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CompanyGroup", Session("companygrp"))
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_TargetId", "")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_VehNo", lvehNo.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Scheduler", lScheduler.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Seq", Right(lSeq, 3))
                    'command.Parameters.AddWithValue("@pr_Email", lEmail)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Comments", lheaderComments.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_TeamID", lteamID.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_InChargeID", lInChargeID.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebFlowFrom", "ZS")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebFlowTo", "ZS")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebEditSource", "ZS")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebLastEditDevice", "")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_FlowFrom", "ZS")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_FlowTo", "ZS")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_EditSource", "ZS")

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LastEditDevice", "")

                    'command.Parameters.AddWithValue("@pr_LastEditDevice", Left(System.Net.Dns.GetHostEntry(Request.UserHostAddress).HostName, 25))
                    'command.Parameters.AddWithValue("@pr_LocateGRP", lLocateGrp)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustTelephone", lCustTelephone)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustFax", lCustFax)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ChkOnSite", 1)

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillYN", "N")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ManualYN", "N")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SignatureYN", "Y")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_chkUrgent", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Filling", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Fax", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_FaxnReturn", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BilledAmt", 0.0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CollectPayment", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CollectAmt", 0.0)

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_EmailSent", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_EmailSendFail", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_TabletDownloaded", 0)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SubmitCount", 0)

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LocationId", sLocationId.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceName", lServiceNameLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Description", lDescriptionLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Address1", lAddress1Loc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddStreet", lAddStreetLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddBuilding", lAddBuildingLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddCity", lAddCityLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddState", lAddStateLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddCountry", lAddCountryLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddPostal", lAddPostalLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LocateGRP", lLocateGRPLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactPersonID", lContactPersonLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Tel", lTelephoneLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactPersonMobile", lMobileLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Email", lEmailLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Fax", lFaxLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Position", lContact1PositionLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Tel2", lTelephone2Loc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactPerson2", lContactPerson2Loc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Position", lContact2PositionLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Tel", lContact2TelLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Fax", lContact2FaxLoc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Tel2", lContact2Tel2Loc)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Mobile", lContact2MobileLoc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Email", Left(lContact2EmailLoc.ToUpper, 100))

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffAddress", laddress1.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffStreet", laddStreet.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffBuilding", laddBuilding.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffCity", laddCity.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffCountry", laddCountry.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffState", laddState.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffPostal", laddPostal.ToUpper)

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillingName", Left(lBillingName.ToUpper, 100))
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillAddress", lbillAdress1.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillStreet", lbillStreet.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillBuilding", lbillBuilding.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillCity", lbillCity.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillCountry", lbillCountry.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillState", lbillState.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillPostal", lbillPostal)

                    If String.IsNullOrEmpty(sServiceLocationGroup) = True Or sServiceLocationGroup = "&nbsp;" Then
                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceLocationGroup", "")
                    Else
                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceLocationGroup", sServiceLocationGroup.ToUpper)
                    End If

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_PONo", lPONo.ToUpper)
                    'commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OurRef", lOurRef.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OurRef", "")
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_YourRef", lYourRef.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Salesman", lSalesmansvc.ToUpper)
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Supervisor", lSupervisor.ToUpper)

                    Dim lOtherEmail As String
                    lOtherEmail = ""

                    If lSendServiceReportTo1Loc = "Y" Then
                        lOtherEmail = lBillEmail1SvcLoc.Trim
                    End If

                    If lSendServiceReportTo2Loc = "Y" Then
                        'If String.IsNullOrEmpty(lOtherEmail.Trim()) = False Then
                        '    lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
                        'Else
                        '    lOtherEmail = lBillEmail2SvcLoc.Trim()
                        'End If

                        If String.IsNullOrEmpty(lBillEmail2SvcLoc.Trim()) = False Then
                            If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
                                lOtherEmail = lBillEmail2SvcLoc.Trim()
                            Else
                                lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
                            End If
                        End If
                    End If

                    If String.IsNullOrEmpty(lEmailCCLoc.Trim()) = False Then
                        If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
                            lOtherEmail = lEmailCCLoc.Trim()
                        Else
                            lOtherEmail = lOtherEmail.Trim() & ";" & lEmailCCLoc.Trim()
                        End If
                    End If

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OtherEmail", Left(lOtherEmail.ToUpper.Trim(), 500))
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LockST", "N")

                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CreatedBy", Session("UserID"))
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                    commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    commandInsertIntoTblServiceRecord.Connection = connService
                    commandInsertIntoTblServiceRecord.ExecuteNonQuery()

                    'End : 02.08.20

ServicedetailInsert:

                    'Start:Service Detail

                    lTarget = starget

                    Dim command1 As MySqlCommand = New MySqlCommand
                    command1.CommandType = CommandType.Text
                    command1.CommandText = "SELECT Frequency FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
                    command1.Connection = conn

                    Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
                    Dim dtservicecontractDet As New DataTable
                    dtservicecontractDet.Load(drservicecontractDet)

                    If dtservicecontractDet.Rows.Count > 0 Then
                        For x As Integer = 0 To dtservicecontractDet.Rows.Count - 1

                            lservicenotes = dtservicecontractDet.Rows(x)("Frequency").ToString()

                            Dim commandTarget As MySqlCommand = New MySqlCommand
                            commandTarget.CommandType = CommandType.Text

                            commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & sContractDetSQLID
                            'commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(x)("OrigCode").ToString
                            commandTarget.Connection = conn

                            laction = ""
                            lreason = ""
                            gtargetID_SR = ""
                            lwarranty = ""
                            lwarranty = lwarranty & sFrequency & " - "

                            Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                            Dim dtTarget As New DataTable
                            dtTarget.Load(drTarget)

                            If dtTarget.Rows.Count Then
                                lservicenotes = lservicenotes & " - "

                                For t = 0 To dtTarget.Rows.Count - 1
                                    If lreason <> "" Then lreason = lreason & vbCrLf
                                    lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()

                                    If lwarranty <> "" Then lwarranty = lwarranty

                                    If t = 0 Then
                                        starget = starget & dtTarget.Rows(t)("TargetID").ToString()
                                        lwarranty = lwarranty & dtTarget.Rows(t)("TargetDesc").ToString()
                                        lservicenotes = lservicenotes & dtTarget.Rows(t)("TargetDesc").ToString()
                                    Else
                                        starget = starget & ", " & dtTarget.Rows(t)("TargetID").ToString()
                                        lwarranty = lwarranty & ", " & dtTarget.Rows(t)("TargetDesc").ToString()
                                        lservicenotes = lservicenotes & ", " & dtTarget.Rows(t)("TargetDesc").ToString()
                                    End If

                                Next
                            End If

                        Next x

                        ''''''''''''''''''''''''''''''''''''''
                        '    ''''''''''''''''''''''''''''''''''
                    End If

                    'Reason



                    'Dim qryServiceDetail As String = "INSERT INTO tblserviceRecordDet(location, BranchID, ContractNo, Warranty,   "
                    'qryServiceDetail = qryServiceDetail + " Status,RecordNo, Duration,AllocatedSvcTime,ProductServices, Reason, Action,"
                    'qryServiceDetail = qryServiceDetail + " ContractDetSQLID, ContractDetFHzSQLID, TargetId, ServiceId, Frequency,"
                    'qryServiceDetail = qryServiceDetail + " WebFlowFrom, WebFlowTo, WebEditSource, WebLastEditDevice, FlowFrom, FlowTo, EditSource, LastEditDevice,"
                    'qryServiceDetail = qryServiceDetail + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                    'qryServiceDetail = qryServiceDetail + " VALUES(@location, @BranchID, @ContractNo, @Warranty, "
                    'qryServiceDetail = qryServiceDetail + " @Status, @RecordNo, @Duration, @AllocatedSvcTime, @ProductServices, @Reason, @Action,"
                    'qryServiceDetail = qryServiceDetail + " @ContractDetSQLID, @ContractDetFHzSQLID,  @TargetId, @ServiceId, @Frequency,"
                    'qryServiceDetail = qryServiceDetail + " @WebFlowFrom, @WebFlowTo, @WebEditSource, @WebLastEditDevice, @FlowFrom, @FlowTo, @EditSource, @LastEditDevice,"
                    'qryServiceDetail = qryServiceDetail + " @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                    'command.CommandText = qryServiceDetail
                    'command.Parameters.Clear()
                    'command.Parameters.AddWithValue("@location", "")
                    'command.Parameters.AddWithValue("@BranchID", "")
                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
                    'command.Parameters.AddWithValue("@Warranty", lwarranty.ToUpper)
                    'command.Parameters.AddWithValue("@Status", "O")
                    ''command.Parameters.AddWithValue("@RecordNo", (lServiceNo + lSuffix).Trim)
                    'command.Parameters.AddWithValue("@RecordNo", lFullServiceNo.ToUpper)
                    'command.Parameters.AddWithValue("@Duration", "0")
                    'command.Parameters.AddWithValue("@AllocatedSvcTime", lallocateTime)
                    'command.Parameters.AddWithValue("@ProductServices", sServices.ToUpper)
                    'command.Parameters.AddWithValue("@Reason", lreason.ToUpper)
                    'command.Parameters.AddWithValue("@Action", laction.ToUpper)

                    'command.Parameters.AddWithValue("@ContractDetSQLID", 0)
                    'command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)
                    'command.Parameters.AddWithValue("@TargetId", lTarget)
                    'command.Parameters.AddWithValue("@ServiceId", sServiceId.ToUpper)
                    'command.Parameters.AddWithValue("@Frequency", sFrequency.ToUpper)
                    'command.Parameters.AddWithValue("@WebFlowFrom", "ZS")
                    'command.Parameters.AddWithValue("@WebFlowTo", "ZS")
                    'command.Parameters.AddWithValue("@WebEditSource", "ZS")
                    'command.Parameters.AddWithValue("@WebLastEditDevice", "")
                    'command.Parameters.AddWithValue("@FlowFrom", "ZS")
                    'command.Parameters.AddWithValue("@FlowTo", "ZS")
                    'command.Parameters.AddWithValue("@EditSource", "ZS")

                    'command.Parameters.AddWithValue("@LastEditDevice", "")

                    'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    'command.Connection = connService
                    'command.ExecuteNonQuery()
                    ''End:service Detail


                    Dim commandInsertIntoTblServiceRecordDet As MySqlCommand = New MySqlCommand
                    commandInsertIntoTblServiceRecordDet.CommandType = CommandType.StoredProcedure
                    commandInsertIntoTblServiceRecordDet.CommandText = "SaveServiceScheduleToServiceDetail"

                    'command.CommandText = qryServiceDetail
                    commandInsertIntoTblServiceRecordDet.Parameters.Clear()
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_location", "")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_BranchID", "")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Warranty", lwarranty.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Status", "O")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_RecordNo", lFullServiceNo.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Duration", "0")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_AllocatedSvcTime", lallocateTime)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ProductServices", sServices.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Reason", lreason.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Action", laction.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ContractDetSQLID", 0)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ContractDetFHzSQLID", 0)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_TargetId", lTarget)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ServiceId", sServiceId.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Frequency", sFrequency.ToUpper)
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebFlowFrom", "ZS")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebFlowTo", "ZS")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebEditSource", "ZS")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebLastEditDevice", "")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_FlowFrom", "ZS")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_FlowTo", "ZS")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_EditSource", "ZS")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_LastEditDevice", "")
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_CreatedBy", Session("UserID"))
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                    commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                    commandInsertIntoTblServiceRecordDet.Connection = connService
                    commandInsertIntoTblServiceRecordDet.ExecuteNonQuery()
                    ''''''''''''''''

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblserviceRecordDet"

                    Dim commandlast_insert_id As MySqlCommand = New MySqlCommand
                    commandlast_insert_id.CommandType = CommandType.Text

                    commandlast_insert_id.CommandText = sqlLastId
                    commandlast_insert_id.Parameters.Clear()

                    commandlast_insert_id.Connection = connService
                    txtSourceSQLID.Text = commandlast_insert_id.ExecuteScalar()

                    txtRcnoDetailLog.Text = txtSourceSQLID.Text

                    'Start:Service Team

                    If String.IsNullOrEmpty(lteamID) = False Then
                        Dim commandIsStaffExists As MySqlCommand = New MySqlCommand
                        commandIsStaffExists.CommandType = CommandType.Text
                        commandIsStaffExists.CommandText = "Select StaffID  from tblServiceRecordStaff where RecordNo = '" & lFullServiceNo & "' and StaffID = '" & lServiceBy.Trim & "'"
                        commandIsStaffExists.Connection = conn

                        Dim drIsStaffExists As MySqlDataReader = commandIsStaffExists.ExecuteReader()
                        Dim dtIsStaffExists As New DataTable
                        dtIsStaffExists.Load(drIsStaffExists)

                        If dtIsStaffExists.Rows.Count = 0 Then
                            'Dim qryServiceTeam As String = "INSERT INTO tblServiceRecordStaff(StaffID,StaffName,CostValue,RecordNo,   "
                            'qryServiceTeam = qryServiceTeam + " FlowFrom,FlowTo,EditSource,CreateSource,"
                            'qryServiceTeam = qryServiceTeam + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
                            'qryServiceTeam = qryServiceTeam + " Values (@StaffID, @StaffName, @CostValue, @RecordNo, @FlowFrom, @FlowTo, @EditSource, @CreateSource,"
                            'qryServiceTeam = qryServiceTeam + " @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

                            'command.CommandText = qryServiceTeam
                            'command.Parameters.Clear()

                            'command.Parameters.AddWithValue("@StaffID", lServiceBy.ToUpper)
                            'command.Parameters.AddWithValue("@StaffName", lServiceBy.ToUpper)
                            'command.Parameters.AddWithValue("@CostValue", 0.0)
                            'command.Parameters.AddWithValue("@RecordNo", (lFullServiceNo))
                            'command.Parameters.AddWithValue("@FlowFrom", "ZS")
                            ''command.Parameters.AddWithValue("@RecordNo", (lFullServiceNo))
                            'command.Parameters.AddWithValue("@FlowTo", "ZS")
                            'command.Parameters.AddWithValue("@EditSource", "ZS")
                            'command.Parameters.AddWithValue("@CreateSource", "ZS")
                            'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                            'command.Connection = connService
                            'command.ExecuteNonQuery()


                            Dim commandInsertIntoTblServiceRecordStaff As MySqlCommand = New MySqlCommand
                            commandInsertIntoTblServiceRecordStaff.CommandType = CommandType.StoredProcedure
                            commandInsertIntoTblServiceRecordStaff.CommandText = "SaveServiceScheduleToServiceStaff"

                            'commandInsertIntoTblServiceRecordStaff.CommandText = qryServiceTeam
                            commandInsertIntoTblServiceRecordStaff.Parameters.Clear()

                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_StaffID", lServiceBy.ToUpper)
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_StaffName", lServiceBy.ToUpper)
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CostValue", 0.0)
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_RecordNo", (lFullServiceNo))
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_FlowFrom", "ZS")
                            'command.Parameters.AddWithValue("@pr_RecordNo", (lFullServiceNo))
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_FlowTo", "ZS")
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_EditSource", "ZS")
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CreateSource", "ZS")
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CreatedBy", Session("UserID"))
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
                            commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

                            commandInsertIntoTblServiceRecordStaff.Connection = connService
                            commandInsertIntoTblServiceRecordStaff.ExecuteNonQuery()
                        End If
                    End If
                    'End:service Team
                    'dr.Close()

                    'End If
                    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVSCHE", lFullServiceNo, "NEW", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", lFullServiceNo & "," & strdate & "," & sValue & "," & lServiceBy.ToUpper & "," & lheaderComments.ToUpper, lFullServiceNo)

                    rownum = rownum + 1
                Next row
            End If


            'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "5", "")
            ''''update strNotes

            Dim strNotes As String
            strNotes = ""
            Dim strRecordNo As String
            strRecordNo = ""

            Dim commandServiceRecordet As MySqlCommand = New MySqlCommand
            commandServiceRecordet.CommandType = CommandType.Text

            commandServiceRecordet.CommandText = "select RecordNo, Warranty from  tblServiceRecordDet where ContractNo='" & txtContractNo.Text & "' order by RecordNo"
            commandServiceRecordet.Connection = conn

            Dim commandUpdNotes As MySqlCommand = New MySqlCommand

            Dim drServiceRecordet As MySqlDataReader = commandServiceRecordet.ExecuteReader()
            Dim dtServiceRecordet As New DataTable
            dtServiceRecordet.Load(drServiceRecordet)

            If dtServiceRecordet.Rows.Count > 0 Then
                strRecordNo = dtServiceRecordet.Rows(0)("RecordNo").ToString()

                For n = 0 To dtServiceRecordet.Rows.Count - 1

                    If strRecordNo = dtServiceRecordet.Rows(n)("RecordNo").ToString() Then
                        If String.IsNullOrEmpty(strNotes) = False Then

                            strNotes = strNotes.Trim & vbCrLf & dtServiceRecordet.Rows(n)("Warranty").ToString().Trim
                        Else
                            strNotes = dtServiceRecordet.Rows(n)("Warranty").ToString().Trim
                        End If
                    Else
                        'Dim commandUpdNotes As MySqlCommand = New MySqlCommand
                        commandUpdNotes.CommandType = CommandType.Text
                        commandUpdNotes.CommandText = "Update tblservicerecord set Notes = '" & strNotes.Trim & "'  where RecordNo = '" & strRecordNo & "' and status ='O'"
                        commandUpdNotes.Connection = conn
                        commandUpdNotes.ExecuteNonQuery()

                        strNotes = ""
                        strNotes = dtServiceRecordet.Rows(n)("Warranty").ToString().Trim
                        strRecordNo = dtServiceRecordet.Rows(n)("RecordNo").ToString()

                        'commandUpdNotes.Dispose()
                    End If

                Next  'For n = 0 To dtServiceRecordet.Rows.Count - 1

                'Dim commandUpdNotes As MySqlCommand = New MySqlCommand
                commandUpdNotes.CommandType = CommandType.Text
                commandUpdNotes.CommandText = "Update tblservicerecord set Notes = '" & strNotes.Trim.ToUpper & "'  where RecordNo = '" & strRecordNo & "' and status ='O'"
                commandUpdNotes.Connection = conn
                commandUpdNotes.ExecuteNonQuery()

                commandUpdNotes.Dispose()
                commandServiceRecordet.Dispose()
                dtServiceRecordet.Dispose()
                drServiceRecordet.Close()

            End If


            ''''' update strnotes

            'Start: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 

            Dim lServiceNo1 As Integer

            lServiceNo1 = 0

            Dim commandMaxServiceDate1 As MySqlCommand = New MySqlCommand
            commandMaxServiceDate1.CommandType = CommandType.Text
            'commandMaxServiceDate.CommandText = "SELECT count(distinct(ServiceDate)) as totservices FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text & "'"
            commandMaxServiceDate1.CommandText = "SELECT count(distinct(ServiceDate)) as 'totservices' FROM tbwserviceschedule where ContractNo='" & txtContractNo.Text.Trim & "'"
            commandMaxServiceDate1.Connection = conn

            Dim drMaxServiceDate1 As MySqlDataReader = commandMaxServiceDate1.ExecuteReader()
            Dim dtMaxServiceDate1 As New DataTable
            dtMaxServiceDate1.Load(drMaxServiceDate1)

            If dtMaxServiceDate1.Rows.Count > 0 Then
                lServiceNo1 = Convert.ToInt32(dtMaxServiceDate1.Rows(0)("totservices").ToString)
            End If

            'conn.Close()

            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            commandUpdGS.CommandType = CommandType.Text

            If txtFixedContinuous.Text = "FIXED" Then
                commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
            Else
                If txtTotServiceRec.Text = 0 Then
                    commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
                Else
                    commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & ", ServiceStart= '" & Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") & "', EndOfLastSchedule = '" & Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") & "'  where ContractNo = '" & txtContractNo.Text & "'"
                End If
            End If

            commandUpdGS.Connection = conn
            commandUpdGS.ExecuteNonQuery()

            conn.Close()
            connService.Close()

            'End: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 
            lblMessage.Text = "SERVICE RECORDS GENERATED SUCCESSFULLY"
            btnServiceSchedule.Enabled = True
            btnGenerateServiceSchedule.Enabled = False

            conn.Close()
            conn.Dispose()

            connService.Close()
            connService.Dispose()

            command.Dispose()
            commandAddress.Dispose()
            commandContract.Dispose()
            'commandGST.Dispose()
            commandUpdGS.Dispose()
            commandUpdNotes.Dispose()
            commandMaxServiceDate1.Dispose()

            'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "6", "")

            'btnPrint.Enabled = True

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "2", txtContractNo.Text)


            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "3", txtContractNo.Text)
        Catch


            'lblAlert.Text = ex.Message.ToString
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnGenerateServiceSchedule_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Function GenerateScheduleNew() As Boolean

        Try
            GenerateScheduleNew = True
            '  System.Threading.Thread.Sleep(5000)
            Label1.Visible = True

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            '' Start: Make Service Records VOID for Regeneration
            If txtnormalorregenerateschedule.Text = "regenerateschedule" Then
                Dim commandUpdRegenerate As MySqlCommand = New MySqlCommand
                commandUpdRegenerate.CommandType = CommandType.Text
                commandUpdRegenerate.CommandText = "Update tblservicerecord set Status ='V' where ContractNo = '" & txtContractNo.Text & "'"
                commandUpdRegenerate.Connection = conn
                commandUpdRegenerate.ExecuteScalar()

                commandUpdRegenerate.Dispose()
            End If

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "1-New", txtContractNo.Text)
            '' End: Make Service Records VOID for Regeneration

            '' ''''''''''''''''''''''''''''''''''''

            'Dim command As MySqlCommand = New MySqlCommand

            'command.CommandType = CommandType.Text
            'Dim qry As String = "INSERT INTO tbwserviceschedulegenerate(Generated,ContractNo,AccountID,ContactType,CustName,CompanyGroup,CreatedBy,CreatedOn,ScheduleGeneratedOn,DurationType,TotalServiceRecord,ServiceStart,ServiceEnd)"
            'qry = qry + "VALUES(@Generated,@ContractNo,@AccountID,@ContactType,@CustName,@CompanyGroup,@CreatedBy,@CreatedOn,@ScheduleGeneratedOn,@DurationType,@TotalServiceRecord,@ServiceStart,@ServiceEnd);"

            'command.CommandText = qry
            'command.Parameters.Clear()


            'command.Parameters.AddWithValue("@Generated", 0)
            'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
            'command.Parameters.AddWithValue("@AccountID", txtAccountId.Text.Trim.ToUpper)
            'command.Parameters.AddWithValue("@ContactType", txtContactType.Text.ToUpper)
            'command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)
            'command.Parameters.AddWithValue("@CompanyGroup", Session("companygrp"))
            'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            'command.Parameters.AddWithValue("@ScheduleGeneratedOn", DBNull.Value)
            'command.Parameters.AddWithValue("@DurationType", txtFixedContinuous.Text)
            'command.Parameters.AddWithValue("@TotalServiceRecord", txtTotServiceRec.Text)
            'command.Parameters.AddWithValue("@ServiceStart", txtFrom.Text)
            'command.Parameters.AddWithValue("@ServiceEnd", txtTo.Text)
            'command.Connection = conn

            'command.ExecuteNonQuery()

            'command.Dispose()

            'conn.Close()



            '        'Start : 02.08.20

            Dim commandInsertIntoTblServiceRecord As MySqlCommand = New MySqlCommand
            commandInsertIntoTblServiceRecord.CommandType = CommandType.StoredProcedure
            commandInsertIntoTblServiceRecord.CommandText = "SaveServiceScheduleToServiceNew"

            commandInsertIntoTblServiceRecord.Parameters.Clear()
            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AccountId", txtAccountId.Text.Trim.ToUpper)
            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactType", txtContactType.Text.ToUpper)
            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.ToUpper)
            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustName", txtCustName.Text.ToUpper)
            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CompanyGroup", Session("companygrp"))
            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_UserID", Session("UserID"))
            commandInsertIntoTblServiceRecord.Connection = conn
            commandInsertIntoTblServiceRecord.ExecuteNonQuery()

            '        'End : 02.08.20

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "2-New", txtContractNo.Text)

            'Start: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 
            'Dim command4 As New MySqlCommand
            'command4.CommandType = CommandType.Text
            'command4.Connection = conn
            'command4.CommandText = "Select * from tbwserviceschedulegenerate where ContractNo='" & txtContractNo.Text.Trim & "' and Generated=1 order by rcno desc"

            'Dim dr4 As MySqlDataReader = command4.ExecuteReader
            'Dim dt4 As New DataTable
            'dt4.Load(dr4)

            'If dt4.Rows.Count > 0 Then

            Dim lServiceNo1 As Integer

            lServiceNo1 = 0

            Dim commandMaxServiceDate1 As MySqlCommand = New MySqlCommand
            commandMaxServiceDate1.CommandType = CommandType.Text
            'commandMaxServiceDate.CommandText = "SELECT count(distinct(ServiceDate)) as totservices FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text & "'"
            commandMaxServiceDate1.CommandText = "SELECT count(distinct(ServiceDate)) as 'totservices' FROM tbwserviceschedule where ContractNo='" & txtContractNo.Text.Trim & "'"
            commandMaxServiceDate1.Connection = conn

            Dim drMaxServiceDate1 As MySqlDataReader = commandMaxServiceDate1.ExecuteReader()
            Dim dtMaxServiceDate1 As New DataTable
            dtMaxServiceDate1.Load(drMaxServiceDate1)

            If dtMaxServiceDate1.Rows.Count > 0 Then
                lServiceNo1 = Convert.ToInt32(dtMaxServiceDate1.Rows(0)("totservices").ToString)
            End If

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "3-New", txtContractNo.Text)


            Dim commandUpdGS As MySqlCommand = New MySqlCommand
            commandUpdGS.CommandType = CommandType.Text

            If txtFixedContinuous.Text = "FIXED" Then
                commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
            Else
                If txtTotServiceRec.Text = 0 Then
                    commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
                Else
                    commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & ", ServiceStart= '" & Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") & "', EndOfLastSchedule = '" & Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") & "'  where ContractNo = '" & txtContractNo.Text & "'"
                End If
            End If

            commandUpdGS.Connection = conn
            commandUpdGS.ExecuteNonQuery()

            conn.Close()
            'connService.Close()

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "4-New", txtContractNo.Text)

            'btnBack_Click(sender, e)

            'End : Update(ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted, AmtBalance)
            lblMessage.Text = "SERVICE RECORDS GENERATED SUCCESSFULLY"
            btnServiceSchedule.Enabled = True
            btnGenerateServiceSchedule.Enabled = False

            conn.Close()

            commandUpdGS.Dispose()
            commandMaxServiceDate1.Dispose()
            dtMaxServiceDate1.Dispose()
            drMaxServiceDate1.Close()

            'End If
            ''Start:Service Detail

            ''InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "2", txtContractNo.Text)

            ''InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "3", txtContractNo.Text)
        Catch ex As Exception
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "Error-New", txtContractNo.Text)

            lblAlert.Text = ex.Message.ToString
            GenerateScheduleNew = False
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnGenerateServiceSchedule_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Function
        End Try

    End Function

    Private Sub GenerateScheduleNewWS()

        Try
            '  System.Threading.Thread.Sleep(5000)
            Label1.Visible = True

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            '' Start: Make Service Records VOID for Regeneration
            If txtnormalorregenerateschedule.Text = "regenerateschedule" Then
                Dim commandUpdRegenerate As MySqlCommand = New MySqlCommand
                commandUpdRegenerate.CommandType = CommandType.Text
                commandUpdRegenerate.CommandText = "Update tblservicerecord set Status ='V' where ContractNo = '" & txtContractNo.Text & "'"
                commandUpdRegenerate.Connection = conn
                commandUpdRegenerate.ExecuteScalar()

                commandUpdRegenerate.Dispose()
            End If

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "1-NewWS", txtContractNo.Text)
            '' End: Make Service Records VOID for Regeneration

            '' ''''''''''''''''''''''''''''''''''''

            Dim command As MySqlCommand = New MySqlCommand

            command.CommandType = CommandType.Text
            Dim qry As String = "INSERT INTO tbwserviceschedulegenerate(Generated,ContractNo,AccountID,ContactType,CustName,CompanyGroup,CreatedBy,CreatedOn,ScheduleGeneratedOn,DurationType,TotalServiceRecord,ServiceStart,ServiceEnd, Duration, DurationMs, ServiceAddress, agreementtype)"
            qry = qry + "VALUES(@Generated,@ContractNo,@AccountID,@ContactType,@CustName,@CompanyGroup,@CreatedBy,@CreatedOn,@ScheduleGeneratedOn,@DurationType,@TotalServiceRecord,@ServiceStart,@ServiceEnd, @Duration, @DurationMs, @ServiceAddress, @agreementtype);"

            command.CommandText = qry
            command.Parameters.Clear()

            command.Parameters.AddWithValue("@Generated", 0)
            command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
            command.Parameters.AddWithValue("@AccountID", txtAccountId.Text.Trim.ToUpper)
            command.Parameters.AddWithValue("@ContactType", txtContactType.Text.ToUpper)
            command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)
            command.Parameters.AddWithValue("@CompanyGroup", Session("companygrp"))
            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd hh:mm:ss", New System.Globalization.CultureInfo("en-GB")))
            command.Parameters.AddWithValue("@ScheduleGeneratedOn", DBNull.Value)
            command.Parameters.AddWithValue("@DurationType", txtFixedContinuous.Text)
            command.Parameters.AddWithValue("@TotalServiceRecord", txtTotServiceRec.Text)

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "No1", txtContractNo.Text)

            command.Parameters.AddWithValue("@ServiceStart", Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd"))
            command.Parameters.AddWithValue("@ServiceEnd", Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd"))
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "No2", txtContractNo.Text)

            'command.Parameters.AddWithValue("@ServiceStart", txtFrom.Text)
            'command.Parameters.AddWithValue("@ServiceEnd", txtTo.Text)

            command.Parameters.AddWithValue("@Duration", txtDuration.Text)
            command.Parameters.AddWithValue("@DurationMs", txtdurationms.Text)
            command.Parameters.AddWithValue("@ServiceAddress", txtServiceAddress.Text)
            command.Parameters.AddWithValue("@agreementtype", txtAgreementType.Text)
            command.Connection = conn

            command.ExecuteNonQuery()

            command.Dispose()

            conn.Close()

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "4-NewWS", txtContractNo.Text)

            'mdlPopupMsg.Show()

            'Dim svc As ServiceController = New ServiceController("AutoScheduleService")

            'Try
            '    If svc IsNot Nothing Then
            '        ' svc.Refresh()

            '        svc.WaitForStatus(ServiceControllerStatus.Stopped)
            '        If svc.Status = ServiceControllerStatus.Stopped Then
            '            svc.Start()
            '            '   svc.WaitForStatus(ServiceControllerStatus.Stopped, TimeSpan.FromMinutes(5))
            '            svc.WaitForStatus(ServiceControllerStatus.Stopped)
            '            '  svc.Refresh()

            '            ' svc.WaitForStatus(ServiceControllerStatus.Stopped, TimeSpan.FromSeconds(300))
            '            'While svc.Status = ServiceControllerStatus.Stopped
            '            '    Thread.Sleep(1000)
            '            '    svc.Refresh()
            '            'End While
            '        Else

            '            lblAlert.Text = "System Busy.. Please try again..."
            '            Return

            '        End If
            '    End If
            'Catch ex As Exception
            '    InsertIntoTblServiceEventLog("AutoScheduleService", ex.Message.ToString, DateTime.Now.ToString, txtContractNo.Text)

            'End Try




            ''        'Start : 02.08.20

            ''Dim commandInsertIntoTblServiceRecord As MySqlCommand = New MySqlCommand
            ''commandInsertIntoTblServiceRecord.CommandType = CommandType.StoredProcedure
            ''commandInsertIntoTblServiceRecord.CommandText = "SaveServiceScheduleToServiceNew"

            ''commandInsertIntoTblServiceRecord.Parameters.Clear()
            ''commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AccountId", txtAccountId.Text.Trim.ToUpper)
            ''commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactType", txtContactType.Text.ToUpper)
            ''commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.ToUpper)
            ''commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustName", txtCustName.Text.ToUpper)
            ''commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CompanyGroup", Session("companygrp"))
            ''commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_UserID", Session("UserID"))
            ''commandInsertIntoTblServiceRecord.Connection = conn
            ''commandInsertIntoTblServiceRecord.ExecuteNonQuery()

            ''        'End : 02.08.20

            '  InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "2-New", txtContractNo.Text)

            ''Start: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 
            'Dim command4 As New MySqlCommand
            'command4.CommandType = CommandType.Text
            'command4.Connection = conn
            'command4.CommandText = "Select * from tbwserviceschedulegenerate where ContractNo='" & txtContractNo.Text.Trim & "' and Generated=1 order by rcno desc"

            'Dim dr4 As MySqlDataReader = command4.ExecuteReader
            'Dim dt4 As New DataTable
            'dt4.Load(dr4)

            'If dt4.Rows.Count > 0 Then

            '    Dim lServiceNo1 As Integer

            '    lServiceNo1 = 0

            '    Dim commandMaxServiceDate1 As MySqlCommand = New MySqlCommand
            '    commandMaxServiceDate1.CommandType = CommandType.Text
            '    'commandMaxServiceDate.CommandText = "SELECT count(distinct(ServiceDate)) as totservices FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text & "'"
            '    commandMaxServiceDate1.CommandText = "SELECT count(distinct(ServiceDate)) as 'totservices' FROM tbwserviceschedule where ContractNo='" & txtContractNo.Text.Trim & "'"
            '    commandMaxServiceDate1.Connection = conn

            '    Dim drMaxServiceDate1 As MySqlDataReader = commandMaxServiceDate1.ExecuteReader()
            '    Dim dtMaxServiceDate1 As New DataTable
            '    dtMaxServiceDate1.Load(drMaxServiceDate1)

            '    If dtMaxServiceDate1.Rows.Count > 0 Then
            '        lServiceNo1 = Convert.ToInt32(dtMaxServiceDate1.Rows(0)("totservices").ToString)
            '    End If

            '    InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "3-New", txtContractNo.Text)


            '    Dim commandUpdGS As MySqlCommand = New MySqlCommand
            '    commandUpdGS.CommandType = CommandType.Text

            '    If txtFixedContinuous.Text = "FIXED" Then
            '        commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
            '    Else
            '        If txtTotServiceRec.Text = 0 Then
            '            commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
            '        Else
            '            commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & ", ServiceStart= '" & Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") & "', EndOfLastSchedule = '" & Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") & "'  where ContractNo = '" & txtContractNo.Text & "'"
            '        End If
            '    End If

            '    commandUpdGS.Connection = conn
            '    commandUpdGS.ExecuteNonQuery()

            '   conn.Close()
            'connService.Close()

            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "4-New", txtContractNo.Text)

            'btnBack_Click(sender, e)

            'End: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 
            'lblMessage.Text = "SERVICE RECORDS GENERATED SUCCESSFULLY"
            'btnServiceSchedule.Enabled = True
            'btnGenerateServiceSchedule.Enabled = False


            ' conn.Close()

            'commandUpdGS.Dispose()
            'commandMaxServiceDate1.Dispose()
            'dtMaxServiceDate1.Dispose()
            'drMaxServiceDate1.Close()

            'End If
            'Start:Service Detail

            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "2", txtContractNo.Text)


            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "3", txtContractNo.Text)
        Catch
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "Error-New", txtContractNo.Text)


            'lblAlert.Text = Error-New
            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnGenerateServiceSchedule_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try

    End Sub

    Protected Sub btnGenerateServiceSchedule_Click(sender As Object, e As EventArgs) Handles btnGenerateServiceSchedule.Click
        Try
            lblAlert.Text = ""
            lblMessage.Text = ""

            If IsServicePeriodlocked() = True Then
                lblAlert.Text = "SERVICE PERIOD IS LOCKED.. SCHEDULE CANNOT BE GENERATED"
                'updPanelContract1.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'txtContractDate.Focus()
                Exit Sub
            End If


            '14.06.23

            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim commandGST As MySqlCommand = New MySqlCommand
            commandGST.CommandType = CommandType.Text
            commandGST.CommandText = "SELECT count(RecordNo) as TotRec FROM tblServiceRecord where ContractNo='" & txtContractNo.Text & "' and SchServiceDate >= '" & Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") & "' and ((Status ='O') or (Status ='P') or (Status ='H'))"
            commandGST.Connection = conn1

            Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
            Dim dtGST As New DataTable
            dtGST.Load(drGST)



            If dtGST.Rows(0)("TotRec").ToString > 0 Then
                mdlPopupDateExists.Show()
                Exit Sub
            End If



            '14.06.23


            'for previous version

            If txtWindowsSVCAutoServiceSchedule.Text = False Then
                If GenerateScheduleNew() = False Then
                    Exit Sub
                End If
                btnBack_Click(sender, e)
                Session.Remove("servstart")
            Else

                'for new version (WS)

                mdlPopupSchedule.Show()
            End If

        Catch ex As Exception
            Thread.ResetAbort()
            System.Threading.Thread.ResetAbort()
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnGenerateServiceSchedule_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub


        End Try


        'If txtFixedContinuous.Text = "FIXED" Then
        '    Dim conn1 As MySqlConnection = New MySqlConnection(constr)
        '    conn1.Open()

        '    Dim commandGST As MySqlCommand = New MySqlCommand
        '    commandGST.CommandType = CommandType.Text
        '    commandGST.CommandText = "SELECT GST FROM tblContract where ContractNo='" & txtContractNo.Text & "'"
        '    commandGST.Connection = conn1

        '    Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
        '    Dim dtGST As New DataTable
        '    dtGST.Load(drGST)


        '    If dtGST.Rows.Count > 0 Then
        '        If dtGST.Rows(0)("GST").ToString = "P" Then

        '            If txtnormalorregenerateschedule.Text = "normalschedule" Then

        '                lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
        '                conn1.Close()
        '                conn1.Dispose()
        '                dtGST.Dispose()
        '                drGST.Close()
        '                commandGST.Dispose()
        '                Exit Sub
        '            Else
        '                conn1.Close()
        '                conn1.Dispose()
        '                dtGST.Dispose()
        '                drGST.Close()
        '                commandGST.Dispose()
        '            End If

        '        End If
        '    End If
        '    '  End If

        '    conn1.Close()
        '    conn1.Dispose()
        '    dtGST.Dispose()
        '    drGST.Close()
        '    commandGST.Dispose()

        'End If

        'Dim confirmValue As String
        'confirmValue = ""

        'confirmValue = Request.Form("confirm_value")
        'If Right(confirmValue, 3) = "Yes" Then

        '    System.Threading.Thread.Sleep(5000)
        '    Context.ApplicationInstance.CompleteRequest()

        '    'generateschedule()

        '    GenerateScheduleNew()

        '    'System.Threading.Thread.ResetAbort()
        '    'Context.ApplicationInstance.CompleteRequest()

        '    InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "Back-New", txtContractNo.Text)

        '    btnBack_Click(sender, e)

        '                System.Threading.Thread.Sleep(5000)
        '                Label1.Visible = True

        '                Dim conn As MySqlConnection = New MySqlConnection(constr)
        '                conn.Open()

        '                '' Start: Make Service Records VOID for Regeneration
        '                If txtnormalorregenerateschedule.Text = "regenerateschedule" Then
        '                    Dim commandUpdRegenerate As MySqlCommand = New MySqlCommand
        '                    commandUpdRegenerate.CommandType = CommandType.Text
        '                    commandUpdRegenerate.CommandText = "Update tblservicerecord set Status ='V' where ContractNo = '" & txtContractNo.Text & "'"
        '                    commandUpdRegenerate.Connection = conn
        '                    commandUpdRegenerate.ExecuteNonQuery()

        '                    commandUpdRegenerate.Dispose()
        '                End If

        '                '' End: Make Service Records VOID for Regeneration

        '                ''''''''''''''''''''''''''''''''''''


        '                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
        '                commandServiceRecordMasterSetup.CommandType = CommandType.Text
        '                commandServiceRecordMasterSetup.CommandText = "SELECT PrefixDocNoService  FROM tblservicerecordmastersetup"
        '                commandServiceRecordMasterSetup.Connection = conn

        '                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
        '                Dim dtServiceRecordMasterSetup As New DataTable
        '                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

        '                txtPrefixDocNoService.Text = dtServiceRecordMasterSetup.Rows(0)("PrefixDocNoService")

        '                ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

        '                Dim lPrefix As String
        '                Dim lYear As String
        '                Dim lMonth As String
        '                Dim lServiceNo As String
        '                Dim lSuffixVal As String
        '                Dim lSuffix As String
        '                Dim lSetWidth As Integer
        '                Dim lSetZeroes As String
        '                Dim lSeparator As String
        '                Dim lFullServiceNo As String
        '                Dim strUpdate As String
        '                Dim strdate As DateTime
        '                Dim lSeq As String

        '                ''Dim lintSqlCode As Integer, lbillAmt, lvalue, lContractDetSQLID, lContractDetFHzSQLID As Decimal
        '                Dim lteamID, lvehNo, lInChargeID, lScheduler, lCustTelephone, lCustFax, lContact, lwarranty, lNotes, lServiceNoActual, lContractNo, lProspectID, lComments, lreason, laction, ltargetID, lServiceBy, llocation, lbranchID, lheaderComments, lFrequency, lTeamName As String
        '                Dim laddBlock, laddNos, laddFloor, laddUnit, laddress1, laddBuilding, laddStreet, laddCity, laddState, laddCountry, laddPostal, lLocateGrp, lEmail, lContactType, lPONo, lOurRef, lYourRef As String
        '                Dim lBillingName, lbillAdress1, lbillStreet, lbillBuilding, lbillCity, lbillCountry, lbillState, lbillPostal, lSupervisor As String
        '                Dim ltimeIn, ltimeOut, lscheduleType As String, lallocateTime As Integer = 0

        '                Dim lservicenotes As String
        '                lservicenotes = ""

        '                'Start: Retrive values from Company/Person for headers

        '                laddBlock = ""
        '                laddNos = ""
        '                laddFloor = ""
        '                laddUnit = ""
        '                laddress1 = ""
        '                laddBuilding = ""
        '                laddStreet = ""
        '                laddCity = ""
        '                laddState = ""
        '                laddCountry = ""
        '                laddPostal = ""
        '                lLocateGrp = ""
        '                lEmail = ""
        '                lscheduleType = ""
        '                lNotes = "'"
        '                lScheduler = ""
        '                lteamID = ""
        '                lInChargeID = ""
        '                lheaderComments = ""
        '                lCustTelephone = ""
        '                lCustFax = ""
        '                lContact = ""
        '                ltimeIn = ""
        '                ltimeOut = ""
        '                lServiceBy = ""
        '                lreason = ""
        '                laction = ""
        '                ltargetID = ""
        '                lSeq = ""
        '                lContactType = ""
        '                lTeamName = ""
        '                lPONo = ""
        '                lOurRef = ""
        '                lYourRef = ""

        '                lBillingName = ""
        '                lbillAdress1 = ""
        '                lbillStreet = ""
        '                lbillBuilding = ""
        '                lbillCity = ""
        '                lbillCountry = ""
        '                lbillState = ""
        '                lbillPostal = ""
        '                llocation = ""

        '                'Dim conn As MySqlConnection = New MySqlConnection(constr)
        '                'conn.Open()

        '                Dim commandAddress As MySqlCommand = New MySqlCommand
        '                commandAddress.CommandType = CommandType.Text

        '                Dim comLocExist As Boolean = False


        '                If comLocExist = False Then
        '                    'Dim dsAddress As DataSet = Nothing
        '                    If txtContactType.Text.ToUpper = "COMPANY" Or txtContactType.Text.ToUpper = "CORPORATE" Then
        '                        lContactType = "COMPANY"
        '                        commandAddress.CommandText = "Select AddBlock, AddNos, AddFloor, AddUnit, Address1, AddStreet, AddBuilding, AddCity, AddCountry, AddState, AddPOstal, ContactPersonEmail, BillingName, billAddress1, billStreet, billBuilding, billCity, billCountry, billState, billPostal  from tblCompany where AccountiD = '" & txtAccountId.Text & "'"
        '                    ElseIf txtContactType.Text.ToUpper = "PERSON" Or txtContactType.Text.ToUpper = "RESIDENTIAL" Then
        '                        lContactType = "PERSON"
        '                        commandAddress.CommandText = "Select AddBlock, AddNos, AddFloor, AddUnit, Address1, AddStreet, AddBuilding, AddCity, AddCountry, AddState, AddPOstal, Email, BillingName, billAddress1, billStreet, billBuilding, billCity, billCountry, billState, billPostal from tblPerson where AccountiD = '" & txtAccountId.Text & "'"
        '                    End If
        '                End If


        '                ''''''''
        '                'commandAddress.CommandText = "SELECT *,UPPER(Salesman),UPPER(LocateGrp),UPPER(Industry) FROM tblcompany where rcno=" & Convert.ToInt32(txtRcno.Text)
        '                commandAddress.Connection = conn

        '                Dim drAddress As MySqlDataReader = commandAddress.ExecuteReader()
        '                Dim dtAddress As New DataTable
        '                dtAddress.Load(drAddress)

        '                If dtAddress.Rows.Count > 0 Then
        '                    laddBlock = dtAddress.Rows(0)("AddBlock").ToString
        '                    laddNos = dtAddress.Rows(0)("AddNos").ToString
        '                    laddFloor = dtAddress.Rows(0)("AddFloor").ToString
        '                    laddUnit = dtAddress.Rows(0)("AddUnit").ToString
        '                    laddress1 = dtAddress.Rows(0)("Address1").ToString
        '                    laddStreet = dtAddress.Rows(0)("AddStreet").ToString
        '                    laddBuilding = dtAddress.Rows(0)("AddBuilding").ToString

        '                    laddCity = dtAddress.Rows(0)("AddCity").ToString
        '                    laddCountry = dtAddress.Rows(0)("AddCountry").ToString
        '                    laddState = dtAddress.Rows(0)("AddState").ToString
        '                    laddPostal = dtAddress.Rows(0)("AddPostal").ToString

        '                    If txtContactType.Text.ToUpper = "COMPANY" Or txtContactType.Text.ToUpper = "CORPORATE" Then
        '                        lEmail = dtAddress.Rows(0)("ContactPersonEmail").ToString
        '                    ElseIf txtContactType.Text.ToUpper = "PERSON" Or txtContactType.Text.ToUpper = "RESIDENTIAL" Then
        '                        lEmail = dtAddress.Rows(0)("Email").ToString
        '                    End If


        '                    lBillingName = dtAddress.Rows(0)("BillingName").ToString
        '                    lbillAdress1 = dtAddress.Rows(0)("BillAddress1").ToString
        '                    lbillStreet = dtAddress.Rows(0)("BillStreet").ToString
        '                    lbillBuilding = dtAddress.Rows(0)("BillBuilding").ToString
        '                    lbillCity = dtAddress.Rows(0)("BillCity").ToString
        '                    lbillCountry = dtAddress.Rows(0)("BillCountry").ToString
        '                    lbillState = dtAddress.Rows(0)("BillState").ToString
        '                    lbillPostal = dtAddress.Rows(0)("BillPostal").ToString
        '                End If

        '                commandAddress.Dispose()
        '                dtAddress.Dispose()
        '                drAddress.Close()


        '                If lLocateGrp.Trim = "" And laddPostal.Trim <> "" Then

        '                    Dim commandLocateGRP As MySqlCommand = New MySqlCommand
        '                    commandLocateGRP.CommandType = CommandType.Text

        '                    'commandAddress.CommandText = "Select LocateGrp from tblPostalToLocation WHERE '" & laddPostal & "' like PostalBeginWith +'%' and PostalBeginWith is not null and PostalBeginWith<>'' order by PostalBeginWith "
        '                    commandAddress.CommandText = "Select LocateGrp from tblPostalToLocation WHERE PostalBeginWith = '" & Left(laddPostal, 2) & "' and PostalBeginWith is not null and PostalBeginWith<>'' order by PostalBeginWith "
        '                    Dim drLocateGRP As MySqlDataReader = commandAddress.ExecuteReader()
        '                    Dim dtLocateGRP As New DataTable
        '                    dtLocateGRP.Load(drLocateGRP)

        '                    If dtLocateGRP.Rows.Count > 0 Then
        '                        lLocateGrp = dtLocateGRP.Rows(0)("LocateGrp").ToString

        '                    End If
        '                    commandLocateGRP.Dispose()
        '                    dtLocateGRP.Dispose()
        '                    drLocateGRP.Close()
        '                End If

        '                'End: Retrive values Company/Person  for headers

        '                'Start: Retrive values from Contract for headers

        '                Dim commandContract As MySqlCommand = New MySqlCommand
        '                commandContract.CommandType = CommandType.Text
        '                commandContract.CommandText = "Select LocateGRP, Notes, Comments, ServiceNoActual, Contact, ContractNo, ProspectID, teamID, Telephone, Fax, Scheduler, InChargeID, ScheduleType, timeIn, timeOut, Support, PoNo, OurReference, YourReference, AllocatedSvcTime, Supervisor, Location  from tblContract where ContractNo = '" & txtContractNo.Text & "'"
        '                commandContract.Connection = conn

        '                Dim drContract As MySqlDataReader = commandContract.ExecuteReader()
        '                Dim dtContract As New DataTable
        '                dtContract.Load(drContract)

        '                If dtContract.Rows.Count > 0 Then
        '                    lLocateGrp = dtContract.Rows(0)("LocateGrp").ToString
        '                    lNotes = dtContract.Rows(0)("Notes").ToString
        '                    lheaderComments = dtContract.Rows(0)("Comments").ToString
        '                    lServiceNoActual = Val(dtContract.Rows(0)("ServiceNoActual")).ToString
        '                    lContact = dtContract.Rows(0)("Contact").ToString
        '                    lContractNo = dtContract.Rows(0)("ContractNo").ToString
        '                    lProspectID = dtContract.Rows(0)("ProspectID").ToString
        '                    lteamID = dtContract.Rows(0)("teamID").ToString
        '                    lCustTelephone = dtContract.Rows(0)("Telephone").ToString
        '                    lCustFax = dtContract.Rows(0)("Fax").ToString
        '                    lScheduler = dtContract.Rows(0)("Scheduler").ToString
        '                    lInChargeID = dtContract.Rows(0)("InChargeID").ToString
        '                    lscheduleType = dtContract.Rows(0)("ScheduleType").ToString
        '                    ltimeIn = dtContract.Rows(0)("timeIn").ToString
        '                    ltimeOut = dtContract.Rows(0)("timeOut").ToString
        '                    lServiceBy = dtContract.Rows(0)("Support").ToString
        '                    lPONo = dtContract.Rows(0)("PoNo").ToString

        '                    lOurRef = dtContract.Rows(0)("OurReference").ToString
        '                    lYourRef = dtContract.Rows(0)("YourReference").ToString
        '                    lallocateTime = dtContract.Rows(0)("AllocatedSvcTime").ToString
        '                    lSupervisor = dtContract.Rows(0)("Supervisor").ToString

        '                    llocation = dtContract.Rows(0)("Location").ToString

        '                    lteamID = Strings.Left(lteamID, 25).Trim
        '                    lvehNo = ""

        '                    If lteamID.Trim <> "" Then

        '                        Dim commandVehNo As MySqlCommand = New MySqlCommand
        '                        commandVehNo.CommandType = CommandType.Text
        '                        commandVehNo.CommandText = "SELECT VehNos, TeamName FROM tblTeam where TeamID='" & lteamID & "'"
        '                        commandVehNo.Connection = conn

        '                        Dim drVehno As MySqlDataReader = commandVehNo.ExecuteReader()
        '                        Dim dtVehno As New DataTable
        '                        dtVehno.Load(drVehno)

        '                        If dtVehno.Rows.Count > 0 Then
        '                            lvehNo = dtVehno.Rows(0)("VehNos").ToString
        '                            lTeamName = dtVehno.Rows(0)("TeamName").ToString
        '                        End If

        '                        commandVehNo.Dispose()
        '                        dtVehno.Dispose()
        '                        drVehno.Close()
        '                    End If

        '                    ''''''''''''''''

        '                End If

        '                commandContract.Dispose()
        '                dtContract.Dispose()
        '                drContract.Close()

        '                'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "2", "")
        '                'End: Retrieve values Contract for headers

        '                Dim connService As MySqlConnection = New MySqlConnection(constr)
        '                connService.Open()

        '                Dim command As MySqlCommand = New MySqlCommand

        '                command.CommandType = CommandType.Text

        '                Dim sServiceDate, sDOW, sPH, sFrequency, starget, lTarget, sServices, sProductServices, sServiceId, sLocationId, sServiceLocationGroup As String, sValue As Decimal, sContractDetSQLID, sContractDetFHzSQLID As Integer

        '                sServiceDate = ""
        '                sFrequency = ""
        '                sDOW = ""
        '                sPH = ""
        '                starget = ""
        '                lTarget = ""
        '                sServices = ""
        '                sProductServices = ""
        '                sLocationId = ""
        '                gtargetID = ""

        '                Dim rownum As Integer
        '                rownum = 1
        '                sServiceLocationGroup = ""

        '                If grvschedule.Rows.Count > 0 Then

        '                    For Each row As GridViewRow In grvschedule.Rows
        '                        For x As Integer = 0 To grvschedule.Columns.Count - 1

        '                            If x = 1 Then
        '                                sServiceDate = row.Cells(x).Text
        '                            End If
        '                            If x = 3 Then
        '                                sDOW = row.Cells(x).Text
        '                            End If

        '                            If x = 4 Then
        '                                sPH = row.Cells(x).Text
        '                            End If

        '                            If x = 5 Then
        '                                sFrequency = row.Cells(x).Text
        '                            End If

        '                            If x = 6 Then
        '                                sServices = row.Cells(x).Text
        '                            End If

        '                            If x = 7 Then
        '                                starget = row.Cells(x).Text
        '                                'gtargetID = row.Cells(x).Text
        '                            End If

        '                            If x = 8 Then
        '                                sValue = row.Cells(x).Text
        '                            End If

        '                            If x = 9 Then
        '                                sLocationId = row.Cells(x).Text
        '                            End If

        '                            'If x = 13 Then
        '                            '    txtAgreeValue.Text = row.Cells(x).Text
        '                            'End If

        '                            If x = 13 Then
        '                                sServiceLocationGroup = row.Cells(x).Text
        '                            End If

        '                            If x = 22 Then
        '                                sContractDetSQLID = row.Cells(x).Text
        '                            End If



        '                            If x = 23 Then
        '                                sContractDetFHzSQLID = row.Cells(x).Text
        '                            End If

        '                            If x = 25 Then
        '                                sServiceId = row.Cells(x).Text
        '                            End If


        '                        Next x

        '                        '31/10/16

        '                        'Start: Retrive values from Service whether record exists for the Date and Location

        '                        Dim commandServiceExists As MySqlCommand = New MySqlCommand
        '                        commandServiceExists.CommandType = CommandType.Text
        '                        commandServiceExists.CommandText = "Select RecordNo, BillAmount  from tblServiceRecord where ContractNo = '" & txtContractNo.Text & "' and ServiceDate = '" + Convert.ToDateTime(sServiceDate).ToString("yyyy-MM-dd") & "' and LocationID ='" & sLocationId & "' and status ='O'"
        '                        commandServiceExists.Connection = conn

        '                        Dim drContractServiceExists As MySqlDataReader = commandServiceExists.ExecuteReader()
        '                        Dim dtContractServiceExists As New DataTable
        '                        dtContractServiceExists.Load(drContractServiceExists)

        '                        If dtContractServiceExists.Rows.Count > 0 Then
        '                            lFullServiceNo = dtContractServiceExists.Rows(0)("RecordNo").ToString

        '                            'Start: Update BillAmount for same location on 10.12.16
        '                            Dim lExistingBillAmount As Decimal
        '                            lExistingBillAmount = dtContractServiceExists.Rows(0)("BillAmount").ToString() + sValue

        '                            Dim commandUpdBillAmount As MySqlCommand = New MySqlCommand
        '                            commandUpdBillAmount.CommandType = CommandType.Text
        '                            commandUpdBillAmount.CommandText = "Update tblservicerecord set BillAmount = " & lExistingBillAmount & "  where ContractNo = '" & txtContractNo.Text & "' and ServiceDate = '" + Convert.ToDateTime(sServiceDate).ToString("yyyy-MM-dd") & "' and LocationID ='" & sLocationId & "' and status ='O'"
        '                            commandUpdBillAmount.Connection = conn
        '                            commandUpdBillAmount.ExecuteNonQuery()

        '                            'End:Update BillAmount for same location on 10.12.16

        '                            commandUpdBillAmount.Dispose()
        '                            commandServiceExists.Dispose()
        '                            dtContractServiceExists.Dispose()
        '                            drContractServiceExists.Close()

        '                            GoTo ServicedetailInsert
        '                        End If

        '                        commandServiceExists.Dispose()
        '                        dtContractServiceExists.Dispose()
        '                        drContractServiceExists.Close()

        '                        'End: Retrive values from Service whether record exists for the date



        '                        'Start: Retrive values from CompanyLocation/PersonLocation for the AccountId and Location

        '                        Dim lServiceNameLoc, lDescriptionLoc, lAddress1Loc, lAddStreetLoc, lAddBuildingLoc, lAddCityLoc, lAddStateLoc, lAddCountryLoc, lAddPostalLoc, lLocateGRPLoc, lContactPersonLoc, lTelephoneLoc, lMobileLoc, lEmailLoc, lFaxLoc, lContact1PositionLoc, lTelephone2Loc, lContactPerson2Loc, lContact2PositionLoc, lContact2TelLoc, lContact2FaxLoc, lContact2Tel2Loc, lContact2MobileLoc, lContact2EmailLoc, lBillEmail1SvcLoc, lBillEmail2SvcLoc, lEmailCCLoc, lSendServiceReportTo1Loc, lSendServiceReportTo2Loc, lSalesmansvc, lLocationLoc As String

        '                        lServiceNameLoc = ""
        '                        lDescriptionLoc = ""
        '                        lAddress1Loc = ""
        '                        lAddStreetLoc = ""
        '                        lAddBuildingLoc = ""
        '                        lAddCityLoc = ""
        '                        lAddStateLoc = ""
        '                        lAddCountryLoc = ""
        '                        lAddPostalLoc = ""
        '                        lLocateGRPLoc = ""
        '                        lContactPersonLoc = ""
        '                        lTelephoneLoc = ""
        '                        lMobileLoc = ""
        '                        lEmailLoc = ""
        '                        lFaxLoc = ""
        '                        lContact1PositionLoc = ""
        '                        lTelephone2Loc = ""
        '                        lContactPerson2Loc = ""
        '                        lContact2PositionLoc = ""
        '                        lContact2TelLoc = ""
        '                        lContact2FaxLoc = ""
        '                        lContact2Tel2Loc = ""
        '                        lContact2MobileLoc = ""
        '                        lContact2EmailLoc = ""

        '                        lBillEmail1SvcLoc = ""
        '                        lBillEmail2SvcLoc = ""
        '                        lSendServiceReportTo1Loc = ""
        '                        lSendServiceReportTo2Loc = ""
        '                        lSalesmansvc = ""
        '                        lEmailCCLoc = ""
        '                        lLocationLoc = ""

        '                        Dim commandCompanyPersonLocation As MySqlCommand = New MySqlCommand
        '                        commandCompanyPersonLocation.CommandType = CommandType.Text

        '                        If txtContactType.Text.ToUpper = "COMPANY" Or txtContactType.Text.ToUpper = "CORPORATE" Then
        '                            commandCompanyPersonLocation.CommandText = "Select ServiceName, Description, Address1, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, LocateGRP, ContactPerson, Telephone, Mobile, Email, Fax, Contact1Position, Telephone2, ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile,  Contact2Email, BillEmail1Svc, BillEmail2Svc, SendServiceReportTo1, SendServiceReportTo2, Salesmansvc, ServiceEmailCC, Location  from tblCompanyLocation where AccountID = '" & txtAccountId.Text & "'  and LocationID ='" & sLocationId & "'"
        '                        ElseIf txtContactType.Text.ToUpper = "PERSON" Or txtContactType.Text.ToUpper = "RESIDENTIAL" Then
        '                            commandCompanyPersonLocation.CommandText = "Select ServiceName, Description, Address1, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, LocateGRP, ContactPerson, Telephone, Mobile, Email, Fax, Contact1Position, Telephone2, ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile,  Contact2Email, BillEmail1Svc, BillEmail2Svc, SendServiceReportTo1, SendServiceReportTo2, Salesmansvc, ServiceEmailCC, Location  from tblPersonLocation where AccountID = '" & txtAccountId.Text & "'  and LocationID ='" & sLocationId & "'"
        '                        End If

        '                        commandCompanyPersonLocation.Connection = conn

        '                        Dim drContractCompanyPersonLocation As MySqlDataReader = commandCompanyPersonLocation.ExecuteReader()
        '                        Dim dtContractCompanyPersonLocation As New DataTable
        '                        dtContractCompanyPersonLocation.Load(drContractCompanyPersonLocation)

        '                        If dtContractCompanyPersonLocation.Rows.Count > 0 Then
        '                            lServiceNameLoc = dtContractCompanyPersonLocation.Rows(0)("ServiceName").ToString
        '                            lDescriptionLoc = dtContractCompanyPersonLocation.Rows(0)("Description").ToString

        '                            lAddress1Loc = dtContractCompanyPersonLocation.Rows(0)("Address1").ToString
        '                            lAddStreetLoc = dtContractCompanyPersonLocation.Rows(0)("AddStreet").ToString
        '                            lAddBuildingLoc = dtContractCompanyPersonLocation.Rows(0)("AddBuilding").ToString
        '                            lAddCityLoc = dtContractCompanyPersonLocation.Rows(0)("AddCity").ToString
        '                            lAddStateLoc = dtContractCompanyPersonLocation.Rows(0)("AddState").ToString
        '                            lAddCountryLoc = dtContractCompanyPersonLocation.Rows(0)("AddCountry").ToString
        '                            lAddPostalLoc = dtContractCompanyPersonLocation.Rows(0)("AddPostal").ToString
        '                            lLocateGRPLoc = dtContractCompanyPersonLocation.Rows(0)("LocateGRP").ToString
        '                            lContactPersonLoc = dtContractCompanyPersonLocation.Rows(0)("ContactPerson").ToString
        '                            lTelephoneLoc = dtContractCompanyPersonLocation.Rows(0)("Telephone").ToString
        '                            lMobileLoc = dtContractCompanyPersonLocation.Rows(0)("Mobile").ToString
        '                            lEmailLoc = dtContractCompanyPersonLocation.Rows(0)("Email").ToString
        '                            lFaxLoc = dtContractCompanyPersonLocation.Rows(0)("Fax").ToString
        '                            lContact1PositionLoc = dtContractCompanyPersonLocation.Rows(0)("Contact1Position").ToString
        '                            lTelephone2Loc = dtContractCompanyPersonLocation.Rows(0)("Telephone2").ToString
        '                            lContactPerson2Loc = dtContractCompanyPersonLocation.Rows(0)("ContactPerson2").ToString
        '                            lContact2PositionLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Position").ToString
        '                            lContact2TelLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Tel").ToString
        '                            lContact2FaxLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Fax").ToString
        '                            lContact2Tel2Loc = dtContractCompanyPersonLocation.Rows(0)("Contact2Tel2").ToString
        '                            lContact2MobileLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Mobile").ToString
        '                            lContact2EmailLoc = dtContractCompanyPersonLocation.Rows(0)("Contact2Email").ToString

        '                            'BillEmail1Svc, BillEmail2Svc, SendServiceReportTo1, SendServiceReportTo2

        '                            lBillEmail1SvcLoc = dtContractCompanyPersonLocation.Rows(0)("BillEmail1Svc").ToString
        '                            lBillEmail2SvcLoc = dtContractCompanyPersonLocation.Rows(0)("BillEmail2Svc").ToString
        '                            lSendServiceReportTo1Loc = dtContractCompanyPersonLocation.Rows(0)("SendServiceReportTo1").ToString
        '                            lSendServiceReportTo2Loc = dtContractCompanyPersonLocation.Rows(0)("SendServiceReportTo2").ToString
        '                            lSalesmansvc = dtContractCompanyPersonLocation.Rows(0)("Salesmansvc").ToString

        '                            lEmailCCLoc = dtContractCompanyPersonLocation.Rows(0)("ServiceEmailCC").ToString
        '                            lLocationLoc = dtContractCompanyPersonLocation.Rows(0)("Location").ToString

        '                        End If

        '                        commandCompanyPersonLocation.Dispose()
        '                        dtContractCompanyPersonLocation.Dispose()
        '                        drContractCompanyPersonLocation.Close()

        '                        'End: Retrive values from CompanyLocation/PersonLocation for the AccountId and Location

        '                        '31/10/16

        '                        'Start: Doc Control

        '                        lSeparator = "-"
        '                        strUpdate = ""
        '                        lPrefix = ""
        '                        lSuffixVal = 0
        '                        lServiceNo = ""
        '                        lMonth = ""
        '                        lYear = "'"

        '                        lPrefix = Format(CDate(sServiceDate), "yyyyMM")
        '                        'lServiceNo = "SERV" + lPrefix + "-"
        '                        lServiceNo = txtPrefixDocNoService.Text.Trim + "SERV" + lPrefix + "-"

        '                        lMonth = Right(lPrefix, 2)
        '                        lYear = Left(lPrefix, 4)

        '                        'lPrefix = "SERV" + lYear

        '                        lPrefix = "SERV" + lYear

        '                        lSeq = Format(Val(rownum), "0000")
        '                        lFullServiceNo = ""

        '                        Dim commandDocControl As MySqlCommand = New MySqlCommand
        '                        commandDocControl.CommandType = CommandType.Text
        '                        commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
        '                        commandDocControl.Connection = conn

        '                        Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
        '                        Dim dt As New DataTable
        '                        dt.Load(dr)

        '                        If dt.Rows.Count > 0 Then

        '                            If lMonth = "01" Then
        '                                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "02" Then
        '                                lSuffixVal = dt.Rows(0)("Period02").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString
        '                                strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "03" Then
        '                                lSuffixVal = dt.Rows(0)("Period03").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "04" Then
        '                                lSuffixVal = dt.Rows(0)("Period04").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "05" Then
        '                                lSuffixVal = dt.Rows(0)("Period05").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "06" Then
        '                                lSuffixVal = dt.Rows(0)("Period06").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "07" Then
        '                                lSuffixVal = dt.Rows(0)("Period07").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "08" Then
        '                                lSuffixVal = dt.Rows(0)("Period08").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString
        '                                strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "09" Then
        '                                lSuffixVal = dt.Rows(0)("Period09").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "10" Then
        '                                lSuffixVal = dt.Rows(0)("Period10").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "11" Then
        '                                lSuffixVal = dt.Rows(0)("Period11").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString

        '                                strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            ElseIf lMonth = "12" Then
        '                                lSuffixVal = dt.Rows(0)("Period12").ToString + 1
        '                                lSetWidth = dt.Rows(0)("Width").ToString
        '                                strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

        '                            End If

        '                            Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

        '                            commandDocControlEdit.CommandType = CommandType.Text
        '                            commandDocControlEdit.CommandText = strUpdate
        '                            commandDocControlEdit.Connection = conn
        '                            commandDocControlEdit.ExecuteNonQuery()

        '                        Else

        '                            Dim lSuffixVal1 As String
        '                            Dim lSuffixVal2 As String
        '                            Dim lSuffixVal3 As String
        '                            Dim lSuffixVal4 As String
        '                            Dim lSuffixVal5 As String
        '                            Dim lSuffixVal6 As String
        '                            Dim lSuffixVal7 As String
        '                            Dim lSuffixVal8 As String
        '                            Dim lSuffixVal9 As String
        '                            Dim lSuffixVal10 As String
        '                            Dim lSuffixVal11 As String
        '                            Dim lSuffixVal12 As String

        '                            lSuffixVal1 = 0
        '                            lSuffixVal2 = 0
        '                            lSuffixVal3 = 0
        '                            lSuffixVal4 = 0
        '                            lSuffixVal5 = 0
        '                            lSuffixVal6 = 0
        '                            lSuffixVal7 = 0
        '                            lSuffixVal8 = 0
        '                            lSuffixVal9 = 0
        '                            lSuffixVal10 = 0
        '                            lSuffixVal11 = 0
        '                            lSuffixVal12 = 0

        '                            If lMonth = "01" Then
        '                                lSuffixVal1 = 1
        '                            ElseIf lMonth = "02" Then
        '                                lSuffixVal2 = 1
        '                            ElseIf lMonth = "03" Then
        '                                lSuffixVal3 = 1
        '                            ElseIf lMonth = "04" Then
        '                                lSuffixVal4 = 1
        '                            ElseIf lMonth = "05" Then
        '                                lSuffixVal5 = 1
        '                            ElseIf lMonth = "06" Then
        '                                lSuffixVal6 = 1
        '                            ElseIf lMonth = "07" Then
        '                                lSuffixVal7 = 1
        '                            ElseIf lMonth = "08" Then
        '                                lSuffixVal8 = 1
        '                            ElseIf lMonth = "09" Then
        '                                lSuffixVal9 = 1
        '                            ElseIf lMonth = "10" Then
        '                                lSuffixVal10 = 1
        '                            ElseIf lMonth = "11" Then
        '                                lSuffixVal11 = 1
        '                            ElseIf lMonth = "12" Then
        '                                lSuffixVal12 = 1
        '                            End If
        '                            Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

        '                            commandDocControlInsert.CommandType = CommandType.Text
        '                            'commandDocControlInsert.CommandText = "INSERT INTO tblDocControl(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
        '                            '               "('" & Left(lPrefix, Len(lPrefix) - 2) & "','M'," & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"
        '                            commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
        '             "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"

        '                            commandDocControlInsert.Connection = conn
        '                            commandDocControlInsert.ExecuteNonQuery()

        '                        End If


        '                        lSetZeroes = ""

        '                        Dim i As Integer
        '                        If lSetWidth > 0 Then
        '                            For i = 1 To lSetWidth - (Len(lSuffixVal))
        '                                lSetZeroes = lSetZeroes & "0"
        '                            Next i

        '                        End If
        '                        lSuffix = lSetZeroes + lSuffixVal.ToString()
        '                        lFullServiceNo = (lServiceNo + lSuffix).Trim

        '                        'txtContractNo.Text = lServiceNo + lSuffix
        '                        'End: Doc Control
        '                        'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "3", "")


        '                        'Dim qryService As String = "INSERT INTO tblserviceRecord(AccountId, CustaddBlock, CustaddNos, CustaddFloor, CustaddUnit, Custaddress1, CustaddBuilding,  "
        '                        'qryService = qryService + " CustaddStreet, CustaddCity, CustaddState,CustaddCountry, CustaddPostal,location,BranchCode, ServiceBy, "
        '                        'qryService = qryService + " ServiceDate, scheduleType, Status,RecordNo, SchServiceTime,SchServiceTimeOut, AllocatedSvcTime,ContactType, CustCode, CustName,"
        '                        'qryService = qryService + " Contact, Notes, SchServiceDate,BillAmount,ContractDetSQLID, ContractDetFHzSQLID, ContractNo, CompanyGroup, TargetId,"
        '                        'qryService = qryService + " VehNo, Scheduler, Seq,  Comments, TeamID, InChargeID, WebFlowFrom, WebFlowTo, WebEditSource, WebLastEditDevice,"
        '                        'qryService = qryService + " FlowFrom, FlowTo, EditSource, LastEditDevice,  CustTelephone, CustFax, ChkOnSite,   "
        '                        'qryService = qryService + " BillYN, ManualYN, SignatureYN, chkUrgent, Filling, Fax, FaxnReturn, BilledAmt, CollectPayment, CollectAmt, EmailSent, EmailSendFail, TabletDownloaded, SubmitCount, CustomerSign, ServiceBySign, InChargeSign, LocationID, "
        '                        'qryService = qryService + " ServiceName, Description, Address1, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, LocateGRP,"
        '                        'qryService = qryService + " ContactPersonID, Contact1Tel, ContactPersonMobile, Email, Contact1Fax, Contact1Position, Contact1Tel2, "
        '                        'qryService = qryService + " ContactPerson2, Contact2Position, Contact2Tel, Contact2Fax, Contact2Tel2, Contact2Mobile,  Contact2Email, ServiceLocationGroup, PONo, OtherEmail, "
        '                        'qryService = qryService + " OffAddress, OffStreet, OffBuilding, OffCity, OffCountry, OffState,  OffPostal, BillingName, BillAddress, BillStreet, BillBuilding, BillCity, BillCountry, BillState,  BillPostal, OurRef, YourRef, Salesman, Supervisor, LockST, "
        '                        'qryService = qryService + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
        '                        'qryService = qryService + " VALUES(@AccountId, @CustaddBlock, @CustaddNos, @CustaddFloor, @CustaddUnit, @Custaddress1, @CustaddBuilding,"
        '                        'qryService = qryService + " @CustaddStreet, @CustaddCity, @CustaddState, @CustaddCountry, @CustaddPostal, @location, @BranchCode, @ServiceBy, "
        '                        'qryService = qryService + " @ServiceDate, @scheduleType, @Status, @RecordNo, @SchServiceTime, @SchServiceTimeOut, @AllocatedSvcTime, @ContactType, @CustCode, @CustName,"
        '                        'qryService = qryService + " @Contact, @Notes, @SchServiceDate, @BillAmount,@ContractDetSQLID, @ContractDetFHzSQLID, @ContractNo, @CompanyGroup, @TargetId,"
        '                        'qryService = qryService + " @VehNo, @Scheduler, @Seq,  @Comments, @TeamID, @InChargeID, @WebFlowFrom, @WebFlowTo, @WebEditSource, @WebLastEditDevice,"
        '                        'qryService = qryService + " @FlowFrom, @FlowTo, @EditSource, @LastEditDevice,  @CustTelephone, @CustFax, @ChkOnSite,  "
        '                        'qryService = qryService + " 'N', 'N',  'Y', 0, 0, 0, 0, 0, 0.00, 0, 0, 0, 0.00, 0, '','','', @LocationId, "
        '                        'qryService = qryService + " @ServiceName, @Description, @Address1, @AddStreet, @AddBuilding, @AddCity, @AddState, @AddCountry, @AddPostal, @LocateGRP,"
        '                        'qryService = qryService + " @ContactPersonID, @Contact1Tel, @ContactPersonMobile, @Email, @Contact1Fax, @Contact1Position, @Contact1Tel2, "
        '                        'qryService = qryService + " @ContactPerson2, @Contact2Position, @Contact2Tel, @Contact2Fax, @Contact2Tel2, @Contact2Mobile,  @Contact2Email, @ServiceLocationGroup, @PoNo, @OtherEmail, "
        '                        'qryService = qryService + " @OffAddress, @OffStreet, @OffBuilding, @OffCity, @OffCountry, @OffState,  @OffPostal, @BillingName, @BillAddress, @BillStreet, @BillBuilding, @BillCity, @BillCountry, @BillState,  @BillPostal, @OurRef, @YourRef, @Salesman, @Supervisor, @LockST, "
        '                        'qryService = qryService + " @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

        '                        'command.CommandText = qryService
        '                        'command.Parameters.Clear()
        '                        'command.Parameters.AddWithValue("@AccountId", txtAccountId.Text.Trim.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddBlock", laddBlock.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddNos", laddNos.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddFloor", laddFloor.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddUnit", laddUnit.ToUpper)
        '                        'command.Parameters.AddWithValue("@Custaddress1", laddress1.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddBuilding", laddBuilding.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddStreet", laddStreet.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddCity", laddCity.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddState", laddState.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddCountry", laddCountry.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustaddPostal", laddPostal.ToUpper)
        '                        'command.Parameters.AddWithValue("@location", lLocationLoc)
        '                        'command.Parameters.AddWithValue("@BranchCode", "")
        '                        'command.Parameters.AddWithValue("@ServiceBy", lServiceBy.ToUpper)

        '                        'If sServiceDate.Trim = "" Then
        '                        '    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
        '                        'Else
        '                        '    strdate = DateTime.Parse(sServiceDate.Trim)
        '                        '    command.Parameters.AddWithValue("@ServiceDate", strdate.ToString("yyyy-MM-dd"))
        '                        'End If

        '                        'command.Parameters.AddWithValue("@scheduleType", lscheduleType)
        '                        'command.Parameters.AddWithValue("@Status", "O")
        '                        ''command.Parameters.AddWithValue("@RecordNo", (lServiceNo + lSuffix).Trim)
        '                        'command.Parameters.AddWithValue("@RecordNo", lFullServiceNo)

        '                        'command.Parameters.AddWithValue("@SchServiceTime", ltimeIn)
        '                        'command.Parameters.AddWithValue("@SchServiceTimeOut", ltimeOut)
        '                        'command.Parameters.AddWithValue("@AllocatedSvcTime", lallocateTime)

        '                        ''If lContactType = "COMPANY" Then
        '                        ''    command.Parameters.AddWithValue("@ContactType", "CORPORATE")
        '                        ''Else
        '                        ''    command.Parameters.AddWithValue("@ContactType", "RESIDENTIAL")
        '                        ''End If
        '                        'command.Parameters.AddWithValue("@ContactType", lContactType.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustCode", txtClient.Text.ToUpper)
        '                        'command.Parameters.AddWithValue("@CustName", txtCustName.Text.ToUpper)

        '                        'command.Parameters.AddWithValue("@Contact", lContact.ToUpper)
        '                        'command.Parameters.AddWithValue("@Notes", lNotes.ToUpper)

        '                        'If sServiceDate.Trim = "" Then
        '                        '    command.Parameters.AddWithValue("@SchServiceDate", DBNull.Value)
        '                        'Else
        '                        '    strdate = DateTime.Parse(sServiceDate.Trim)
        '                        '    command.Parameters.AddWithValue("@SchServiceDate", strdate.ToString("yyyy-MM-dd"))
        '                        'End If

        '                        'command.Parameters.AddWithValue("@BillAmount", sValue)
        '                        'command.Parameters.AddWithValue("@ContractDetSQLID", sContractDetSQLID)
        '                        'command.Parameters.AddWithValue("@ContractDetFHzSQLID", sContractDetFHzSQLID)
        '                        'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
        '                        'command.Parameters.AddWithValue("@CompanyGroup", Session("companygrp"))
        '                        'command.Parameters.AddWithValue("@TargetId", "")
        '                        'command.Parameters.AddWithValue("@VehNo", lvehNo.ToUpper)
        '                        'command.Parameters.AddWithValue("@Scheduler", lScheduler.ToUpper)
        '                        'command.Parameters.AddWithValue("@Seq", Right(lSeq, 3))
        '                        ''command.Parameters.AddWithValue("@Email", lEmail)
        '                        'command.Parameters.AddWithValue("@Comments", lheaderComments.ToUpper)
        '                        'command.Parameters.AddWithValue("@TeamID", lteamID.ToUpper)
        '                        'command.Parameters.AddWithValue("@InChargeID", lInChargeID.ToUpper)
        '                        'command.Parameters.AddWithValue("@WebFlowFrom", "ZS")
        '                        'command.Parameters.AddWithValue("@WebFlowTo", "ZS")
        '                        'command.Parameters.AddWithValue("@WebEditSource", "ZS")
        '                        'command.Parameters.AddWithValue("@WebLastEditDevice", "")
        '                        'command.Parameters.AddWithValue("@FlowFrom", "ZS")
        '                        'command.Parameters.AddWithValue("@FlowTo", "ZS")
        '                        'command.Parameters.AddWithValue("@EditSource", "ZS")

        '                        'command.Parameters.AddWithValue("@LastEditDevice", "")

        '                        ''command.Parameters.AddWithValue("@LastEditDevice", Left(System.Net.Dns.GetHostEntry(Request.UserHostAddress).HostName, 25))
        '                        ''command.Parameters.AddWithValue("@LocateGRP", lLocateGrp)
        '                        'command.Parameters.AddWithValue("@CustTelephone", lCustTelephone)
        '                        'command.Parameters.AddWithValue("@CustFax", lCustFax)
        '                        'command.Parameters.AddWithValue("@ChkOnSite", 1)
        '                        'command.Parameters.AddWithValue("@LocationId", sLocationId.ToUpper)
        '                        'command.Parameters.AddWithValue("@ServiceName", lServiceNameLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Description", lDescriptionLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Address1", lAddress1Loc.ToUpper)
        '                        'command.Parameters.AddWithValue("@AddStreet", lAddStreetLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@AddBuilding", lAddBuildingLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@AddCity", lAddCityLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@AddState", lAddStateLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@AddCountry", lAddCountryLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@AddPostal", lAddPostalLoc)
        '                        'command.Parameters.AddWithValue("@LocateGRP", lLocateGRPLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@ContactPersonID", lContactPersonLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Contact1Tel", lTelephoneLoc)
        '                        'command.Parameters.AddWithValue("@ContactPersonMobile", lMobileLoc)
        '                        'command.Parameters.AddWithValue("@Email", lEmailLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Contact1Fax", lFaxLoc)
        '                        'command.Parameters.AddWithValue("@Contact1Position", lContact1PositionLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Contact1Tel2", lTelephone2Loc)
        '                        'command.Parameters.AddWithValue("@ContactPerson2", lContactPerson2Loc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Contact2Position", lContact2PositionLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Contact2Tel", lContact2TelLoc)
        '                        'command.Parameters.AddWithValue("@Contact2Fax", lContact2FaxLoc)
        '                        'command.Parameters.AddWithValue("@Contact2Tel2", lContact2Tel2Loc)
        '                        'command.Parameters.AddWithValue("@Contact2Mobile", lContact2MobileLoc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Contact2Email", Left(lContact2EmailLoc.ToUpper, 100))

        '                        'command.Parameters.AddWithValue("@OffAddress", laddress1.ToUpper)
        '                        'command.Parameters.AddWithValue("@OffStreet", laddStreet.ToUpper)
        '                        'command.Parameters.AddWithValue("@OffBuilding", laddBuilding.ToUpper)
        '                        'command.Parameters.AddWithValue("@OffCity", laddCity.ToUpper)
        '                        'command.Parameters.AddWithValue("@OffCountry", laddCountry.ToUpper)
        '                        'command.Parameters.AddWithValue("@OffState", laddState.ToUpper)
        '                        'command.Parameters.AddWithValue("@OffPostal", laddPostal.ToUpper)

        '                        'command.Parameters.AddWithValue("@BillingName", Left(lBillingName.ToUpper, 100))
        '                        'command.Parameters.AddWithValue("@BillAddress", lbillAdress1.ToUpper)
        '                        'command.Parameters.AddWithValue("@BillStreet", lbillStreet.ToUpper)
        '                        'command.Parameters.AddWithValue("@BillBuilding", lbillBuilding.ToUpper)
        '                        'command.Parameters.AddWithValue("@BillCity", lbillCity.ToUpper)
        '                        'command.Parameters.AddWithValue("@BillCountry", lbillCountry.ToUpper)
        '                        'command.Parameters.AddWithValue("@BillState", lbillState.ToUpper)
        '                        'command.Parameters.AddWithValue("@BillPostal", lbillPostal)

        '                        'If String.IsNullOrEmpty(sServiceLocationGroup) = True Or sServiceLocationGroup = "&nbsp;" Then
        '                        '    command.Parameters.AddWithValue("@ServiceLocationGroup", "")
        '                        'Else
        '                        '    command.Parameters.AddWithValue("@ServiceLocationGroup", sServiceLocationGroup.ToUpper)
        '                        'End If


        '                        'command.Parameters.AddWithValue("@PONo", lPONo.ToUpper)
        '                        ''command.Parameters.AddWithValue("@OurRef", lOurRef.ToUpper)
        '                        'command.Parameters.AddWithValue("@OurRef", "")
        '                        'command.Parameters.AddWithValue("@YourRef", lYourRef.ToUpper)
        '                        'command.Parameters.AddWithValue("@Salesman", lSalesmansvc.ToUpper)
        '                        'command.Parameters.AddWithValue("@Supervisor", lSupervisor.ToUpper)


        '                        'Dim lOtherEmail As String
        '                        'lOtherEmail = ""

        '                        'If lSendServiceReportTo1Loc = "Y" Then
        '                        '    lOtherEmail = lBillEmail1SvcLoc.Trim
        '                        'End If

        '                        'If lSendServiceReportTo2Loc = "Y" Then
        '                        '    'If String.IsNullOrEmpty(lOtherEmail.Trim()) = False Then
        '                        '    '    lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
        '                        '    'Else
        '                        '    '    lOtherEmail = lBillEmail2SvcLoc.Trim()
        '                        '    'End If

        '                        '    If String.IsNullOrEmpty(lBillEmail2SvcLoc.Trim()) = False Then
        '                        '        If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
        '                        '            lOtherEmail = lBillEmail2SvcLoc.Trim()
        '                        '        Else
        '                        '            lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
        '                        '        End If
        '                        '    End If
        '                        'End If

        '                        'If String.IsNullOrEmpty(lEmailCCLoc.Trim()) = False Then
        '                        '    If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
        '                        '        lOtherEmail = lEmailCCLoc.Trim()
        '                        '    Else
        '                        '        lOtherEmail = lOtherEmail.Trim() & ";" & lEmailCCLoc.Trim()
        '                        '    End If
        '                        'End If

        '                        'command.Parameters.AddWithValue("@OtherEmail", Left(lOtherEmail.ToUpper.Trim(), 500))
        '                        'command.Parameters.AddWithValue("@LockST", "N")

        '                        'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
        '                        'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
        '                        'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
        '                        'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                        'command.Connection = connService
        '                        'command.ExecuteNonQuery()

        '                        'Start : 02.08.20

        '                        Dim commandInsertIntoTblServiceRecord As MySqlCommand = New MySqlCommand
        '                        commandInsertIntoTblServiceRecord.CommandType = CommandType.StoredProcedure
        '                        commandInsertIntoTblServiceRecord.CommandText = "SaveServiceScheduleToService"
        '                        'command.CommandText = qryService
        '                        commandInsertIntoTblServiceRecord.Parameters.Clear()
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AccountId", txtAccountId.Text.Trim.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddBlock", laddBlock.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddNos", laddNos.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddFloor", laddFloor.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddUnit", laddUnit.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Custaddress1", laddress1.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddBuilding", laddBuilding.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddStreet", laddStreet.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddCity", laddCity.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddState", laddState.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddCountry", laddCountry.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustaddPostal", laddPostal.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_location", lLocationLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BranchCode", "")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceBy", lServiceBy.ToUpper)

        '                        If sServiceDate.Trim = "" Then
        '                            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceDate", DBNull.Value)
        '                        Else
        '                            strdate = DateTime.Parse(sServiceDate.Trim)
        '                            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceDate", strdate.ToString("yyyy-MM-dd"))
        '                        End If

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_scheduleType", lscheduleType)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Status", "O")
        '                        'command.Parameters.AddWithValue("@pr_RecordNo", (lServiceNo + lSuffix).Trim)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_RecordNo", lFullServiceNo)

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceTime", ltimeIn)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceTimeOut", ltimeOut)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AllocatedSvcTime", lallocateTime)

        '                        'If lContactType = "COMPANY" Then
        '                        '    command.Parameters.AddWithValue("@pr_ContactType", "CORPORATE")
        '                        'Else
        '                        '    command.Parameters.AddWithValue("@pr_ContactType", "RESIDENTIAL")
        '                        'End If
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactType", lContactType.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustCode", txtClient.Text.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustName", txtCustName.Text.ToUpper)

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact", lContact.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Notes", lNotes.ToUpper)

        '                        If sServiceDate.Trim = "" Then
        '                            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceDate", DBNull.Value)
        '                        Else
        '                            strdate = DateTime.Parse(sServiceDate.Trim)
        '                            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SchServiceDate", strdate.ToString("yyyy-MM-dd"))
        '                        End If

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillAmount", sValue)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractDetSQLID", sContractDetSQLID)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractDetFHzSQLID", sContractDetFHzSQLID)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CompanyGroup", Session("companygrp"))
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_TargetId", "")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_VehNo", lvehNo.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Scheduler", lScheduler.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Seq", Right(lSeq, 3))
        '                        'command.Parameters.AddWithValue("@pr_Email", lEmail)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Comments", lheaderComments.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_TeamID", lteamID.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_InChargeID", lInChargeID.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebFlowFrom", "ZS")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebFlowTo", "ZS")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebEditSource", "ZS")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_WebLastEditDevice", "")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_FlowFrom", "ZS")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_FlowTo", "ZS")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_EditSource", "ZS")

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LastEditDevice", "")

        '                        'command.Parameters.AddWithValue("@pr_LastEditDevice", Left(System.Net.Dns.GetHostEntry(Request.UserHostAddress).HostName, 25))
        '                        'command.Parameters.AddWithValue("@pr_LocateGRP", lLocateGrp)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustTelephone", lCustTelephone)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CustFax", lCustFax)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ChkOnSite", 1)

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillYN", "N")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ManualYN", "N")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SignatureYN", "Y")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_chkUrgent", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Filling", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Fax", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_FaxnReturn", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BilledAmt", 0.0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CollectPayment", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CollectAmt", 0.0)

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_EmailSent", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_EmailSendFail", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_TabletDownloaded", 0)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_SubmitCount", 0)

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LocationId", sLocationId.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceName", lServiceNameLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Description", lDescriptionLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Address1", lAddress1Loc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddStreet", lAddStreetLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddBuilding", lAddBuildingLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddCity", lAddCityLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddState", lAddStateLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddCountry", lAddCountryLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_AddPostal", lAddPostalLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LocateGRP", lLocateGRPLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactPersonID", lContactPersonLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Tel", lTelephoneLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactPersonMobile", lMobileLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Email", lEmailLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Fax", lFaxLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Position", lContact1PositionLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact1Tel2", lTelephone2Loc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ContactPerson2", lContactPerson2Loc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Position", lContact2PositionLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Tel", lContact2TelLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Fax", lContact2FaxLoc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Tel2", lContact2Tel2Loc)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Mobile", lContact2MobileLoc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Contact2Email", Left(lContact2EmailLoc.ToUpper, 100))

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffAddress", laddress1.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffStreet", laddStreet.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffBuilding", laddBuilding.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffCity", laddCity.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffCountry", laddCountry.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffState", laddState.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OffPostal", laddPostal.ToUpper)

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillingName", Left(lBillingName.ToUpper, 100))
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillAddress", lbillAdress1.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillStreet", lbillStreet.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillBuilding", lbillBuilding.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillCity", lbillCity.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillCountry", lbillCountry.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillState", lbillState.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_BillPostal", lbillPostal)

        '                        If String.IsNullOrEmpty(sServiceLocationGroup) = True Or sServiceLocationGroup = "&nbsp;" Then
        '                            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceLocationGroup", "")
        '                        Else
        '                            commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_ServiceLocationGroup", sServiceLocationGroup.ToUpper)
        '                        End If

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_PONo", lPONo.ToUpper)
        '                        'commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OurRef", lOurRef.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OurRef", "")
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_YourRef", lYourRef.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Salesman", lSalesmansvc.ToUpper)
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_Supervisor", lSupervisor.ToUpper)

        '                        Dim lOtherEmail As String
        '                        lOtherEmail = ""

        '                        If lSendServiceReportTo1Loc = "Y" Then
        '                            lOtherEmail = lBillEmail1SvcLoc.Trim
        '                        End If

        '                        If lSendServiceReportTo2Loc = "Y" Then
        '                            'If String.IsNullOrEmpty(lOtherEmail.Trim()) = False Then
        '                            '    lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
        '                            'Else
        '                            '    lOtherEmail = lBillEmail2SvcLoc.Trim()
        '                            'End If

        '                            If String.IsNullOrEmpty(lBillEmail2SvcLoc.Trim()) = False Then
        '                                If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
        '                                    lOtherEmail = lBillEmail2SvcLoc.Trim()
        '                                Else
        '                                    lOtherEmail = lOtherEmail.Trim() & ";" & lBillEmail2SvcLoc.Trim()
        '                                End If
        '                            End If
        '                        End If

        '                        If String.IsNullOrEmpty(lEmailCCLoc.Trim()) = False Then
        '                            If String.IsNullOrEmpty(lOtherEmail.Trim()) = True Then
        '                                lOtherEmail = lEmailCCLoc.Trim()
        '                            Else
        '                                lOtherEmail = lOtherEmail.Trim() & ";" & lEmailCCLoc.Trim()
        '                            End If
        '                        End If

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_OtherEmail", Left(lOtherEmail.ToUpper.Trim(), 500))
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LockST", "N")

        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CreatedBy", Session("UserID"))
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
        '                        commandInsertIntoTblServiceRecord.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                        commandInsertIntoTblServiceRecord.Connection = connService
        '                        commandInsertIntoTblServiceRecord.ExecuteNonQuery()

        '                        'End : 02.08.20

        'ServicedetailInsert:

        '                        'Start:Service Detail


        '                        lTarget = starget


        '                        Dim command1 As MySqlCommand = New MySqlCommand

        '                        command1.CommandType = CommandType.Text

        '                        'command1.CommandText = "SELECT * FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
        '                        command1.CommandText = "SELECT Frequency FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"

        '                        command1.Connection = conn

        '                        Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
        '                        Dim dtservicecontractDet As New DataTable
        '                        dtservicecontractDet.Load(drservicecontractDet)

        '                        If dtservicecontractDet.Rows.Count > 0 Then
        '                            For x As Integer = 0 To dtservicecontractDet.Rows.Count - 1

        '                                lservicenotes = dtservicecontractDet.Rows(x)("Frequency").ToString()

        '                                Dim commandTarget As MySqlCommand = New MySqlCommand
        '                                commandTarget.CommandType = CommandType.Text


        '                                commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & sContractDetSQLID
        '                                'commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(x)("OrigCode").ToString
        '                                commandTarget.Connection = conn

        '                                'Dim laction As String

        '                                'Dim gtargetID_SR As String

        '                                laction = ""
        '                                lreason = ""
        '                                gtargetID_SR = ""
        '                                lwarranty = ""
        '                                lwarranty = lwarranty & sFrequency & " - "

        '                                Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
        '                                Dim dtTarget As New DataTable
        '                                dtTarget.Load(drTarget)

        '                                If dtTarget.Rows.Count Then
        '                                    lservicenotes = lservicenotes & " - "

        '                                    For t = 0 To dtTarget.Rows.Count - 1
        '                                        If lreason <> "" Then lreason = lreason & vbCrLf
        '                                        lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
        '                                        'If lwarranty <> "" Then lwarranty = lwarranty & vbCrLf
        '                                        If lwarranty <> "" Then lwarranty = lwarranty

        '                                        If t = 0 Then
        '                                            starget = starget & dtTarget.Rows(t)("TargetID").ToString()
        '                                            lwarranty = lwarranty & dtTarget.Rows(t)("TargetDesc").ToString()
        '                                            lservicenotes = lservicenotes & dtTarget.Rows(t)("TargetDesc").ToString()
        '                                        Else
        '                                            starget = starget & ", " & dtTarget.Rows(t)("TargetID").ToString()
        '                                            lwarranty = lwarranty & ", " & dtTarget.Rows(t)("TargetDesc").ToString()
        '                                            lservicenotes = lservicenotes & ", " & dtTarget.Rows(t)("TargetDesc").ToString()
        '                                        End If

        '                                    Next
        '                                End If


        '                            Next x

        '                            ''''''''''''''''''''''''''''''''''''''

        '                            '    ''''''''''''''''''''''''''''''''''
        '                        End If

        '                        'Reason



        '                        'Dim qryServiceDetail As String = "INSERT INTO tblserviceRecordDet(location, BranchID, ContractNo, Warranty,   "
        '                        'qryServiceDetail = qryServiceDetail + " Status,RecordNo, Duration,AllocatedSvcTime,ProductServices, Reason, Action,"
        '                        'qryServiceDetail = qryServiceDetail + " ContractDetSQLID, ContractDetFHzSQLID, TargetId, ServiceId, Frequency,"
        '                        'qryServiceDetail = qryServiceDetail + " WebFlowFrom, WebFlowTo, WebEditSource, WebLastEditDevice, FlowFrom, FlowTo, EditSource, LastEditDevice,"
        '                        'qryServiceDetail = qryServiceDetail + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
        '                        'qryServiceDetail = qryServiceDetail + " VALUES(@location, @BranchID, @ContractNo, @Warranty, "
        '                        'qryServiceDetail = qryServiceDetail + " @Status, @RecordNo, @Duration, @AllocatedSvcTime, @ProductServices, @Reason, @Action,"
        '                        'qryServiceDetail = qryServiceDetail + " @ContractDetSQLID, @ContractDetFHzSQLID,  @TargetId, @ServiceId, @Frequency,"
        '                        'qryServiceDetail = qryServiceDetail + " @WebFlowFrom, @WebFlowTo, @WebEditSource, @WebLastEditDevice, @FlowFrom, @FlowTo, @EditSource, @LastEditDevice,"
        '                        'qryServiceDetail = qryServiceDetail + " @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

        '                        'command.CommandText = qryServiceDetail
        '                        'command.Parameters.Clear()
        '                        'command.Parameters.AddWithValue("@location", "")
        '                        'command.Parameters.AddWithValue("@BranchID", "")
        '                        'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.ToUpper)
        '                        'command.Parameters.AddWithValue("@Warranty", lwarranty.ToUpper)
        '                        'command.Parameters.AddWithValue("@Status", "O")
        '                        ''command.Parameters.AddWithValue("@RecordNo", (lServiceNo + lSuffix).Trim)
        '                        'command.Parameters.AddWithValue("@RecordNo", lFullServiceNo.ToUpper)
        '                        'command.Parameters.AddWithValue("@Duration", "0")
        '                        'command.Parameters.AddWithValue("@AllocatedSvcTime", lallocateTime)
        '                        'command.Parameters.AddWithValue("@ProductServices", sServices.ToUpper)
        '                        'command.Parameters.AddWithValue("@Reason", lreason.ToUpper)
        '                        'command.Parameters.AddWithValue("@Action", laction.ToUpper)

        '                        'command.Parameters.AddWithValue("@ContractDetSQLID", 0)
        '                        'command.Parameters.AddWithValue("@ContractDetFHzSQLID", 0)
        '                        'command.Parameters.AddWithValue("@TargetId", lTarget)
        '                        'command.Parameters.AddWithValue("@ServiceId", sServiceId.ToUpper)
        '                        'command.Parameters.AddWithValue("@Frequency", sFrequency.ToUpper)
        '                        'command.Parameters.AddWithValue("@WebFlowFrom", "ZS")
        '                        'command.Parameters.AddWithValue("@WebFlowTo", "ZS")
        '                        'command.Parameters.AddWithValue("@WebEditSource", "ZS")
        '                        'command.Parameters.AddWithValue("@WebLastEditDevice", "")
        '                        'command.Parameters.AddWithValue("@FlowFrom", "ZS")
        '                        'command.Parameters.AddWithValue("@FlowTo", "ZS")
        '                        'command.Parameters.AddWithValue("@EditSource", "ZS")

        '                        'command.Parameters.AddWithValue("@LastEditDevice", "")

        '                        'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
        '                        'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                        'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
        '                        'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                        'command.Connection = connService
        '                        'command.ExecuteNonQuery()
        '                        ''End:service Detail


        '                        Dim commandInsertIntoTblServiceRecordDet As MySqlCommand = New MySqlCommand
        '                        commandInsertIntoTblServiceRecordDet.CommandType = CommandType.StoredProcedure
        '                        commandInsertIntoTblServiceRecordDet.CommandText = "SaveServiceScheduleToServiceDetail"

        '                        'command.CommandText = qryServiceDetail
        '                        commandInsertIntoTblServiceRecordDet.Parameters.Clear()
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_location", "")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_BranchID", "")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ContractNo", txtContractNo.Text.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Warranty", lwarranty.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Status", "O")
        '                        'command.Parameters.AddWithValue("@pr_RecordNo", (lServiceNo + lSuffix).Trim)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_RecordNo", lFullServiceNo.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Duration", "0")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_AllocatedSvcTime", lallocateTime)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ProductServices", sServices.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Reason", lreason.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Action", laction.ToUpper)

        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ContractDetSQLID", 0)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ContractDetFHzSQLID", 0)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_TargetId", lTarget)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_ServiceId", sServiceId.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_Frequency", sFrequency.ToUpper)
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebFlowFrom", "ZS")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebFlowTo", "ZS")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebEditSource", "ZS")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_WebLastEditDevice", "")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_FlowFrom", "ZS")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_FlowTo", "ZS")
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_EditSource", "ZS")

        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_LastEditDevice", "")

        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_CreatedBy", Session("UserID"))
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
        '                        commandInsertIntoTblServiceRecordDet.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                        commandInsertIntoTblServiceRecordDet.Connection = connService
        '                        commandInsertIntoTblServiceRecordDet.ExecuteNonQuery()
        '                        ''''''''''''''''

        '                        Dim sqlLastId As String
        '                        sqlLastId = "SELECT last_insert_id() from tblserviceRecordDet"

        '                        Dim commandlast_insert_id As MySqlCommand = New MySqlCommand
        '                        commandlast_insert_id.CommandType = CommandType.Text

        '                        commandlast_insert_id.CommandText = sqlLastId
        '                        commandlast_insert_id.Parameters.Clear()

        '                        commandlast_insert_id.Connection = connService
        '                        txtSourceSQLID.Text = commandlast_insert_id.ExecuteScalar()

        '                        txtRcnoDetailLog.Text = txtSourceSQLID.Text

        '                        'Start:Service Team

        '                        If String.IsNullOrEmpty(lteamID) = False Then
        '                            Dim commandIsStaffExists As MySqlCommand = New MySqlCommand
        '                            commandIsStaffExists.CommandType = CommandType.Text
        '                            commandIsStaffExists.CommandText = "Select StaffID  from tblServiceRecordStaff where RecordNo = '" & lFullServiceNo & "' and StaffID = '" & lServiceBy.Trim & "'"
        '                            commandIsStaffExists.Connection = conn

        '                            Dim drIsStaffExists As MySqlDataReader = commandIsStaffExists.ExecuteReader()
        '                            Dim dtIsStaffExists As New DataTable
        '                            dtIsStaffExists.Load(drIsStaffExists)

        '                            If dtIsStaffExists.Rows.Count = 0 Then
        '                                'Dim qryServiceTeam As String = "INSERT INTO tblServiceRecordStaff(StaffID,StaffName,CostValue,RecordNo,   "
        '                                'qryServiceTeam = qryServiceTeam + " FlowFrom,FlowTo,EditSource,CreateSource,"
        '                                'qryServiceTeam = qryServiceTeam + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn)"
        '                                'qryServiceTeam = qryServiceTeam + " Values (@StaffID, @StaffName, @CostValue, @RecordNo, @FlowFrom, @FlowTo, @EditSource, @CreateSource,"
        '                                'qryServiceTeam = qryServiceTeam + " @CreatedBy, @CreatedOn, @LastModifiedBy, @LastModifiedOn)"

        '                                'command.CommandText = qryServiceTeam
        '                                'command.Parameters.Clear()

        '                                'command.Parameters.AddWithValue("@StaffID", lServiceBy.ToUpper)
        '                                'command.Parameters.AddWithValue("@StaffName", lServiceBy.ToUpper)
        '                                'command.Parameters.AddWithValue("@CostValue", 0.0)
        '                                'command.Parameters.AddWithValue("@RecordNo", (lFullServiceNo))
        '                                'command.Parameters.AddWithValue("@FlowFrom", "ZS")
        '                                ''command.Parameters.AddWithValue("@RecordNo", (lFullServiceNo))
        '                                'command.Parameters.AddWithValue("@FlowTo", "ZS")
        '                                'command.Parameters.AddWithValue("@EditSource", "ZS")
        '                                'command.Parameters.AddWithValue("@CreateSource", "ZS")
        '                                'command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
        '                                'command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
        '                                'command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
        '                                'command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                                'command.Connection = connService
        '                                'command.ExecuteNonQuery()


        '                                Dim commandInsertIntoTblServiceRecordStaff As MySqlCommand = New MySqlCommand
        '                                commandInsertIntoTblServiceRecordStaff.CommandType = CommandType.StoredProcedure
        '                                commandInsertIntoTblServiceRecordStaff.CommandText = "SaveServiceScheduleToServiceStaff"

        '                                'commandInsertIntoTblServiceRecordStaff.CommandText = qryServiceTeam
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.Clear()

        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_StaffID", lServiceBy.ToUpper)
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_StaffName", lServiceBy.ToUpper)
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CostValue", 0.0)
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_RecordNo", (lFullServiceNo))
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_FlowFrom", "ZS")
        '                                'command.Parameters.AddWithValue("@pr_RecordNo", (lFullServiceNo))
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_FlowTo", "ZS")
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_EditSource", "ZS")
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CreateSource", "ZS")
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CreatedBy", Session("UserID"))
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_LastModifiedBy", Session("UserID"))
        '                                commandInsertIntoTblServiceRecordStaff.Parameters.AddWithValue("@pr_LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

        '                                commandInsertIntoTblServiceRecordStaff.Connection = connService
        '                                commandInsertIntoTblServiceRecordStaff.ExecuteNonQuery()
        '                            End If
        '                        End If
        '                        'End:service Team
        '                        'dr.Close()

        '                        'End If
        '                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SERVSCHE", lFullServiceNo, "NEW", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, "", lFullServiceNo & "," & strdate & "," & sValue & "," & lServiceBy.ToUpper & "," & lheaderComments.ToUpper, lFullServiceNo)

        '                        rownum = rownum + 1
        '                    Next row
        '                End If


        '                'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "5", "")
        '                ''''update strNotes

        '                Dim strNotes As String
        '                strNotes = ""
        '                Dim strRecordNo As String
        '                strRecordNo = ""

        '                Dim commandServiceRecordet As MySqlCommand = New MySqlCommand
        '                commandServiceRecordet.CommandType = CommandType.Text

        '                commandServiceRecordet.CommandText = "select RecordNo, Warranty from  tblServiceRecordDet where ContractNo='" & txtContractNo.Text & "' order by RecordNo"
        '                commandServiceRecordet.Connection = conn

        '                Dim commandUpdNotes As MySqlCommand = New MySqlCommand

        '                Dim drServiceRecordet As MySqlDataReader = commandServiceRecordet.ExecuteReader()
        '                Dim dtServiceRecordet As New DataTable
        '                dtServiceRecordet.Load(drServiceRecordet)

        '                If dtServiceRecordet.Rows.Count > 0 Then
        '                    strRecordNo = dtServiceRecordet.Rows(0)("RecordNo").ToString()

        '                    For n = 0 To dtServiceRecordet.Rows.Count - 1

        '                        If strRecordNo = dtServiceRecordet.Rows(n)("RecordNo").ToString() Then
        '                            If String.IsNullOrEmpty(strNotes) = False Then
        '                                'strNotes = strNotes.Trim & vbNewLine
        '                                strNotes = strNotes.Trim & vbCrLf & dtServiceRecordet.Rows(n)("Warranty").ToString().Trim
        '                            Else
        '                                strNotes = dtServiceRecordet.Rows(n)("Warranty").ToString().Trim
        '                            End If
        '                        Else
        '                            'Dim commandUpdNotes As MySqlCommand = New MySqlCommand
        '                            commandUpdNotes.CommandType = CommandType.Text
        '                            commandUpdNotes.CommandText = "Update tblservicerecord set Notes = '" & strNotes.Trim & "'  where RecordNo = '" & strRecordNo & "' and status ='O'"
        '                            commandUpdNotes.Connection = conn
        '                            commandUpdNotes.ExecuteNonQuery()

        '                            strNotes = ""
        '                            strNotes = dtServiceRecordet.Rows(n)("Warranty").ToString().Trim
        '                            strRecordNo = dtServiceRecordet.Rows(n)("RecordNo").ToString()

        '                            'commandUpdNotes.Dispose()
        '                        End If

        '                    Next  'For n = 0 To dtServiceRecordet.Rows.Count - 1

        '                    'Dim commandUpdNotes As MySqlCommand = New MySqlCommand
        '                    commandUpdNotes.CommandType = CommandType.Text
        '                    commandUpdNotes.CommandText = "Update tblservicerecord set Notes = '" & strNotes.Trim.ToUpper & "'  where RecordNo = '" & strRecordNo & "' and status ='O'"
        '                    commandUpdNotes.Connection = conn
        '                    commandUpdNotes.ExecuteNonQuery()

        '                    commandUpdNotes.Dispose()
        '                    commandServiceRecordet.Dispose()
        '                    dtServiceRecordet.Dispose()
        '                    drServiceRecordet.Close()

        '                End If


        '                ''''' update strnotes

        '                'Start: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 

        '                Dim lServiceNo1 As Integer

        '                lServiceNo1 = 0

        '                Dim commandMaxServiceDate1 As MySqlCommand = New MySqlCommand
        '                commandMaxServiceDate1.CommandType = CommandType.Text
        '                'commandMaxServiceDate.CommandText = "SELECT count(distinct(ServiceDate)) as totservices FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text & "'"
        '                commandMaxServiceDate1.CommandText = "SELECT count(distinct(ServiceDate)) as 'totservices' FROM tbwserviceschedule where ContractNo='" & txtContractNo.Text.Trim & "'"
        '                commandMaxServiceDate1.Connection = conn

        '                Dim drMaxServiceDate1 As MySqlDataReader = commandMaxServiceDate1.ExecuteReader()
        '                Dim dtMaxServiceDate1 As New DataTable
        '                dtMaxServiceDate1.Load(drMaxServiceDate1)

        '                If dtMaxServiceDate1.Rows.Count > 0 Then
        '                    lServiceNo1 = Convert.ToInt32(dtMaxServiceDate1.Rows(0)("totservices").ToString)
        '                End If

        '                'conn.Close()

        '                Dim commandUpdGS As MySqlCommand = New MySqlCommand
        '                commandUpdGS.CommandType = CommandType.Text

        '                If txtFixedContinuous.Text = "FIXED" Then
        '                    commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
        '                Else
        '                    If txtTotServiceRec.Text = 0 Then
        '                        commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & " where ContractNo = '" & txtContractNo.Text & "'"
        '                    Else
        '                        commandUpdGS.CommandText = "Update tblcontract set GSt='P', ServiceNo= " & lServiceNo1 & ", ServiceBal = " & lServiceNo1 & ", ServiceStart= '" & Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") & "', EndOfLastSchedule = '" & Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") & "'  where ContractNo = '" & txtContractNo.Text & "'"
        '                    End If
        '                End If

        '                commandUpdGS.Connection = conn
        '                commandUpdGS.ExecuteNonQuery()

        '                conn.Close()
        '                connService.Close()

        '                'End: Update ServiceNo, ServiceNoActual, ServiceBal, ServiceAmt, AmtCompleted , AmtBalance 
        '                lblMessage.Text = "SERVICE RECORDS GENERATED SUCCESSFULLY"
        '                btnServiceSchedule.Enabled = True
        '                btnGenerateServiceSchedule.Enabled = False

        '                conn.Close()
        '                conn.Dispose()

        '                connService.Close()
        '                connService.Dispose()

        '                command.Dispose()
        '                commandAddress.Dispose()
        '                commandContract.Dispose()
        '                'commandGST.Dispose()
        '                commandUpdGS.Dispose()
        '                commandUpdNotes.Dispose()
        '                commandMaxServiceDate1.Dispose()

        '                'InsertIntoTblServiceEventLog("SERVICE - " + Session("UserID"), "Page_Load", "6", "")

        '                'btnPrint.Enabled = True

        '                InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "2", txtContractNo.Text)

        '                btnBack_Click(sender, e)
        '                InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "3", txtContractNo.Text)

        '  End If

    End Sub

    Private Function ConvertSortDirection(ByVal sortDirection As SortDirection) As String
        Dim newSortDirection As String = String.Empty
        Select Case sortDirection
            Case sortDirection.Ascending
                newSortDirection = "ASC"
            Case sortDirection.Descending
                newSortDirection = "DESC"
        End Select

        Return newSortDirection
    End Function

    Protected Sub grvschedule_Sorting(sender As Object, e As GridViewSortEventArgs) Handles grvschedule.Sorting
        Dim dataTable As DataTable = TryCast(ViewState("CurrentTableSch"), DataTable)
        If dataTable IsNot Nothing Then
            Dim dataView As New DataView(dataTable)
            dataView.Sort = e.SortExpression & " " & ConvertSortDirection(e.SortDirection)
            grvschedule.DataSource = dataView
            grvschedule.DataBind()

        End If
    End Sub


    Protected Sub btnServiceSchedule_Click(sender As Object, e As EventArgs) Handles btnServiceSchedule.Click
        Try
            Session("servicefrom") = "contract"
            Session("contractdetailfrom") = ""
            Session("serviceschedulefrom") = ""
            Session("contractfrom") = ""

            If String.IsNullOrEmpty(txtContractNo.Text) = False Then
                Session("contractno") = txtContractNo.Text
            End If

            DeleteBatchNo()

            Response.Redirect("Service.aspx")
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "DeleteBatchNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub


    Private Sub DeleteBatchNo()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text

            Dim qry1 As String = "DELETE from tbwserviceschedule where BatchNo= @BatchNo"

            command1.CommandText = qry1
            command1.Parameters.Clear()
            command1.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            command1.Connection = conn
            command1.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command1.Dispose()

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "DeleteBatchNo", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnQuit_Click(sender As Object, e As EventArgs) Handles btnCalculateValues.Click
        Try

            'Dim t As DateTime
            'Dim d As Double
            'Dim dt As Date

            'If String.IsNullOrEmpty(txtFrom.Text) = False Then
            '    If Date.TryParseExact(txtFrom.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
            '        txtFrom.Text = dt.ToShortDateString

            '    Else
            '        ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
            '        lblAlert.Text = "FROM DATE IS INVALID"
            '        Exit Sub
            '    End If
            'End If

            'If Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") > Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") Then
            '    lblAlert.Text = "Start Date cannot be later than End Date"
            '    txtFrom.Text = Session("servstart")
            '    Exit Sub
            'End If

            'If Val(txtMonthsOriginal.Text) < Val(txtMonths.Text) Then
            '    lblAlert.Text = "Months cannot be more than " & txtMonthsOriginal.Text
            '    Exit Sub
            'End If

            ''mdlConfirmMonths.Show()
            'PopulateForMonths()



            Dim IsWeekly As String
            IsWeekly = "N"

            'tempStartDate = txtServStart.Text
            'txtBatchNo.Text = (txtContractNo.Text + Now()).Trim

            Dim d As Date
            'Dim strdate As Date
            'If Date.TryParseExact(txtServStart.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
            '    tempStartDate = d.ToShortDateString
            'End If

            'txtFrom.Text = CDate(txtServStart.Text)
            'txtTo.Text = CDate(txtServEnd.Text)
            ''
            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT ContractNo, NoOfInterval, Frequency, ServiceID, ServiceDesc, Value, OrigCode, LocationID, ServiceName, Address1, LocateGRP, ServiceLocationGroup, Salesman FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
            command1.Connection = conn

            Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            gproductService = ""
            gserviceValue = 0
            gSQLID = 0
            'Dim isLaterThanEndDate As Boolean
            gActive = "Y"
            ''


            Dim IsPerServiceValue As String
            Dim PerServiceValue As Decimal
            IsPerServiceValue = "N"
            PerServiceValue = 0.0

            PerServiceValue = dtservicecontractDet.Rows(0)("Value").ToString()

            If PerServiceValue > 0.0 Then
                IsPerServiceValue = "Y"
            Else
                IsPerServiceValue = "N"
            End If

            If IsPerServiceValue = "N" Then

                'Start: for Quarterly / Half Annually / Annually

                Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
                commandDailyWeekly.CommandType = CommandType.Text
                commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
                commandDailyWeekly.Connection = conn

                Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
                Dim dtContractDailyWeekly As New DataTable
                dtContractDailyWeekly.Load(drContractDailyWeekly)
                Dim lServiceVal As Decimal
                Dim totalservicedate As Long
                totalservicedate = 0

                If Val(dtContractDailyWeekly.Rows(0)("dailyweekly").ToString) = 0 Then
                    Dim commandDailyWeeklyUpd As MySqlCommand = New MySqlCommand
                    commandDailyWeeklyUpd.CommandType = CommandType.Text
                    commandDailyWeeklyUpd.CommandText = "SELECT count((ServiceDate)) as DW FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                    commandDailyWeeklyUpd.Connection = conn

                    Dim drDailyWeeklyUpd As MySqlDataReader = commandDailyWeeklyUpd.ExecuteReader()
                    Dim dtDailyWeeklyUpd As New DataTable
                    dtDailyWeeklyUpd.Load(drDailyWeeklyUpd)

                    'totalservicedate = Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)
                    'lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)

                    'Dim commandValUpd As MySqlCommand = New MySqlCommand
                    'commandValUpd.CommandType = CommandType.Text
                    'commandValUpd.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo"
                    'commandValUpd.Parameters.Clear()

                    'commandValUpd.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                    ''commandValUpd.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                    'commandValUpd.Parameters.AddWithValue("@Val", Math.Round(lServiceVal, 2))
                    ''commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                    'commandValUpd.Connection = conn
                    'commandValUpd.ExecuteScalar()


                    '''
                    Dim commandDailyWeeklyFre As MySqlCommand = New MySqlCommand
                    commandDailyWeeklyFre.CommandType = CommandType.Text
                    commandDailyWeeklyFre.CommandText = "SELECT Frequency FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                    commandDailyWeeklyFre.Connection = conn

                    Dim drDailyWeeklyUpdFre As MySqlDataReader = commandDailyWeeklyFre.ExecuteReader()
                    Dim dtDailyWeeklyUpdFre As New DataTable
                    dtDailyWeeklyUpdFre.Load(drDailyWeeklyUpdFre)

                    '''

                    'lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)

                    If dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "MONTHLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text)
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "QUARTERLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 3
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "BI-MONTHLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 2
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "HALF-ANNUALLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 6
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "ANNUALLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 12
                    Else
                        lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)
                    End If

                    Dim commandValUpd As MySqlCommand = New MySqlCommand
                    commandValUpd.CommandType = CommandType.Text
                    commandValUpd.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo"
                    commandValUpd.Parameters.Clear()

                    commandValUpd.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                    'commandValUpd.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                    commandValUpd.Parameters.AddWithValue("@Val", Math.Round(lServiceVal, 2))
                    'commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                    commandValUpd.Connection = conn
                    commandValUpd.ExecuteScalar()

                    'end quoted: 16.12.20

                    GoTo EndScheduling

                End If

                'End: for Quarterly / Half Annually / Annually


                Dim conn1 As MySqlConnection = New MySqlConnection(constr)
                conn1.Open()

                Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
                commandMaxSrviceDate.CommandType = CommandType.Text
                commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
                commandMaxSrviceDate.Connection = conn1

                Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
                Dim dtMaxSrviceDate As New DataTable
                dtMaxSrviceDate.Load(drMaxSrviceDate)

                If dtMaxSrviceDate.Rows.Count > 0 Then
                    gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
                End If

                conn1.Close()
                conn1.Dispose()

calcval:

                'Start: Calculate Values

                'If txtComputationMethod.Text = "1" Then
                Dim commandValues As MySqlCommand = New MySqlCommand

                commandValues.CommandType = CommandType.Text
                commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
                commandValues.Connection = conn

                Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                Dim dtValues As New DataTable
                dtValues.Load(drValues)

                Dim lTotalServices = dtValues.Rows.Count
                Dim lbillingamount As Double
                Dim lbillingamountTotal As Double

                lbillingamount = 0.0
                lbillingamountTotal = 0.0
                'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

                Dim z As Integer
                z = 0

                Dim lMonthYear As String
                lMonthYear = ""

                Dim lWeekMonthYear As String
                lWeekMonthYear = ""

                For Each row As DataRow In dtValues.Rows

                    If lMonthYear <> row("MonthYear") Then
                        lMonthYear = row("MonthYear")

                        Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                        commandMonthYearCount.CommandType = CommandType.Text
                        commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                        commandMonthYearCount.Connection = conn

                        Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                        Dim dtMonthYearCount As New DataTable
                        dtMonthYearCount.Load(drMonthYearCount)

                        lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                    End If


                    Dim commandVal As MySqlCommand = New MySqlCommand
                    commandVal.CommandType = CommandType.Text
                    commandVal.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                    commandVal.Parameters.Clear()

                    commandVal.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                    commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))

                    If z <> (dtValues.Rows.Count - 1) Then
                        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                        If row("Active") = "Y" Then
                            lbillingamountTotal = lbillingamountTotal + Math.Round(lbillingamount, 2) / row("CountDays")
                        End If
                    End If

                    'Else

                    'If txtComputationMethod.Text = "1" Then
                    '    If z = (dtValues.Rows.Count - 1) Then
                    '        commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                    '    End If

                    'Else
                    '    If z = (dtValues.Rows.Count - 1) Then
                    '        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                    '    End If
                    'End If

                    If txtComputationMethod.Text <> "Monthly" Then
                        If z = (dtValues.Rows.Count - 1) Then
                            commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                        End If

                    Else
                        If z = (dtValues.Rows.Count - 1) Then
                            commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                        End If
                    End If
                    commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                    commandVal.Connection = conn
                    commandVal.ExecuteScalar()
                    z = z + 1
                    'conn.Close()
                Next row
                'End If

                'End: Calculate Values
            End If   'End if PersErviceValue is N


EndScheduling:

            ''''''''''''' 15.07

            '''''''''''''''''''''''''''''
            '' Start: update for Fixed Contract Value Computaion Method

            ''''''''''''''''''''''''''''''
            If ((txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
                'If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                Dim commandValues1 As MySqlCommand = New MySqlCommand

                commandValues1.CommandType = CommandType.Text
                commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                commandValues1.Connection = conn

                Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                Dim dtValues1 As New DataTable
                dtValues1.Load(drValues1)

                If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then


                    '''' Monthly and higher

                    Dim commandValues10 As MySqlCommand = New MySqlCommand

                    commandValues10.CommandType = CommandType.Text
                    commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                    commandValues10.Connection = conn

                    Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                    Dim dtValues10 As New DataTable
                    dtValues10.Load(drValues10)

                    If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)

                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                        ''''''''' 31.10.17

                        For Each row As DataRow In dtValues3.Rows

                            Dim updateval As Decimal = 0.0
                            updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                            'Dim commandVal4 As MySqlCommand = New MySqlCommand
                            'commandVal4.CommandType = CommandType.Text
                            'commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            'commandVal4.Parameters.Clear()

                            'commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                            ''commandVal4.Parameters.AddWithValue("@Val", updateval)

                            'commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                            'commandVal4.Connection = conn
                            'commandVal4.ExecuteScalar()

                            'commandVal4.Dispose()

                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()

                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()

                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17

                        Next row

                        commandValues3.Dispose()




                        '''''''''''''''''''' for the last recrd


                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            'End If
                        End If

                        '''''''''''''''''' for the last record


                    ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)


                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                        ''''''''' 31.10.17
                        For Each row As DataRow In dtValues3.Rows

                            Dim updateval As Decimal = 0.0
                            updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")

                            'Dim commandVal4 As MySqlCommand = New MySqlCommand
                            'commandVal4.CommandType = CommandType.Text
                            'commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            'commandVal4.Parameters.Clear()

                            'commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            ''commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                            ''commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear"))
                            'commandVal4.Parameters.AddWithValue("@Val", updateval)
                            'commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                            'commandVal4.Connection = conn
                            'commandVal4.ExecuteScalar()

                            'commandVal4.Dispose()



                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()
                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()
                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17
                        Next row
                        commandValues3.Dispose()


                        '''''''''''''''''''' for the last recrd
                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            dtLastVal.Dispose()
                            commandLastVal.Dispose()

                            'End If
                        End If
                        commandSumMonthYear1.Dispose()
                        dtSumMonthYear1.Dispose()
                        '''''''''''''''''' for the last record
                    End If
                    commandValues1.Dispose()
                    commandValues10.Dispose()
                    dtValues1.Dispose()
                    dtValues10.Dispose()

                End If
            End If



            ''''''''''''''''''''''''''''''''''''''''

            ''''''''''''''' 15.07

            '' update for Fixd Value
            If txtComputationMethod1.Text = "Fixed Contract Value" Then
                Dim dblTotalValue As Decimal = 0.0
                Dim dbldiff As Decimal = 0.0

                Dim rcnoAdjusted As Integer = 0
                Dim ValueAdjusted As Decimal = 0.0

                Dim commandFixedValue As MySqlCommand = New MySqlCommand

                commandFixedValue.CommandType = CommandType.Text
                commandFixedValue.CommandText = "SELECT sum(value) as totalvalue FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y'"
                commandFixedValue.Connection = conn

                Dim drFixedValue As MySqlDataReader = commandFixedValue.ExecuteReader()
                Dim dtFixedValue As New DataTable
                dtFixedValue.Load(drFixedValue)

                dblTotalValue = Convert.ToDouble(dtFixedValue.Rows(0)("totalvalue").ToString)


                'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                '    dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '    dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                'End If

                'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '    dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                'End If
                '''''''''''''''


                Dim commandAdjustLastRecord As MySqlCommand = New MySqlCommand
                commandAdjustLastRecord.CommandType = CommandType.Text
                commandAdjustLastRecord.CommandText = "select rcno, Value from tbwserviceschedule  where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y' order by ServiceDate desc limit 1"
                commandAdjustLastRecord.Connection = conn

                Dim drAdjustLastRecord As MySqlDataReader = commandAdjustLastRecord.ExecuteReader()
                Dim dtAdjustLastRecord As New DataTable
                dtAdjustLastRecord.Load(drAdjustLastRecord)


                If dtAdjustLastRecord.Rows.Count > 0 Then

                    rcnoAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("rcno").ToString)
                    ValueAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("Value").ToString)
                End If
                ''''''''''''''''''''

                '''''''''''''''''''''''
                Dim AdjustValue As Decimal = 0.0
                'AdjustValue = ValueAdjusted - dbldiff

                'If dbldiff > 0 Then
                '    AdjustValue = ValueAdjusted - dbldiff
                'Else
                '    AdjustValue = ValueAdjusted + dbldiff
                'End If

                AdjustValue = ValueAdjusted + dbldiff

                Dim commandAdjustLastRec As MySqlCommand = New MySqlCommand
                commandAdjustLastRec.CommandType = CommandType.Text

                Dim qryT As String = "UPDATE tbwserviceschedule SET  Value = " & AdjustValue & " where rcno = " & rcnoAdjusted

                commandAdjustLastRec.CommandText = qryT
                commandAdjustLastRec.Parameters.Clear()
                commandAdjustLastRec.Connection = conn
                commandAdjustLastRec.ExecuteNonQuery()

                commandAdjustLastRecord.Dispose()
                commandAdjustLastRec.Dispose()


            End If

            ''''''''''''''''''''''''
            '' update for fixed value
            '''''''''''''''''''''''''''''''''''''''
            If txtComputationMethod1.Text = "Monthly" And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                Dim commandValues1 As MySqlCommand = New MySqlCommand

                commandValues1.CommandType = CommandType.Text
                commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                commandValues1.Connection = conn

                Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                Dim dtValues1 As New DataTable
                dtValues1.Load(drValues1)

                If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then


                    '''' Monthly and higher

                    Dim commandValues10 As MySqlCommand = New MySqlCommand

                    commandValues10.CommandType = CommandType.Text
                    commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                    commandValues10.Connection = conn

                    Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                    Dim dtValues10 As New DataTable
                    dtValues10.Load(drValues10)

                    If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        'commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"

                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)


                        ''''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                        ''''''''' 31.10.17


                        For Each row As DataRow In dtValues3.Rows

                            Dim commandVal4 As MySqlCommand = New MySqlCommand
                            commandVal4.CommandType = CommandType.Text
                            commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandVal4.Parameters.Clear()

                            commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            'commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                            commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                            commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))
                            commandVal4.Connection = conn
                            commandVal4.ExecuteScalar()
                            commandVal4.Dispose()

                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()

                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()

                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If


                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17
                        Next row

                        commandValues3.Dispose()

                        '''''''''''''''''''' for the last recrd


                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)


                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()

                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()

                            commandupdateAddDiff.Dispose()
                            'End If
                        End If

                        '''''''''''''''''' for the last record

                    ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim commandValues2 As MySqlCommand = New MySqlCommand

                        commandValues2.CommandType = CommandType.Text
                        commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues2.Connection = conn

                        Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                        Dim dtValues2 As New DataTable
                        dtValues2.Load(drValues2)

                        Dim ldistinctmonthyear As Integer

                        ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        '''''''''''''''''''''''''''''''''''''
                        Dim commandValues3 As MySqlCommand = New MySqlCommand

                        commandValues3.CommandType = CommandType.Text
                        'commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"

                        commandValues3.Connection = conn

                        Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                        Dim dtValues3 As New DataTable
                        dtValues3.Load(drValues3)

                        '''''''' 31.10.17
                        Dim lrcno As Long
                        Dim lmonthear As String

                        lrcno = 0
                        lmonthear = ""

                        lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                        lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                        ''''''''' 31.10.17
                        For Each row As DataRow In dtValues3.Rows

                            Dim commandVal4 As MySqlCommand = New MySqlCommand
                            commandVal4.CommandType = CommandType.Text
                            commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandVal4.Parameters.Clear()

                            commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            'commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                            commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear"))

                            commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                            commandVal4.Connection = conn
                            commandVal4.ExecuteScalar()

                            commandVal4.Dispose()

                            ''''''''' 31.10.17
                            If lmonthear <> row("MonthYear") Then

                                Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                commandSumMonthYear.CommandType = CommandType.Text
                                commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                commandSumMonthYear.Connection = conn

                                Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                Dim dtSumMonthYear As New DataTable
                                dtSumMonthYear.Load(drSumMonthYear)
                                Dim monthyearsum As Decimal = 0.0

                                monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                    'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                    Dim addiff As Decimal = 0.0
                                    addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                    ' Retrive the last value for the month

                                    Dim commandLastVal As MySqlCommand = New MySqlCommand

                                    commandLastVal.CommandType = CommandType.Text
                                    commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                    commandLastVal.Connection = conn

                                    Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                    Dim dtLastVal As New DataTable
                                    dtLastVal.Load(drLastVal)


                                    addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                    ' Retrive the last value for the month

                                    Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                    commandupdateAddDiff.CommandType = CommandType.Text
                                    commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                    commandupdateAddDiff.Parameters.Clear()

                                    commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                    commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                    commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                    commandupdateAddDiff.Connection = conn
                                    commandupdateAddDiff.ExecuteScalar()

                                    commandupdateAddDiff.Dispose()
                                    'End If
                                End If

                                lrcno = row("Rcno")
                                lmonthear = row("MonthYear")
                            Else
                                lrcno = row("Rcno")
                            End If

                            ''''''''' 31.10.17
                        Next row
                        commandValues3.Dispose()

                        '''''''''''''''''''' for the last recrd

                        Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                        commandSumMonthYear1.CommandType = CommandType.Text
                        commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                        commandSumMonthYear1.Connection = conn

                        Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                        Dim dtSumMonthYear1 As New DataTable
                        dtSumMonthYear1.Load(drSumMonthYear1)
                        Dim monthyearsum1 As Decimal = 0.0

                        monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                        If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                            'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                            Dim addiff As Decimal = 0.0
                            addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                            ' Retrive the last value for the month

                            Dim commandLastVal As MySqlCommand = New MySqlCommand

                            commandLastVal.CommandType = CommandType.Text
                            commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                            commandLastVal.Connection = conn

                            Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                            Dim dtLastVal As New DataTable
                            dtLastVal.Load(drLastVal)

                            addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                            ' Retrive the last value for the month

                            Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                            commandupdateAddDiff.CommandType = CommandType.Text
                            commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                            commandupdateAddDiff.Parameters.Clear()
                            commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                            commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                            commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                            commandupdateAddDiff.Connection = conn
                            commandupdateAddDiff.ExecuteScalar()
                            commandupdateAddDiff.Dispose()
                            'End If
                        End If

                        '''''''''''''''''' for the last record
                    End If

                End If
            End If

            ''''''''''''''''''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()

            command1.Dispose()
            dtservicecontractDet.Dispose()

            SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

            SqlDSServiceSchedule.DataBind()
            grvschedule.DataSourceID = "SqlDSServiceSchedule"
            grvschedule.DataBind()
            'txtTotalRecords.Text = grvschedule.Rows.Count
        Catch ex As Exception
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "ReCalculateValues", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        Try
            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "10", txtContractNo.Text)

            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnGenerateServiceSchedule_Click", "btnBack-1", txtContractNo.Text)

            If txtWindowsSVCAutoServiceSchedule.Text = False Then
                DeleteBatchNo()
            End If

            Session.Remove("servstart")

            Session("contractno") = txtContractNo.Text

            Session("serviceschedulefrom") = "contract"
            Session("accountid") = txtAccountId.Text
            Session("custname") = txtCustName.Text


            '24.08.21

            Session("industry") = txtIndustrySession.Text
            Session("marketsegmentidsvc") = txtMarketSegmentSession.Text
            Session("contractgroup") = txtContractGroupSession.Text
            Session("companygroup") = txtCompanyGroupSession.Text
            Session("salesman") = txtSalesmanSession.Text

            Session("billaddress1") = txtbilladdress1session.Text
            Session("billstreet") = txtbillstreetsession.Text
            Session("billbuilding") = txtbillbuildingsession.Text
            Session("billcountry") = txtbillcountrysession.Text
            Session("billpostal") = txtbillpostalsession.Text

            'txtCustName.Text = Session("custname")
            txtContactPersonsession.Text = Session("contactperson")
            txtConPerMobilesession.Text = Session("conpermobile")
            txtAccCodesession.Text = Session("acctcode")
            txtTelephonesession.Text = Session("telephone")
            txtFaxsession.Text = Session("fax")
            txtPostalsession.Text = Session("offpostal")
            txtOfficeAddresssession.Text = Session("sevaddress")
            ddlLocateGrpsession.Text = Session("locategrp")
            ddlSalesmansession.Text = Session("salesman")
            txtLocationSession.Text = Session("location")


            '24.08.21
            Response.Redirect("Contract.aspx", False)

        Catch ex As Exception
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE_NEW - " + Session("UserID"), "btnBack_Click", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub


    Protected Sub grvschedule_RowDataBound1(sender As Object, e As GridViewRowEventArgs) Handles grvschedule.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            Dim PH As String = e.Row.Cells(4).Text.Trim
            If String.IsNullOrEmpty(PH) = True Or PH = "&nbsp;" Then
                'e.Row.BackColor = Color.Brown
            Else
                e.Row.ForeColor = Color.Red
            End If

            tot = tot + Convert.ToDecimal(e.Row.Cells(8).Text.Trim)
            txtTotalServiceValue.Text = tot.ToString()
        End If


        If e.Row.RowType = DataControlRowType.DataRow Then

            ' Delete

            For Each cell As DataControlFieldCell In e.Row.Cells
                ' check all cells in one row
                For Each control As Control In cell.Controls

                    Dim button As ImageButton = TryCast(control, ImageButton)
                    If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                        'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                        button.OnClientClick = "Confirm()"
                    End If
                Next control
            Next cell

        End If


        'If e.Row.RowType = DataControlRowType.DataRow Then

        '    tot = tot + Convert.ToDecimal(e.Row.Cells(7).Text.Trim)
        '    txtTotalServiceValue.Text = tot.ToString()
        'End If


    End Sub

   

    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click
        If String.IsNullOrEmpty(txtContractNo.Text) = False Then
            Session("contractno") = txtContractNo.Text

            ''''''''''''''''''''''''''''''
            'Session("gridsql") = txt.Text
            'Session("rcno") = txtRcno.Text
            'Session("accountid") = txtAccountIdSearch.Text
        End If


        Session("contractdetailfrom") = "contract"
        Response.Redirect("RV_ContractServiceSchedule.aspx")
    End Sub

    Public Sub InsertIntoTblServiceEventLog(LoginID As String, events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblserviceEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", LoginID)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()

        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            'InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "InsertIntoTblServiceEventLog", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub

    Protected Sub btnConfirmYes_Click(sender As Object, e As EventArgs) Handles btnConfirmYes.Click


        If txtFixedContinuous.Text = "FIXED" Then
            Dim conn1 As MySqlConnection = New MySqlConnection(constr)
            conn1.Open()

            Dim commandGST As MySqlCommand = New MySqlCommand
            commandGST.CommandType = CommandType.Text
            commandGST.CommandText = "SELECT GST FROM tblContract where ContractNo='" & txtContractNo.Text & "'"
            commandGST.Connection = conn1

            Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
            Dim dtGST As New DataTable
            dtGST.Load(drGST)


            If dtGST.Rows.Count > 0 Then
                If dtGST.Rows(0)("GST").ToString = "P" Then

                    If txtnormalorregenerateschedule.Text = "normalschedule" Then

                        lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
                        conn1.Close()
                        conn1.Dispose()
                        dtGST.Dispose()
                        drGST.Close()
                        commandGST.Dispose()
                        Exit Sub
                    Else
                        conn1.Close()
                        conn1.Dispose()
                        dtGST.Dispose()
                        drGST.Close()
                        commandGST.Dispose()
                    End If

                End If
            End If
            '  End If

            conn1.Close()
            conn1.Dispose()
            dtGST.Dispose()
            drGST.Close()
            commandGST.Dispose()

        End If

        'Dim confirmValue As String
        'confirmValue = ""

        'confirmValue = Request.Form("confirm_value")
        'If Right(confirmValue, 3) = "Yes" Then

        ' System.Threading.Thread.Sleep(5000)
        ' Context.ApplicationInstance.CompleteRequest()

        'generateschedule()

        GenerateScheduleNewWS()

        'System.Threading.Thread.ResetAbort()
        'Context.ApplicationInstance.CompleteRequest()

        mdlPopupMsg.Show()
    End Sub

    Protected Sub btnConfirmOk_Click(sender As Object, e As EventArgs) Handles btnConfirmOk.Click
        btnServiceSchedule.Enabled = True
        btnGenerateServiceSchedule.Enabled = False

        Session("contractno") = txtContractNo.Text

        Session("serviceschedulefrom") = "contract"
        Session("accountid") = txtAccountId.Text
        Session("custname") = txtCustName.Text

       
        btnBack_Click(sender, e)
    End Sub

    Protected Sub btnConfirmDelete_Click(sender As Object, e As EventArgs) Handles btnConfirmDelete.Click
        Try
           
            'Dim btnMore As Button = DirectCast(sender, Button)

            'Dim xrowMore As GridViewRow = CType(btnMore.NamingContainer, GridViewRow)
            'Dim rowindexMore As Integer
            'rowindexMore = xrowMore.RowIndex
            'Dim valrcnoMore As String

            'valrcnoMore = DirectCast(grvschedule.Rows(rowindexMore).FindControl("Label1"), Label).Text


                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text

                Dim qry As String = "Delete from tbwserviceschedule  where rcno= @Rcno"

                command.CommandText = qry
                command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", lblDeleteConfirm.Text)
                command.Connection = conn
                command.ExecuteNonQuery()
                SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

                grvschedule.DataSourceID = "SqlDSServiceSchedule"

                txtTotalRecords.Text = grvschedule.Rows.Count - 1

                conn.Close()
                conn.Dispose()

                command.Dispose()
            lblDeleteConfirm.Text = ""


        Catch ex As Exception
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "btnDeleteGV_Click", ex.Message.ToString, txtContractNo.Text)
            lblAlert.Text = ex.Message.ToString
            Exit Sub
        End Try
    End Sub


    Private Sub PopulateForMonths()
        Try

            TotDetailRecords = 0
            txtMode.Text = "New"
            rowdeleted = False
            gTargetDesc = ""

            Dim startday As Integer
            startday = CDate(txtServStart.Text).Day
            startday = startday - 1
            startday = (-1) * startday

            txtMonthStartDate.Text = CDate(txtServStart.Text).AddDays(startday)

            startday = CDate(txtServEnd.Text).Day
            startday = startday
            startday = (-1) * startday
            txtMonthEndDate.Text = (CDate(txtServEnd.Text).AddMonths(1))
            txtMonthEndDate.Text = CDate(txtMonthEndDate.Text).AddDays(startday)


            'txtFrom.Text = CDate(txtServStart.Text)
            'txtTo.Text = CDate(txtServEnd.Text)

            'If txtFixedContinuous.Text = "FIXED" Then
            '    txtMonths.Visible = False
            '    lblMonths.Visible = False
            'Else
            '    Dim NoofMonth As Integer
            '    NoofMonth = DateDiff(DateInterval.Month, CDate(txtFrom.Text), CDate(txtTo.Text))
            '    txtMonths.Text = Convert.ToInt32(NoofMonth)

            'End If


            ''

            'Start: Scheduling

            Dim conn As MySqlConnection = New MySqlConnection(constr)
            conn.Open()

            Dim command3 As MySqlCommand = New MySqlCommand
            command3.CommandType = CommandType.Text

            command3.CommandText = "DELETE from tbwserviceschedule where ContractNo= @ContractNo"
            command3.Parameters.Clear()

            command3.Parameters.AddWithValue("@ContractNo", txtContractNo.Text.Trim)
            command3.Connection = conn
            command3.ExecuteNonQuery()

            'conn.Close()
            command3.Dispose()



            '17.10.20

            Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
            commandServiceRecordMasterSetup.CommandType = CommandType.Text
            commandServiceRecordMasterSetup.CommandText = "SELECT WindowsSVCAutoServiceSchedule  FROM tblservicerecordmastersetup"
            commandServiceRecordMasterSetup.Connection = conn

            Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
            Dim dtServiceRecordMasterSetup As New DataTable
            dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

            txtWindowsSVCAutoServiceSchedule.Text = dtServiceRecordMasterSetup.Rows(0)("WindowsSVCAutoServiceSchedule")

            'conn.Close()
            'conn.Dispose()
            commandServiceRecordMasterSetup.Dispose()
            '17.10.20
            Dim noOfInterval As Integer
            Dim tempStartDate, startDate As Date
            Dim isEnd As Boolean
            Dim dayofWeek, holiday As String, serviceDate As Date
            Dim Frequency As String

            Dim IsWeekly As String
            IsWeekly = "N"

            tempStartDate = txtServStart.Text
            txtBatchNo.Text = (txtContractNo.Text + Now()).Trim

            Dim d As Date
            'Dim strdate As Date
            If Date.TryParseExact(txtServStart.Text, "dd/MM/yyyy", Globalization.CultureInfo.InvariantCulture, Globalization.DateTimeStyles.None, d) Then
                tempStartDate = d.ToShortDateString
            End If

            ''



            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = "SELECT ContractNo, NoOfInterval, Frequency, ServiceID, ServiceDesc, Value, OrigCode, LocationID, ServiceName, Address1, LocateGRP, ServiceLocationGroup, Salesman FROM tblcontractdet where ContractNo ='" & txtContractNo.Text & "'"
            command1.Connection = conn

            Dim drservicecontractDet As MySqlDataReader = command1.ExecuteReader()
            Dim dtservicecontractDet As New DataTable
            dtservicecontractDet.Load(drservicecontractDet)

            gproductService = ""
            gserviceValue = 0
            gSQLID = 0
            Dim isLaterThanEndDate As Boolean
            gActive = "Y"
            ''

            '''''''''''''''''''

            Dim commandPSV As MySqlCommand = New MySqlCommand
            commandPSV.CommandType = CommandType.Text
            commandPSV.CommandText = "SELECT count(rcno) as IsPSV FROM tblcontractdet where Value > 0.00 and ContractNo ='" & txtContractNo.Text & "'"
            commandPSV.Connection = conn

            Dim drservicecontractDetPSV As MySqlDataReader = commandPSV.ExecuteReader()
            Dim dtservicecontractDetPSV As New DataTable
            dtservicecontractDetPSV.Load(drservicecontractDetPSV)



            ''''''''''''''''''
            'Dim IsPerServiceValue As String
            'Dim PerServiceValue As Decimal
            'IsPerServiceValue = "N"
            'PerServiceValue = 0.0

            'PerServiceValue = dtservicecontractDet.Rows(0)("Value").ToString()

            Dim IsPerServiceValue As String
            Dim PerServiceValue As Long
            IsPerServiceValue = "N"
            PerServiceValue = 0

            PerServiceValue = dtservicecontractDetPSV.Rows(0)("IsPSV").ToString()

            If PerServiceValue > 0 Then
                IsPerServiceValue = "Y"
            Else
                IsPerServiceValue = "N"
            End If



            '' start if PersErviceValue is N

            If IsPerServiceValue = "N" Then

                For i = 0 To dtservicecontractDet.Rows.Count - 1

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text
                    command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    command2.Connection = conn

                    Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                    Dim dttblservicecontractFrequency As New DataTable
                    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                    noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                    gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                    command2.Dispose()

                    If noOfInterval = 0 Then Continue For

                    gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                    gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                    gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                    gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                    gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()

                    gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                    gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                    gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                    gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()
                    gServiceLocationGroup = dtservicecontractDet.Rows(i)("ServiceLocationGroup").ToString()
                    gSalesman = dtservicecontractDet.Rows(i)("Salesman").ToString()

                    'Target

                    gtargetID_SR = ""
                    gTargetDesc = ""
                    Dim lreason As String
                    Dim commandTarget As MySqlCommand = New MySqlCommand
                    commandTarget.CommandType = CommandType.Text

                    commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    commandTarget.Connection = conn

                    Dim laction As String

                    'Dim gtargetID_SR As String

                    laction = ""
                    lreason = ""
                    gtargetID_SR = ""

                    Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                    Dim dtTarget As New DataTable
                    dtTarget.Load(drTarget)

                    If dtTarget.Rows.Count Then
                        For t = 0 To dtTarget.Rows.Count - 1
                            If lreason <> "" Then lreason = lreason & vbCrLf
                            lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
                            If gtargetID_SR <> "" Then gtargetID_SR = gtargetID_SR & ", "
                            'gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetDesc").ToString()
                            gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetID").ToString()  'modified on 02.05.17
                        Next
                    End If


                    'Target

                    ''''''''''''''''''''''''''FREQUENCY ''''''''''''''''''''''''''''''''

                    '' Daily
                    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "DAILY" Then
                        'dtservicecontractDet.Rows(0)("Frequency").ToString()
                        For j = 1 To noOfInterval
                            serviceDate = tempStartDate.AddDays((j - 1))
                            'dgv24SCSchedule.Rows.Add(1)
                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                            holiday = ""


                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            AddNewRowSch()

                        Next

                        ''End:Daily


                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "ADHOC" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "PER-SERVICE" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SVC CALL" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOLLOW UP" Then
                        For j = 1 To noOfInterval
                            serviceDate = tempStartDate.AddDays((j - 1))

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                            holiday = ""


                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            AddNewRowSch()

                        Next

                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                        IsWeekly = "Y"
                        isLaterThanEndDate = False
                        Dim daysAdded As Integer = 0
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If



                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'AddNewRowSch()

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""
                            Next
                        Next

                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                        Dim daysAdded As Integer = 0
                        isLaterThanEndDate = False

                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                    serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            serviceDate = serviceDate.AddDays(1)
                                            daysAdded = daysAdded + 1
                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    Else
                                        daysAdded = daysAdded + 1
                                    End If
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                    'isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    '    'serviceDate = CDate(txtTo.Text)
                                    '    isLaterThanEndDate = True
                                    'End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    isLaterThanEndDate = False
                                    If serviceDate > CDate(txtTo.Text) Then
                                        'serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    Else
                                        AddNewRowSch()
                                    End If

                                    'AddNewRowSch()

                                    holiday = ""
                                End If
                            Next

                        Next
                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(14 * (j - 1))
                                    If weekno = 2 Then startDate = startDate.AddDays(7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate

                                    isLaterThanEndDate = False
                                    If serviceDate > CDate(txtTo.Text) Then
                                        serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()

                                    holiday = ""

                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then
                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(21 * (j - 1))
                                    If weekno = 2 Then
                                        startDate = startDate.AddDays(7)
                                    ElseIf weekno = 3 Then
                                        startDate = startDate.AddDays(14)
                                    End If

                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                    isLaterThanEndDate = False
                                    If serviceDate > CDate(txtTo.Text) Then
                                        serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    End If


                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()


                                    holiday = ""
                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                        'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                        Dim firstMonthHasRec As Boolean = True
                        Dim fromMonth = 1
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne:
                        For j = fromMonth To noOfInterval + 1

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'startDate = tempStartDate.AddMonths(j - 1)

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                                End If


                                Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                                If dayNo > 0 Then
                                    'day no
                                    If startDate.Day <> dayNo Then
                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            ' startDate = tempStartDate.AddMonths(j - 1)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1))
                                            End If
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                    startDate = startDate.AddDays((weekno - 1) * 7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                                serviceDate = startDate

                                ''''''''''''''''''''

                                'firstDayOfMonth = CDate("01/" & serviceDate.ToString("MM/yyyy"))
                                '''''''''''''''''''''''

                                If j = 1 Then
                                    If serviceDate < tempStartDate Then
                                        'noOfInterval = noOfInterval + 1
                                        'weekno = weekno + 1
                                        'fromMonth = 2
                                        'GoTo IntervalAddOne
                                        GoTo nextrec
                                    End If
                                End If

                                '''''''''''''''''''''
                                If j = 1 Then
                                    If dayNo > 0 Then
                                        If dayNo < tempStartDate.Day Then
                                            noOfInterval = noOfInterval + 1
                                            fromMonth = 2
                                            j = j + 1
                                            GoTo IntervalAddOne
                                        End If
                                    End If
                                End If
                                '''''''''''''''''''''

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                    'GoTo nextrec
                                End If

                                'serviceDate = startDate
                                'txtServiceDate.Text = startDate.ToString()

                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                'gServiceDate = serviceDate


                                'Dim gServiceDatestr As String
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                'gServiceDate = gServiceDatestr
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                                '    RowIndexSch = j - 2
                                'Else
                                '    RowIndexSch = j - 1
                                'End If
                                AddNewRowSch()

nextrec:
                            Next

                        Next


                        ''

                        '14.11.19

                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                        Dim interval1 As Integer = 0

                        'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                        'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                        Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                            Case "BI-MONTHLY"
                                interval1 = 2
                            Case "QUARTERLY"
                                interval1 = 3
                            Case "HALF-ANNUALLY"
                                interval1 = 6
                            Case "THRICE-ANNUALLY"
                                interval1 = 4
                            Case "ANNUALLY"
                                interval1 = 12
                            Case "BI-ANNUALLY"
                                interval1 = 24
                        End Select


                        If interval1 = 0 Then Continue For
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                End If

                                Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                                Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                                If dayNo > 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        startDate = startDate.AddMonths(monthNo - 1)
                                    End If

                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                    If startDate.Day <> dayNo Then

                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True

                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                            End If

                                            startDate = startDate.AddMonths(monthNo - 1)
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                    'Start: 14.11.19
                                ElseIf dayNo = 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        startDate = startDate.AddMonths(monthNo - 1)
                                    End If

                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                    'test

                                    If weekno.ToUpper = "L" Then
                                        'startDate = startDate.AddMonths(interval1).AddDays(-1)
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(-1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    Else

                                        If j <> 1 Then
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        Else
                                            'Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                            Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno)) * 7)

                                            'If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            '    isEnd = False
                                            '    Do Until isEnd = True
                                            '        weekNoDate = weekNoDate.AddDays(1)
                                            '        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            '            isEnd = True
                                            '            Exit Do
                                            '        End If
                                            '    Loop
                                            'End If

                                            If Date.Compare(startDate, weekNoDate) > 0 Then
                                                'startDate = firstDayOfMonth.AddMonths(1)
                                                startDate = firstDayOfMonth.AddMonths(monthNo - 1)
                                                firstDayOfMonth = startDate
                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                            End If
                                        End If
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    End If
                                    'test


                                    'If startDate.Day <> dayNo Then

                                    'isEnd = False
                                    'For l = 1 To totalDays - 1
                                    '    startDate = startDate.AddDays(1)
                                    '    If startDate.Day = dayNo Then
                                    '        isEnd = True

                                    '        Exit For
                                    '    End If
                                    'Next
                                    'If isEnd = False Then
                                    '    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                    '    If j = 1 Then
                                    '        'startDate = tempStartDate
                                    '        startDate = tempStartDate.AddMonths(monthNo - 1)
                                    '    Else
                                    '        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                    '    End If


                                    '    'startDate = startDate.AddMonths(monthNo - 1)
                                    '    startDate = startDate.AddMonths(monthNo)
                                    '    If startDate.Month = monthEndDate.Month Then
                                    '        startDate = monthEndDate
                                    '    Else
                                    '        If startDate.Day > dayNo Then
                                    '            Continue For
                                    '        Else
                                    '            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                    '            If IsDate("30" & monthStr) Then
                                    '                startDate = CDate("30" & monthStr)
                                    '            ElseIf IsDate("29" & monthStr) Then
                                    '                startDate = CDate("29" & monthStr)
                                    '            ElseIf IsDate("28" & monthStr) Then
                                    '                startDate = CDate("28" & monthStr)
                                    '            End If
                                    '        End If
                                    '    End If
                                    'End If
                                    'End If

                                    'end: 14.11.19
                                Else
                                    If weekno.ToUpper = "L" Then
                                        startDate = startDate.AddMonths(interval1).AddDays(-1)
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(-1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    Else

                                        If j <> 1 Then
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        Else
                                            Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                            If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                                isEnd = False
                                                Do Until isEnd = True
                                                    weekNoDate = weekNoDate.AddDays(1)
                                                    If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                        isEnd = True
                                                        Exit Do
                                                    End If
                                                Loop
                                            End If

                                            If Date.Compare(startDate, weekNoDate) > 0 Then
                                                startDate = firstDayOfMonth.AddMonths(1)
                                                firstDayOfMonth = startDate
                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                            End If
                                        End If
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    End If

                                End If
                                serviceDate = startDate
                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                                If dayNo > 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        firstDayOfMonth = gServiceDate  ''27.06.18
                                    End If
                                End If

                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                                RowIndexSch = j - 1

                                If isLaterThanEndDate = False Then
                                    AddNewRowSch()
                                End If
                                'holiday = ""

                            Next
                        Next
                        '14.11.19


                        'start:22.12.19

                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                        Dim interval1 As Integer = 0

                        'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                        'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                        Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                            Case "BI-MONTHLY"
                                interval1 = 2
                            Case "QUARTERLY"
                                interval1 = 3
                            Case "HALF-ANNUALLY"
                                interval1 = 6
                            Case "THRICE-ANNUALLY"
                                interval1 = 4
                            Case "ANNUALLY"
                                interval1 = 12
                            Case "BI-ANNUALLY"
                                interval1 = 24
                        End Select


                        If interval1 = 0 Then Continue For
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                End If

                                Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                                Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                                If dayNo > 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        startDate = startDate.AddMonths(monthNo - 1)
                                    End If

                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                    If startDate.Day <> dayNo Then

                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True

                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                            End If

                                            startDate = startDate.AddMonths(monthNo - 1)
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                    'Start: 14.11.19
                                ElseIf dayNo = 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        startDate = startDate.AddMonths(monthNo - 1)
                                    End If

                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                    'test

                                    If weekno.ToUpper = "L" Then
                                        'startDate = startDate.AddMonths(interval1).AddDays(-1)
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(-1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    Else

                                        If j <> 1 Then
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        Else
                                            'Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                            Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno)) * 7)

                                            'If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            '    isEnd = False
                                            '    Do Until isEnd = True
                                            '        weekNoDate = weekNoDate.AddDays(1)
                                            '        If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            '            isEnd = True
                                            '            Exit Do
                                            '        End If
                                            '    Loop
                                            'End If

                                            If Date.Compare(startDate, weekNoDate) > 0 Then
                                                'startDate = firstDayOfMonth.AddMonths(1)
                                                startDate = firstDayOfMonth.AddMonths(monthNo - 1)
                                                firstDayOfMonth = startDate
                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                            End If
                                        End If
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    End If
                                    'test


                                    'If startDate.Day <> dayNo Then

                                    'isEnd = False
                                    'For l = 1 To totalDays - 1
                                    '    startDate = startDate.AddDays(1)
                                    '    If startDate.Day = dayNo Then
                                    '        isEnd = True

                                    '        Exit For
                                    '    End If
                                    'Next
                                    'If isEnd = False Then
                                    '    '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                    '    If j = 1 Then
                                    '        'startDate = tempStartDate
                                    '        startDate = tempStartDate.AddMonths(monthNo - 1)
                                    '    Else
                                    '        startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                    '    End If


                                    '    'startDate = startDate.AddMonths(monthNo - 1)
                                    '    startDate = startDate.AddMonths(monthNo)
                                    '    If startDate.Month = monthEndDate.Month Then
                                    '        startDate = monthEndDate
                                    '    Else
                                    '        If startDate.Day > dayNo Then
                                    '            Continue For
                                    '        Else
                                    '            Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                    '            If IsDate("30" & monthStr) Then
                                    '                startDate = CDate("30" & monthStr)
                                    '            ElseIf IsDate("29" & monthStr) Then
                                    '                startDate = CDate("29" & monthStr)
                                    '            ElseIf IsDate("28" & monthStr) Then
                                    '                startDate = CDate("28" & monthStr)
                                    '            End If
                                    '        End If
                                    '    End If
                                    'End If
                                    'End If

                                    'end: 14.11.19
                                Else
                                    If weekno.ToUpper = "L" Then
                                        startDate = startDate.AddMonths(interval1).AddDays(-1)
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(-1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    Else

                                        If j <> 1 Then
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        Else
                                            Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                            If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                                isEnd = False
                                                Do Until isEnd = True
                                                    weekNoDate = weekNoDate.AddDays(1)
                                                    If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                        isEnd = True
                                                        Exit Do
                                                    End If
                                                Loop
                                            End If

                                            If Date.Compare(startDate, weekNoDate) > 0 Then
                                                startDate = firstDayOfMonth.AddMonths(1)
                                                firstDayOfMonth = startDate
                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                            End If
                                        End If
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    End If

                                End If
                                serviceDate = startDate
                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                                If dayNo > 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        firstDayOfMonth = gServiceDate  ''27.06.18
                                    End If
                                End If

                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                                RowIndexSch = j - 1
                                AddNewRowSch()

                                'holiday = ""

                            Next
                        Next
                        'end:22.12.19

                        'ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                        Dim interval1 As Integer = 0

                        'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                        'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                        Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                            Case "BI-MONTHLY"
                                interval1 = 2
                            Case "QUARTERLY"
                                interval1 = 3
                            Case "HALF-ANNUALLY"
                                interval1 = 6
                            Case "THRICE-ANNUALLY"
                                interval1 = 4
                            Case "ANNUALLY"
                                interval1 = 12
                            Case "BI-ANNUALLY"
                                interval1 = 24
                        End Select


                        If interval1 = 0 Then Continue For
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                End If

                                Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                                Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                                If dayNo > 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        startDate = startDate.AddMonths(monthNo - 1)
                                    End If

                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                    If startDate.Day <> dayNo Then

                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True



                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                            End If

                                            startDate = startDate.AddMonths(monthNo - 1)
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    If weekno.ToUpper = "L" Then
                                        startDate = startDate.AddMonths(interval1).AddDays(-1)
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(-1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    Else

                                        If j <> 1 Then
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        Else
                                            Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                            If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                                isEnd = False
                                                Do Until isEnd = True
                                                    weekNoDate = weekNoDate.AddDays(1)
                                                    If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                        isEnd = True
                                                        Exit Do
                                                    End If
                                                Loop
                                            End If

                                            If Date.Compare(startDate, weekNoDate) > 0 Then
                                                startDate = firstDayOfMonth.AddMonths(1)
                                                firstDayOfMonth = startDate
                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                            End If
                                        End If
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    End If

                                End If
                                serviceDate = startDate
                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")

                                If dayNo > 0 And monthNo > 0 Then
                                    If j = 1 Then
                                        firstDayOfMonth = gServiceDate  ''27.06.18
                                    End If
                                End If

                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                                RowIndexSch = j - 1
                                AddNewRowSch()

                                'holiday = ""

                            Next
                        Next
                        ''
                    End If
                Next

                'conn.Close()

                'Exit Sub

                '2. (IsPerServiceValue = "N")

                'Start: for Quarterly / Half Annually / Annually

                Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
                commandDailyWeekly.CommandType = CommandType.Text
                commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
                commandDailyWeekly.Connection = conn

                Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
                Dim dtContractDailyWeekly As New DataTable
                dtContractDailyWeekly.Load(drContractDailyWeekly)
                Dim lServiceVal As Decimal

                If Val(dtContractDailyWeekly.Rows(0)("dailyweekly").ToString) = 0 Then

                    'start quoted :16.12.20
                    Dim commandDailyWeeklyUpd As MySqlCommand = New MySqlCommand
                    commandDailyWeeklyUpd.CommandType = CommandType.Text
                    commandDailyWeeklyUpd.CommandText = "SELECT count((ServiceDate)) as DW FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                    commandDailyWeeklyUpd.Connection = conn

                    Dim drDailyWeeklyUpd As MySqlDataReader = commandDailyWeeklyUpd.ExecuteReader()
                    Dim dtDailyWeeklyUpd As New DataTable
                    dtDailyWeeklyUpd.Load(drDailyWeeklyUpd)

                    '''
                    Dim commandDailyWeeklyFre As MySqlCommand = New MySqlCommand
                    commandDailyWeeklyFre.CommandType = CommandType.Text
                    commandDailyWeeklyFre.CommandText = "SELECT Frequency FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "'"
                    commandDailyWeeklyFre.Connection = conn

                    Dim drDailyWeeklyUpdFre As MySqlDataReader = commandDailyWeeklyFre.ExecuteReader()
                    Dim dtDailyWeeklyUpdFre As New DataTable
                    dtDailyWeeklyUpdFre.Load(drDailyWeeklyUpdFre)

                    '''

                    'lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)

                    If dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "MONTHLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text)
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "QUARTERLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 3
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "BI-MONTHLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 2
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "HALF-ANNUALLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 6
                    ElseIf dtDailyWeeklyUpdFre.Rows(0)("Frequency").ToString = "ANNUALLY" Then
                        lServiceVal = Convert.ToDouble(txtValPerMnth.Text) * 12
                    Else
                        lServiceVal = Convert.ToDouble(txtAgreeValue.Text) / Val(dtDailyWeeklyUpd.Rows(0)("DW").ToString)
                    End If

                    Dim commandValUpd As MySqlCommand = New MySqlCommand
                    commandValUpd.CommandType = CommandType.Text
                    commandValUpd.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo"
                    commandValUpd.Parameters.Clear()

                    commandValUpd.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                    'commandValUpd.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                    commandValUpd.Parameters.AddWithValue("@Val", Math.Round(lServiceVal, 2))
                    'commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                    commandValUpd.Connection = conn
                    commandValUpd.ExecuteScalar()

                    'end quoted: 16.12.20

                    GoTo EndScheduling

                End If

                'End: for Quarterly / Half Annually / Annually


                Dim conn1 As MySqlConnection = New MySqlConnection(constr)
                conn1.Open()

                Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
                commandMaxSrviceDate.CommandType = CommandType.Text
                commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
                commandMaxSrviceDate.Connection = conn1

                Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
                Dim dtMaxSrviceDate As New DataTable
                dtMaxSrviceDate.Load(drMaxSrviceDate)

                If dtMaxSrviceDate.Rows.Count > 0 Then
                    gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
                End If

                conn1.Close()
                conn1.Dispose()
                'Exit Sub

                '3. (IsPerServiceValue = "N")
                ''''''''''''''''''Start: Previous Dates

                gActive = "N"
                For i = 0 To dtservicecontractDet.Rows.Count - 1

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text

                    command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    command2.Connection = conn

                    Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                    Dim dttblservicecontractFrequency As New DataTable
                    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                    noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                    gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()


                    command2.Dispose()

                    If noOfInterval = 0 Then Continue For

                    gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                    gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                    gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                    gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                    gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                    gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                    gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                    gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                    gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()





                    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                        IsWeekly = "Y"
                        isLaterThanEndDate = False
                        Dim daysAdded As Integer = 0
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (-j))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'AddNewRowSch()

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""
                            Next
                        Next

                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                        Dim daysAdded As Integer = 0
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                    serviceDate = tempStartDate.AddDays(7 * (-j))
                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            serviceDate = serviceDate.AddDays(1)
                                            daysAdded = daysAdded + 1
                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    Else
                                        daysAdded = daysAdded + 1
                                    End If
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                    'isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    '    'serviceDate = CDate(txtTo.Text)
                                    '    isLaterThanEndDate = True
                                    'End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        'serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    Else
                                        AddNewRowSch()
                                    End If

                                    'AddNewRowSch()

                                    holiday = ""
                                End If
                            Next

                        Next
                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(14 * (-j))
                                    If weekno = 2 Then startDate = startDate.AddDays(7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        serviceDate = CDate(txtMonthStartDate.Text)
                                        isLaterThanEndDate = True
                                    End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    If String.IsNullOrEmpty(dow) = False Then
                                        If gdayofWeek1 = dow Then
                                            AddNewRowSch()
                                        End If
                                    Else
                                        AddNewRowSch()
                                    End If
                                    holiday = ""

                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then
                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(21 * (-j))
                                    If weekno = 2 Then
                                        startDate = startDate.AddDays(7)
                                    ElseIf weekno = 3 Then
                                        startDate = startDate.AddDays(14)
                                    End If

                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        serviceDate = CDate(txtMonthStartDate.Text)
                                        isLaterThanEndDate = True
                                    End If


                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()


                                    holiday = ""
                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                        Dim firstMonthHasRec As Boolean = True
                        Dim fromMonth = 1
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne1:
                        For j = fromMonth To noOfInterval + 1

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                                End If

                                Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                                If dayNo > 0 Then
                                    'day no
                                    If startDate.Day <> dayNo Then
                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            ' startDate = tempStartDate.AddMonths(j - 1)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1))
                                            End If
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                    startDate = startDate.AddDays((weekno - 1) * 7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                                serviceDate = startDate
                                'serviceDate = CDate(txtMonthStartDate.Text)


                                'If j = 1 Then
                                '    'If serviceDate < tempStartDate Then
                                '    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                '        noOfInterval = noOfInterval + 1
                                '        fromMonth = 2
                                '        isLaterThanEndDate = True
                                '        'GoTo IntervalAddOne1
                                '    End If
                                'End If


                                If j = 1 Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        'noOfInterval = noOfInterval + 1
                                        'weekno = weekno + 1
                                        'fromMonth = 2
                                        'GoTo IntervalAddOne
                                        GoTo nextrec1
                                    End If
                                End If

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                AddNewRowSch()

nextrec1:
                            Next
                        Next

                    End If
                Next

                '''''''''''''''''''''''END: Previous Dates



                '4. (IsPerServiceValue = "N")

                '''''''''''''''''' START: Next Dates
                tempStartDate = gMaxServiceDate
                gActive = "N"
                isLaterThanEndDate = False
                For i = 0 To dtservicecontractDet.Rows.Count - 1

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text

                    command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    command2.Connection = conn

                    Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                    Dim dttblservicecontractFrequency As New DataTable
                    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                    noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                    gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                    command2.Dispose()

                    If noOfInterval = 0 Then Continue For

                    gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                    gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                    gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                    gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                    gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                    gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                    gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                    gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                    gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()



                    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                        IsWeekly = "Y"
                        Dim daysAdded As Integer = 0
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'AddNewRowSch()

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""
                            Next
                        Next

                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                        Dim daysAdded As Integer = 0
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                    serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            serviceDate = serviceDate.AddDays(1)
                                            daysAdded = daysAdded + 1
                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    Else
                                        daysAdded = daysAdded + 1
                                    End If
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                    'isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    '    'serviceDate = CDate(txtTo.Text)
                                    '    isLaterThanEndDate = True
                                    'End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate > CDate(txtMonthEndDate.Text) Then
                                        'serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    Else
                                        AddNewRowSch()
                                    End If

                                    'AddNewRowSch()

                                    holiday = ""
                                End If
                            Next

                        Next
                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(14 * (j - 1))
                                    If weekno = 2 Then startDate = startDate.AddDays(7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate > CDate(txtMonthEndDate.Text) Then
                                        serviceDate = CDate(txtMonthEndDate.Text)
                                        isLaterThanEndDate = True
                                    End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()

                                    holiday = ""

                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then
                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(21 * (j - 1))
                                    If weekno = 2 Then
                                        startDate = startDate.AddDays(7)
                                    ElseIf weekno = 3 Then
                                        startDate = startDate.AddDays(14)
                                    End If

                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate > CDate(txtMonthEndDate.Text) Then
                                        serviceDate = CDate(txtMonthEndDate.Text)
                                        isLaterThanEndDate = True
                                    End If


                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()


                                    holiday = ""
                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                        'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                        Dim firstMonthHasRec As Boolean = True
                        Dim fromMonth = 1
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne2:
                        For j = fromMonth To noOfInterval + 1

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'startDate = tempStartDate.AddMonths(j - 1)

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                                End If


                                Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                                If dayNo > 0 Then
                                    'day no
                                    If startDate.Day <> dayNo Then
                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            ' startDate = tempStartDate.AddMonths(j - 1)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1))
                                            End If
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                    startDate = startDate.AddDays((weekno - 1) * 7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                                serviceDate = startDate

                                'If j = 1 Then
                                '    If serviceDate < tempStartDate Then
                                '        'If serviceDate < CDate(txtMonthStartDate.Text) Then
                                '        noOfInterval = noOfInterval + 1
                                '        fromMonth = 2
                                '        GoTo IntervalAddOne2


                                '    End If
                                'End If

                                If j = 1 Then
                                    If serviceDate < tempStartDate Then
                                        'noOfInterval = noOfInterval + 1
                                        'weekno = weekno + 1
                                        'fromMonth = 2
                                        'GoTo IntervalAddOne
                                        GoTo nextrec3
                                    End If
                                End If

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If

                                'serviceDate = startDate
                                'txtServiceDate.Text = startDate.ToString()

                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                'gServiceDate = serviceDate


                                'Dim gServiceDatestr As String
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                'gServiceDate = gServiceDatestr
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                                '    RowIndexSch = j - 2
                                'Else
                                '    RowIndexSch = j - 1
                                'End If

                                If (tempStartDate.Month < gServiceDate.Month) Then
                                    GoTo calcval
                                End If

                                AddNewRowSch()
nextrec3:

                            Next
                        Next

                    End If
                Next

                '''''''''''''''''''''''END: Next Dates


calcval:
                '5. (IsPerServiceValue = "N")
                'Start: Calculate Values

                'If txtComputationMethod.Text = "1" Then
                Dim commandValues As MySqlCommand = New MySqlCommand

                commandValues.CommandType = CommandType.Text
                commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
                commandValues.Connection = conn

                Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                Dim dtValues As New DataTable
                dtValues.Load(drValues)

                Dim lTotalServices = dtValues.Rows.Count
                Dim lbillingamount As Double
                Dim lbillingamountTotal As Double

                lbillingamount = 0.0
                lbillingamountTotal = 0.0
                'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

                Dim z As Integer
                z = 0

                Dim lMonthYear As String
                lMonthYear = ""

                Dim lWeekMonthYear As String
                lWeekMonthYear = ""

                For Each row As DataRow In dtValues.Rows

                    If lMonthYear <> row("MonthYear") Then
                        lMonthYear = row("MonthYear")

                        Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                        commandMonthYearCount.CommandType = CommandType.Text
                        commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                        commandMonthYearCount.Connection = conn

                        Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                        Dim dtMonthYearCount As New DataTable
                        dtMonthYearCount.Load(drMonthYearCount)

                        Dim MonthYearCount As String
                        MonthYearCount = dtMonthYearCount.Rows(0)("MY").ToString()

                        lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                    End If


                    Dim commandVal As MySqlCommand = New MySqlCommand
                    commandVal.CommandType = CommandType.Text
                    commandVal.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                    commandVal.Parameters.Clear()

                    commandVal.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                    commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))

                    If z <> (dtValues.Rows.Count - 1) Then
                        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                        If row("Active") = "Y" Then
                            lbillingamountTotal = lbillingamountTotal + Math.Round(lbillingamount, 2) / row("CountDays")
                        End If
                    End If

                    'Else

                    'If txtComputationMethod.Text = "1" Then
                    '    If z = (dtValues.Rows.Count - 1) Then
                    '        commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                    '    End If

                    'Else
                    '    If z = (dtValues.Rows.Count - 1) Then
                    '        commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                    '    End If
                    'End If

                    If txtComputationMethod.Text <> "Monthly" Then
                        If z = (dtValues.Rows.Count - 1) Then
                            'commandVal.Parameters.AddWithValue("@Val", Math.Round((txtAgreeValue.Text - lbillingamountTotal), 2))
                            '25.08
                            commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                            '25.08
                        End If

                    Else
                        If z = (dtValues.Rows.Count - 1) Then
                            commandVal.Parameters.AddWithValue("@Val", Math.Round(lbillingamount, 2) / row("CountDays"))
                        End If
                    End If
                    commandVal.Parameters.AddWithValue("@Rcno", row("Rcno"))

                    commandVal.Connection = conn
                    commandVal.ExecuteScalar()
                    z = z + 1
                    'conn.Close()
                Next row
                'End If

                'End: Calculate Values
            End If   'End if PersErviceValue is N


            '' start if PersErviceValue is Y

            If IsPerServiceValue = "Y" Then

                For i = 0 To dtservicecontractDet.Rows.Count - 1

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text
                    command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    command2.Connection = conn

                    Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                    Dim dttblservicecontractFrequency As New DataTable
                    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                    noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                    gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                    command2.Dispose()

                    If noOfInterval = 0 Then Continue For

                    gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                    gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                    gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                    gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                    gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()

                    gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                    gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                    gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                    gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()
                    gServiceLocationGroup = dtservicecontractDet.Rows(i)("ServiceLocationGroup").ToString()
                    gSalesman = dtservicecontractDet.Rows(i)("Salesman").ToString()

                    'Target

                    gtargetID_SR = ""
                    gTargetDesc = ""
                    Dim lreason As String
                    Dim commandTarget As MySqlCommand = New MySqlCommand
                    commandTarget.CommandType = CommandType.Text

                    commandTarget.CommandText = "SELECT TargetID, TargetDesc  FROM tblContractServingTarget where  targetID is not null and targetID<>''  and SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    commandTarget.Connection = conn

                    Dim laction As String

                    'Dim gtargetID_SR As String

                    laction = ""
                    lreason = ""
                    gtargetID_SR = ""

                    Dim drTarget As MySqlDataReader = commandTarget.ExecuteReader()
                    Dim dtTarget As New DataTable
                    dtTarget.Load(drTarget)

                    If dtTarget.Rows.Count Then
                        For t = 0 To dtTarget.Rows.Count - 1
                            If lreason <> "" Then lreason = lreason & vbCrLf
                            lreason = lreason & dtTarget.Rows(t)("TargetID").ToString() & ":" + dtTarget.Rows(t)("TargetDesc").ToString()
                            If gtargetID_SR <> "" Then gtargetID_SR = gtargetID_SR & ", "
                            'gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetDesc").ToString()
                            gtargetID_SR = gtargetID_SR & dtTarget.Rows(t)("TargetID").ToString()  'modified on 02.05.17
                        Next
                    End If


                    'Target

                    ''''''''''''''''''''''''''FREQUENCY ''''''''''''''''''''''''''''''''

                    '' Daily
                    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "DAILY" Then
                        'dtservicecontractDet.Rows(0)("Frequency").ToString()
                        For j = 1 To noOfInterval
                            serviceDate = tempStartDate.AddDays((j - 1))
                            'dgv24SCSchedule.Rows.Add(1)
                            'rowIndex = dgv24SCSchedule.Rows.Count - 1

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                            holiday = ""


                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            AddNewRowSch()

                        Next

                        ''End:Daily


                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "ADHOC" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "PER-SERVICE" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SVC CALL" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOLLOW UP" Then
                        For j = 1 To noOfInterval
                            serviceDate = tempStartDate.AddDays((j - 1))

                            dayofWeek = ""
                            Select Case pWeekNumber(serviceDate)
                                Case 1
                                    dayofWeek = "1st "
                                Case 2
                                    dayofWeek = "2nd "
                                Case 3
                                    dayofWeek = "3rd "
                                Case 4
                                    dayofWeek = "4th "
                                Case 5
                                    dayofWeek = "5th "
                            End Select
                            dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper
                            holiday = ""


                            gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                            gServiceDatestr = gServiceDate
                            gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                            gdayofWeek = dayofWeek
                            gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                            RowIndexSch = j - 1
                            AddNewRowSch()

                        Next

                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                        IsWeekly = "Y"
                        Dim daysAdded As Integer = 0
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'AddNewRowSch()

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""
                            Next
                        Next

                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                        Dim daysAdded As Integer = 0
                        isLaterThanEndDate = False
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                    serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            serviceDate = serviceDate.AddDays(1)
                                            daysAdded = daysAdded + 1
                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    Else
                                        daysAdded = daysAdded + 1
                                    End If
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                    'isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    '    'serviceDate = CDate(txtTo.Text)
                                    '    isLaterThanEndDate = True
                                    'End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    isLaterThanEndDate = False
                                    If serviceDate > CDate(txtTo.Text) Then
                                        'serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    Else
                                        AddNewRowSch()
                                    End If

                                    'AddNewRowSch()

                                    holiday = ""
                                End If
                            Next

                        Next
                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(14 * (j - 1))
                                    If weekno = 2 Then startDate = startDate.AddDays(7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate

                                    isLaterThanEndDate = False
                                    If serviceDate > CDate(txtTo.Text) Then
                                        serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()

                                    holiday = ""

                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then
                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(21 * (j - 1))
                                    If weekno = 2 Then
                                        startDate = startDate.AddDays(7)
                                    ElseIf weekno = 3 Then
                                        startDate = startDate.AddDays(14)
                                    End If

                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                    isLaterThanEndDate = False
                                    If serviceDate > CDate(txtTo.Text) Then
                                        serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    End If


                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()


                                    holiday = ""
                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                        'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                        Dim firstMonthHasRec As Boolean = True
                        Dim fromMonth = 1
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOneY:
                        For j = fromMonth To noOfInterval + 1

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'startDate = tempStartDate.AddMonths(j - 1)

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                                End If


                                Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                                If dayNo > 0 Then
                                    'day no
                                    If startDate.Day <> dayNo Then
                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            ' startDate = tempStartDate.AddMonths(j - 1)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1))
                                            End If
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                    startDate = startDate.AddDays((weekno - 1) * 7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                                serviceDate = startDate

                                ''''''''''''''''''''

                                'firstDayOfMonth = CDate("01/" & serviceDate.ToString("MM/yyyy"))
                                '''''''''''''''''''''''

                                'If j = 1 Then
                                '    If serviceDate < tempStartDate Then
                                '        noOfInterval = noOfInterval + 1
                                '        fromMonth = 2
                                '        GoTo IntervalAddOneY
                                '    End If
                                'End If

                                If j = 1 Then
                                    If serviceDate < tempStartDate Then
                                        'noOfInterval = noOfInterval + 1
                                        'weekno = weekno + 1
                                        'fromMonth = 2
                                        'GoTo IntervalAddOne
                                        GoTo nextrec4
                                    End If
                                End If

                                '''''''''''''''''''''
                                If j = 1 Then
                                    If dayNo > 0 Then
                                        If dayNo < tempStartDate.Day Then
                                            noOfInterval = noOfInterval + 1
                                            fromMonth = 2
                                            j = j + 1
                                            GoTo IntervalAddOneY
                                        End If
                                    End If
                                End If
                                '''''''''''''''''''''

                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                'serviceDate = startDate
                                'txtServiceDate.Text = startDate.ToString()

                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                'gServiceDate = serviceDate


                                'Dim gServiceDatestr As String
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                'gServiceDate = gServiceDatestr
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                                '    RowIndexSch = j - 2
                                'Else
                                '    RowIndexSch = j - 1
                                'End If
                                AddNewRowSch()
nextrec4:

                            Next
                        Next


                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "QUARTERLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "HALF-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "ANNUALLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-ANNUALLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-MONTHLY" Or txtFrequencyDesc.Text = "QUARTERLY" Or txtFrequencyDesc.Text = "HALF-ANNUALLY" Or txtFrequencyDesc.Text = "ANNUALLY" Or txtFrequencyDesc.Text = "BI-ANNUALLY" Then
                        'Case "BI-MONTHLY", "QUARTERLY", "HALF-ANNUALLY", "ANNUALLY", "BI-ANNUALLY"
                        Dim interval1 As Integer = 0

                        'Dim weekno As String = dttblservicecontractFrequency.Rows(0)("weekno").ToString
                        'Select Case GetDsValue(dsDet, "Frequency", i).ToUpper
                        Select Case dtservicecontractDet.Rows(i)("Frequency").ToString.ToUpper

                            Case "BI-MONTHLY"
                                interval1 = 2
                            Case "QUARTERLY"
                                interval1 = 3
                            Case "HALF-ANNUALLY"
                                interval1 = 6
                            Case "THRICE-ANNUALLY"
                                interval1 = 4
                            Case "ANNUALLY"
                                interval1 = 12
                            Case "BI-ANNUALLY"
                                interval1 = 24
                        End Select


                        If interval1 = 0 Then Continue For
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                End If

                                Dim weekno As String = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = dttblservicecontractFrequency.Rows(k)("DayNo").ToString
                                Dim monthNo As Integer = dttblservicecontractFrequency.Rows(k)("MonthNo").ToString

                                If dayNo > 0 And monthNo > 0 Then
                                    startDate = startDate.AddMonths(monthNo - 1)
                                    Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                    Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1

                                    If startDate.Day <> dayNo Then

                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            '   startDate = tempStartDate.AddMonths((j - 1) * interval)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1) * interval1)
                                            End If
                                            startDate = startDate.AddMonths(monthNo - 1)
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    If weekno.ToUpper = "L" Then
                                        startDate = startDate.AddMonths(interval1).AddDays(-1)
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(-1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    Else

                                        If j <> 1 Then
                                            startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                        Else
                                            Dim weekNoDate As Date = firstDayOfMonth.AddDays((Val(weekno) - 1) * 7)
                                            If weekNoDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                                isEnd = False
                                                Do Until isEnd = True
                                                    weekNoDate = weekNoDate.AddDays(1)
                                                    If weekNoDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                        isEnd = True
                                                        Exit Do
                                                    End If
                                                Loop
                                            End If

                                            If Date.Compare(startDate, weekNoDate) > 0 Then
                                                startDate = firstDayOfMonth.AddMonths(1)
                                                firstDayOfMonth = startDate
                                                startDate = startDate.AddDays((Val(weekno) - 1) * 7)
                                            End If
                                        End If
                                        If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                            isEnd = False
                                            Do Until isEnd = True
                                                startDate = startDate.AddDays(1)
                                                If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                    isEnd = True
                                                    Exit Do
                                                End If
                                            Loop
                                        End If
                                    End If

                                End If
                                serviceDate = startDate
                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtTo.Text) Then
                                    serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper

                                RowIndexSch = j - 1
                                AddNewRowSch()

                                'holiday = ""

                            Next
                        Next
                        ''
                    End If
                Next

                'conn.Close()




                'Exit Sub

                '2. (IsPerServiceValue = "Y")
                'Start: for Quarterly / Half Annually / Annually

                Dim commandDailyWeekly As MySqlCommand = New MySqlCommand
                commandDailyWeekly.CommandType = CommandType.Text
                commandDailyWeekly.CommandText = "Select count(*) as dailyweekly from tblcontractdet where ContractNo = '" & txtContractNo.Text & "' and (Frequency ='DAILY' or Frequency ='WEEKLY' or Frequency ='BI-WEEKLY' or Frequency ='TRI-WEEKLY' or Frequency ='TWICE-WEEKLY' or Frequency ='THRICE-WEEKLY' or Frequency ='FOUR-TIMES-WEEKLY' or Frequency ='FIVE-TIMES-WEEKLY' or Frequency ='SIX-TIMES-WEEKLY' or Frequency ='FORTNIGHTLY'  or Frequency ='TWICE-MONTHLY' or Frequency ='THRICE-MONTHLY' or Frequency ='FOUR-TIMES-MONTHLY' )"
                commandDailyWeekly.Connection = conn

                Dim drContractDailyWeekly As MySqlDataReader = commandDailyWeekly.ExecuteReader()
                Dim dtContractDailyWeekly As New DataTable
                dtContractDailyWeekly.Load(drContractDailyWeekly)
                Dim lServiceVal As Decimal


                'End: for Quarterly / Half Annually / Annually


                Dim conn1 As MySqlConnection = New MySqlConnection(constr)
                conn1.Open()

                Dim commandMaxSrviceDate As MySqlCommand = New MySqlCommand
                commandMaxSrviceDate.CommandType = CommandType.Text
                commandMaxSrviceDate.CommandText = "SELECT max(ServiceDate) as MaxSD FROM tbwserviceschedule where BatchNo='" & txtBatchNo.Text.Trim & "'"
                commandMaxSrviceDate.Connection = conn1

                Dim drMaxSrviceDate As MySqlDataReader = commandMaxSrviceDate.ExecuteReader()
                Dim dtMaxSrviceDate As New DataTable
                dtMaxSrviceDate.Load(drMaxSrviceDate)

                If dtMaxSrviceDate.Rows.Count > 0 Then
                    gMaxServiceDate = dtMaxSrviceDate.Rows(0)("MaxSD").ToString
                End If

                conn1.Close()
                conn1.Dispose()


                '3. (IsPerServiceValue = "Y")
                ''''''''''''''''''Start: Previous Dates

                gActive = "N"
                For i = 0 To dtservicecontractDet.Rows.Count - 1

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text

                    command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    command2.Connection = conn

                    Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                    Dim dttblservicecontractFrequency As New DataTable
                    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                    noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                    gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                    command2.Dispose()

                    If noOfInterval = 0 Then Continue For

                    gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                    gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                    gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                    gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                    gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                    gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                    gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                    gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                    gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()

                    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                        IsWeekly = "Y"
                        Dim daysAdded As Integer = 0
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (-j))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'AddNewRowSch()

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate < CDate(txtMonthStartDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""
                            Next
                        Next

                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                        Dim daysAdded As Integer = 0

                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                    serviceDate = tempStartDate.AddDays(7 * (-j))
                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            serviceDate = serviceDate.AddDays(1)
                                            daysAdded = daysAdded + 1
                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    Else
                                        daysAdded = daysAdded + 1
                                    End If
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                    'isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    '    'serviceDate = CDate(txtTo.Text)
                                    '    isLaterThanEndDate = True
                                    'End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        'serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    Else
                                        AddNewRowSch()
                                    End If

                                    'AddNewRowSch()

                                    holiday = ""
                                End If
                            Next

                        Next
                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(14 * (-j))
                                    If weekno = 2 Then startDate = startDate.AddDays(7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        serviceDate = CDate(txtMonthStartDate.Text)
                                        isLaterThanEndDate = True
                                    End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()

                                    holiday = ""

                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then
                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(21 * (-j))
                                    If weekno = 2 Then
                                        startDate = startDate.AddDays(7)
                                    ElseIf weekno = 3 Then
                                        startDate = startDate.AddDays(14)
                                    End If

                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        serviceDate = CDate(txtMonthStartDate.Text)
                                        isLaterThanEndDate = True
                                    End If


                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()


                                    holiday = ""
                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                        Dim firstMonthHasRec As Boolean = True
                        Dim fromMonth = 1
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne1Y:
                        For j = fromMonth To noOfInterval + 1

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                                End If

                                Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                                If dayNo > 0 Then
                                    'day no
                                    If startDate.Day <> dayNo Then
                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            ' startDate = tempStartDate.AddMonths(j - 1)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1))
                                            End If
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                    startDate = startDate.AddDays((weekno - 1) * 7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                                serviceDate = startDate
                                'serviceDate = CDate(txtMonthStartDate.Text)

                                'If j = 1 Then
                                '    'If serviceDate < tempStartDate Then
                                '    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                '        noOfInterval = noOfInterval + 1
                                '        fromMonth = 2
                                '        isLaterThanEndDate = True
                                '        'GoTo IntervalAddOne1
                                '    End If
                                'End If


                                If j = 1 Then
                                    If serviceDate < CDate(txtMonthStartDate.Text) Then
                                        'noOfInterval = noOfInterval + 1
                                        'weekno = weekno + 1
                                        'fromMonth = 2
                                        'GoTo IntervalAddOne
                                        GoTo nextrec5
                                    End If
                                End If
                                isLaterThanEndDate = False
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If


                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1

                                AddNewRowSch()

nextrec5:
                            Next
                        Next

                    End If
                Next

                '''''''''''''''''''''''END: Previous Dates



                '4. (IsPerServiceValue = "Y")

                '''''''''''''''''' START: Next Dates
                tempStartDate = gMaxServiceDate
                gActive = "N"
                isLaterThanEndDate = False
                For i = 0 To dtservicecontractDet.Rows.Count - 1

                    Dim command2 As MySqlCommand = New MySqlCommand
                    command2.CommandType = CommandType.Text

                    command2.CommandText = "SELECT ContractNo, SourceSQLID, FreqMTD, DayNo, MonthNo, WeekNo, WeekDOW, OrigCode, Rcno  FROM tblservicecontractFrequency where SourceSQLID= " & dtservicecontractDet.Rows(i)("OrigCode").ToString
                    command2.Connection = conn

                    Dim drtblservicecontractFrequency As MySqlDataReader = command2.ExecuteReader()
                    Dim dttblservicecontractFrequency As New DataTable
                    dttblservicecontractFrequency.Load(drtblservicecontractFrequency)

                    noOfInterval = Val(dtservicecontractDet.Rows(i)("NoofInterval").ToString())
                    gSQLFreq = dttblservicecontractFrequency.Rows(0)("Rcno").ToString()

                    command2.Dispose()

                    If noOfInterval = 0 Then Continue For

                    gFreq = dtservicecontractDet.Rows(i)("Frequency").ToString()
                    gServiceId = dtservicecontractDet.Rows(i)("ServiceID").ToString()
                    gproductService = dtservicecontractDet.Rows(i)("ServiceDesc").ToString()
                    gserviceValue = dtservicecontractDet.Rows(i)("Value").ToString()
                    gSQLID = dtservicecontractDet.Rows(i)("OrigCode").ToString()


                    gLocationID = dtservicecontractDet.Rows(i)("LocationID").ToString()
                    gServiceName = dtservicecontractDet.Rows(i)("ServiceName").ToString()
                    gServiceAddress = dtservicecontractDet.Rows(i)("Address1").ToString()
                    gLocateGRP = dtservicecontractDet.Rows(i)("LocateGRP").ToString()



                    If dtservicecontractDet.Rows(i)("Frequency").ToString() = "WEEKLY" Then
                        IsWeekly = "Y"
                        Dim daysAdded As Integer = 0
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'Dim dow As String = GetDsValue(dsFreq, "WeekDOW", k)

                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                'serviceDate = tempStartDate.AddDays(daysAdded)
                                If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                    isEnd = False
                                    Do Until isEnd = True
                                        serviceDate = serviceDate.AddDays(1)
                                        daysAdded = daysAdded + 1
                                        If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                            isEnd = True
                                            Exit Do
                                        End If
                                    Loop
                                Else
                                    daysAdded = daysAdded + 1
                                End If

                                'isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                '    serviceDate = CDate(txtTo.Text)
                                '    isLaterThanEndDate = True
                                'End If

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'AddNewRowSch()

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtTo.Text)
                                    isLaterThanEndDate = True
                                Else
                                    AddNewRowSch()
                                End If
                                holiday = ""
                            Next
                        Next

                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FIVE-TIMES-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "SIX-TIMES-WEEKLY" Then
                        Dim daysAdded As Integer = 0

                        For j = 1 To noOfInterval

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString
                                    Frequency = dtservicecontractDet.Rows(i)("Frequency").ToString()
                                    serviceDate = tempStartDate.AddDays(7 * (j - 1))
                                    'serviceDate = tempStartDate.AddDays(daysAdded)
                                    If serviceDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            serviceDate = serviceDate.AddDays(1)
                                            daysAdded = daysAdded + 1
                                            If serviceDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    Else
                                        daysAdded = daysAdded + 1
                                    End If
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                    'isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    '    'serviceDate = CDate(txtTo.Text)
                                    '    isLaterThanEndDate = True
                                    'End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate > CDate(txtMonthEndDate.Text) Then
                                        'serviceDate = CDate(txtTo.Text)
                                        isLaterThanEndDate = True
                                    Else
                                        AddNewRowSch()
                                    End If

                                    'AddNewRowSch()

                                    holiday = ""
                                End If
                            Next

                        Next
                        ''
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "BI-WEEKLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FORTNIGHTLY" Then
                        'ElseIf txtFrequencyDesc.Text = "BI-WEEKLY" Or txtFrequencyDesc.Text = "FORTNIGHTLY" Then
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then

                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(14 * (j - 1))
                                    If weekno = 2 Then startDate = startDate.AddDays(7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate
                                    'dgv24SCSchedule.Rows.Add(1)
                                    'rowIndex = dgv24SCSchedule.Rows.Count - 1


                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate > CDate(txtMonthEndDate.Text) Then
                                        serviceDate = CDate(txtMonthEndDate.Text)
                                        isLaterThanEndDate = True
                                    End If

                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()

                                    holiday = ""

                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TRI-WEEKLY" Then
                        For j = 1 To noOfInterval
                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                If isLaterThanEndDate = False Then
                                    Dim weekno As Integer = dttblservicecontractFrequency.Rows(k)("weekno").ToString
                                    Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                    'Dim dayNo As Integer = dttblservicecontractFrequency.Rows(0)("DayNo").ToString


                                    startDate = tempStartDate.AddDays(21 * (j - 1))
                                    If weekno = 2 Then
                                        startDate = startDate.AddDays(7)
                                    ElseIf weekno = 3 Then
                                        startDate = startDate.AddDays(14)
                                    End If

                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then
                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                    serviceDate = startDate

                                    isLaterThanEndDate = False
                                    'If serviceDate > CDate(txtTo.Text) Then
                                    If serviceDate > CDate(txtMonthEndDate.Text) Then
                                        serviceDate = CDate(txtMonthEndDate.Text)
                                        isLaterThanEndDate = True
                                    End If


                                    dayofWeek = ""
                                    Select Case pWeekNumber(serviceDate)
                                        Case 1
                                            dayofWeek = "1st "
                                        Case 2
                                            dayofWeek = "2nd "
                                        Case 3
                                            dayofWeek = "3rd "
                                        Case 4
                                            dayofWeek = "4th "
                                        Case 5
                                            dayofWeek = "5th "
                                    End Select
                                    dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                    gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                    gServiceDatestr = gServiceDate
                                    gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                    gdayofWeek = dayofWeek
                                    gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                    RowIndexSch = j - 1
                                    AddNewRowSch()


                                    holiday = ""
                                End If
                            Next
                        Next
                    ElseIf dtservicecontractDet.Rows(i)("Frequency").ToString() = "TWICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "THRICE-MONTHLY" Or dtservicecontractDet.Rows(i)("Frequency").ToString() = "FOUR-TIMES-MONTHLY" Then
                        'ElseIf txtFrequencyDesc.Text = "MONTHLY" Or txtFrequencyDesc.Text = "THRICE-MONTHLY" Then

                        Dim firstMonthHasRec As Boolean = True
                        Dim fromMonth = 1
                        Dim firstDayOfMonth As Date = CDate("01/" & tempStartDate.ToString("MM/yyyy"))
IntervalAddOne2Y:
                        For j = fromMonth To noOfInterval + 1

                            For k = 0 To dttblservicecontractFrequency.Rows.Count - 1
                                'startDate = tempStartDate.AddMonths(j - 1)

                                If j = 1 Then
                                    startDate = tempStartDate
                                Else
                                    startDate = firstDayOfMonth.AddMonths((j - 1))
                                End If


                                Dim weekno As Integer = Val(dttblservicecontractFrequency.Rows(k)("weekno").ToString)
                                Dim dow As String = dttblservicecontractFrequency.Rows(k)("WeekDOW").ToString
                                Dim dayNo As Integer = Val(dttblservicecontractFrequency.Rows(k)("DayNo").ToString)
                                Dim monthEndDate As Date = startDate.AddMonths(1).AddDays(-1)
                                Dim totalDays As Integer = DateDiff(DateInterval.Day, startDate, monthEndDate) + 1
                                If dayNo > 0 Then
                                    'day no
                                    If startDate.Day <> dayNo Then
                                        isEnd = False
                                        For l = 1 To totalDays - 1
                                            startDate = startDate.AddDays(1)
                                            If startDate.Day = dayNo Then
                                                isEnd = True
                                                Exit For
                                            End If
                                        Next
                                        If isEnd = False Then
                                            ' startDate = tempStartDate.AddMonths(j - 1)
                                            If j = 1 Then
                                                startDate = tempStartDate
                                            Else
                                                startDate = firstDayOfMonth.AddMonths((j - 1))
                                            End If
                                            If startDate.Month = monthEndDate.Month Then
                                                startDate = monthEndDate
                                            Else
                                                If startDate.Day > dayNo Then
                                                    Continue For
                                                Else
                                                    Dim monthStr As String = startDate.ToString("/MM/yyyy")
                                                    If IsDate("30" & monthStr) Then
                                                        startDate = CDate("30" & monthStr)
                                                    ElseIf IsDate("29" & monthStr) Then
                                                        startDate = CDate("29" & monthStr)
                                                    ElseIf IsDate("28" & monthStr) Then
                                                        startDate = CDate("28" & monthStr)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If

                                Else
                                    startDate = CDate("01" & startDate.ToString("/MM/yyyy"))
                                    startDate = startDate.AddDays((weekno - 1) * 7)
                                    If startDate.DayOfWeek.ToString.ToLower <> dow.ToLower Then

                                        isEnd = False
                                        Do Until isEnd = True
                                            startDate = startDate.AddDays(1)
                                            If startDate.DayOfWeek.ToString.ToLower = dow.ToLower Then
                                                isEnd = True
                                                Exit Do
                                            End If
                                        Loop
                                    End If
                                End If

                                serviceDate = startDate

                                'If j = 1 Then
                                '    If serviceDate < tempStartDate Then
                                '        'If serviceDate < CDate(txtMonthStartDate.Text) Then
                                '        noOfInterval = noOfInterval + 1
                                '        fromMonth = 2
                                '        GoTo IntervalAddOne2Y


                                '    End If
                                'End If


                                If j = 1 Then
                                    If serviceDate < tempStartDate Then
                                        'noOfInterval = noOfInterval + 1
                                        'weekno = weekno + 1
                                        'fromMonth = 2
                                        'GoTo IntervalAddOne
                                        GoTo nextrec6
                                    End If
                                End If

                                isLaterThanEndDate = False
                                'If serviceDate > CDate(txtTo.Text) Then
                                If serviceDate > CDate(txtMonthEndDate.Text) Then
                                    'serviceDate = CDate(txtMonthEndDate.Text)
                                    isLaterThanEndDate = True
                                End If

                                'serviceDate = startDate
                                'txtServiceDate.Text = startDate.ToString()

                                'dgv24SCSchedule.Rows.Add(1)
                                'rowIndex = dgv24SCSchedule.Rows.Count - 1

                                dayofWeek = ""
                                Select Case pWeekNumber(serviceDate)
                                    Case 1
                                        dayofWeek = "1st "
                                    Case 2
                                        dayofWeek = "2nd "
                                    Case 3
                                        dayofWeek = "3rd "
                                    Case 4
                                        dayofWeek = "4th "
                                    Case 5
                                        dayofWeek = "5th "
                                End Select
                                dayofWeek = dayofWeek & serviceDate.DayOfWeek.ToString.ToUpper

                                gServiceDate = CDate(serviceDate).ToString("dd/MM/yyyy")
                                'gServiceDate = serviceDate


                                'Dim gServiceDatestr As String
                                gServiceDatestr = gServiceDate
                                gServiceDatestr = CDate(gServiceDatestr).ToString("dd/MM/yyyy")
                                'gServiceDate = gServiceDatestr
                                gdayofWeek = dayofWeek
                                gdayofWeek1 = serviceDate.DayOfWeek.ToString.ToUpper
                                RowIndexSch = j - 1
                                'If dtservicecontractDet.Rows(i)("Frequency").ToString() = "MONTHLY" Then
                                '    RowIndexSch = j - 2
                                'Else
                                '    RowIndexSch = j - 1
                                'End If

                                If (tempStartDate.Month < gServiceDate.Month) Then
                                    GoTo calcvalY
                                End If

                                AddNewRowSch()

nextrec6:
                            Next
                        Next

                    End If
                Next

                '''''''''''''''''''''''END: Next Dates


calcvalY:

                '5. (IsPerServiceValue = "Y")
                'Start: Calculate Values

                'If txtComputationMethod.Text = "1" Then
                Dim commandValues As MySqlCommand = New MySqlCommand

                commandValues.CommandType = CommandType.Text
                commandValues.CommandText = "SELECT *  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by ServiceDate"
                commandValues.Connection = conn

                Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                Dim dtValues As New DataTable
                dtValues.Load(drValues)

                Dim lTotalServices = dtValues.Rows.Count
                Dim lbillingamount As Double
                Dim lbillingamountTotal As Double

                lbillingamount = 0.0
                lbillingamountTotal = 0.0
                'lbillingamount = Convert.ToDouble(txtBillingAmount.Text)

                Dim z As Integer
                z = 0

                Dim lMonthYear As String
                lMonthYear = ""

                Dim lWeekMonthYear As String
                lWeekMonthYear = ""

                For Each row As DataRow In dtValues.Rows

                    If lMonthYear <> row("MonthYear") Then
                        lMonthYear = row("MonthYear")

                        Dim commandMonthYearCount As MySqlCommand = New MySqlCommand

                        commandMonthYearCount.CommandType = CommandType.Text
                        commandMonthYearCount.CommandText = "SELECT count(distinct(ServiceDate)) as MY FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and MonthYear ='" & lMonthYear & "'"
                        commandMonthYearCount.Connection = conn

                        Dim drMonthYearCount As MySqlDataReader = commandMonthYearCount.ExecuteReader()
                        Dim dtMonthYearCount As New DataTable
                        dtMonthYearCount.Load(drMonthYearCount)

                        lbillingamount = Convert.ToDouble(txtValPerMnth.Text) / Val(dtMonthYearCount.Rows(0)("MY").ToString)
                    End If



                    z = z + 1
                    'conn.Close()
                Next row

                'End: Calculate Values
            End If   'End if PersErviceValue is N


            ''''' End: if Y
EndScheduling:

            If IsPerServiceValue = "N" Then 'If IsPerServiceValue = "N" Then 13.01.19
                '''''''''''''''''''''''''''''
                '' Start: update for fixed value

                ''''''''''''''''''''''''''''''

                ''''''''''''' 15.07

                '''''''''''''''''''''''''''''
                '' Start: update for Fixed Contract Value Computaion Method

                ''''''''''''''''''''''''''''''
                If ((txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
                    'If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                    Dim commandValues1 As MySqlCommand = New MySqlCommand

                    commandValues1.CommandType = CommandType.Text
                    commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                    commandValues1.Connection = conn

                    Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                    Dim dtValues1 As New DataTable
                    dtValues1.Load(drValues1)

                    If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then


                        '''' Monthly and higher

                        Dim commandValues10 As MySqlCommand = New MySqlCommand

                        commandValues10.CommandType = CommandType.Text
                        commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues10.Connection = conn

                        Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                        Dim dtValues10 As New DataTable
                        dtValues10.Load(drValues10)

                        If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            Dim commandValues2 As MySqlCommand = New MySqlCommand

                            commandValues2.CommandType = CommandType.Text
                            commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                            commandValues2.Connection = conn

                            Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                            Dim dtValues2 As New DataTable
                            dtValues2.Load(drValues2)

                            Dim ldistinctmonthyear As Integer

                            ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            '''''''''''''''''''''''''''''''''''''
                            Dim commandValues3 As MySqlCommand = New MySqlCommand

                            commandValues3.CommandType = CommandType.Text
                            commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                            commandValues3.Connection = conn

                            Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                            Dim dtValues3 As New DataTable
                            dtValues3.Load(drValues3)

                            ''''''''' 31.10.17
                            Dim lrcno As Long
                            Dim lmonthear As String

                            lrcno = 0
                            lmonthear = ""

                            lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                            lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                            ''''''''' 31.10.17

                            For Each row As DataRow In dtValues3.Rows

                                Dim updateval As Decimal = 0.0
                                updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                                'Dim commandVal4 As MySqlCommand = New MySqlCommand
                                'commandVal4.CommandType = CommandType.Text
                                'commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                'commandVal4.Parameters.Clear()

                                'commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                                ''commandVal4.Parameters.AddWithValue("@Val", updateval)

                                'commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                                'commandVal4.Connection = conn
                                'commandVal4.ExecuteScalar()

                                'commandVal4.Dispose()

                                ''''''''' 31.10.17
                                If lmonthear <> row("MonthYear") Then

                                    Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                    commandSumMonthYear.CommandType = CommandType.Text
                                    commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                    commandSumMonthYear.Connection = conn

                                    Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                    Dim dtSumMonthYear As New DataTable
                                    dtSumMonthYear.Load(drSumMonthYear)
                                    Dim monthyearsum As Decimal = 0.0

                                    monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                        Dim addiff As Decimal = 0.0
                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                        ' Retrive the last value for the month

                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                                        commandLastVal.CommandType = CommandType.Text
                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                        commandLastVal.Connection = conn

                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                        Dim dtLastVal As New DataTable
                                        dtLastVal.Load(drLastVal)


                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                        ' Retrive the last value for the month

                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                        commandupdateAddDiff.CommandType = CommandType.Text
                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                        commandupdateAddDiff.Parameters.Clear()

                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                        commandupdateAddDiff.Connection = conn
                                        commandupdateAddDiff.ExecuteScalar()

                                        commandupdateAddDiff.Dispose()
                                        'End If
                                    End If


                                    lrcno = row("Rcno")
                                    lmonthear = row("MonthYear")
                                Else
                                    lrcno = row("Rcno")
                                End If

                                ''''''''' 31.10.17

                            Next row

                            commandValues3.Dispose()




                            '''''''''''''''''''' for the last recrd


                            Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                            commandSumMonthYear1.CommandType = CommandType.Text
                            commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                            commandSumMonthYear1.Connection = conn

                            Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                            Dim dtSumMonthYear1 As New DataTable
                            dtSumMonthYear1.Load(drSumMonthYear1)
                            Dim monthyearsum1 As Decimal = 0.0

                            monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                Dim addiff As Decimal = 0.0
                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                                ' Retrive the last value for the month

                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                                commandLastVal.CommandType = CommandType.Text
                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                commandLastVal.Connection = conn

                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                Dim dtLastVal As New DataTable
                                dtLastVal.Load(drLastVal)


                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                ' Retrive the last value for the month

                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                commandupdateAddDiff.CommandType = CommandType.Text
                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                commandupdateAddDiff.Parameters.Clear()

                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                commandupdateAddDiff.Connection = conn
                                commandupdateAddDiff.ExecuteScalar()

                                commandupdateAddDiff.Dispose()
                                'End If
                            End If

                            '''''''''''''''''' for the last record


                        ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            Dim commandValues2 As MySqlCommand = New MySqlCommand

                            commandValues2.CommandType = CommandType.Text
                            commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                            commandValues2.Connection = conn

                            Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                            Dim dtValues2 As New DataTable
                            dtValues2.Load(drValues2)

                            Dim ldistinctmonthyear As Integer

                            ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                            '''''''''''''''''''''''''''''''''''''
                            Dim commandValues3 As MySqlCommand = New MySqlCommand

                            commandValues3.CommandType = CommandType.Text
                            commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                            commandValues3.Connection = conn

                            Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                            Dim dtValues3 As New DataTable
                            dtValues3.Load(drValues3)


                            ''''''''' 31.10.17
                            Dim lrcno As Long
                            Dim lmonthear As String

                            lrcno = 0
                            lmonthear = ""

                            lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                            lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                            ''''''''' 31.10.17
                            For Each row As DataRow In dtValues3.Rows

                                Dim updateval As Decimal = 0.0
                                updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")



                                ''''''''' 31.10.17
                                If lmonthear <> row("MonthYear") Then

                                    Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                    commandSumMonthYear.CommandType = CommandType.Text
                                    commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                    commandSumMonthYear.Connection = conn

                                    Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                    Dim dtSumMonthYear As New DataTable
                                    dtSumMonthYear.Load(drSumMonthYear)
                                    Dim monthyearsum As Decimal = 0.0

                                    monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                        Dim addiff As Decimal = 0.0
                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                        ' Retrive the last value for the month

                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                                        commandLastVal.CommandType = CommandType.Text
                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                        commandLastVal.Connection = conn

                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                        Dim dtLastVal As New DataTable
                                        dtLastVal.Load(drLastVal)


                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                        ' Retrive the last value for the month

                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                        commandupdateAddDiff.CommandType = CommandType.Text
                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                        commandupdateAddDiff.Parameters.Clear()
                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                                        commandupdateAddDiff.Connection = conn
                                        commandupdateAddDiff.ExecuteScalar()
                                        commandupdateAddDiff.Dispose()
                                        'End If
                                    End If


                                    lrcno = row("Rcno")
                                    lmonthear = row("MonthYear")
                                Else
                                    lrcno = row("Rcno")
                                End If

                                ''''''''' 31.10.17
                            Next row
                            commandValues3.Dispose()


                            '''''''''''''''''''' for the last recrd
                            Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                            commandSumMonthYear1.CommandType = CommandType.Text
                            commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                            commandSumMonthYear1.Connection = conn

                            Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                            Dim dtSumMonthYear1 As New DataTable
                            dtSumMonthYear1.Load(drSumMonthYear1)
                            Dim monthyearsum1 As Decimal = 0.0

                            monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                Dim addiff As Decimal = 0.0
                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                                ' Retrive the last value for the month

                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                                commandLastVal.CommandType = CommandType.Text
                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                commandLastVal.Connection = conn

                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                Dim dtLastVal As New DataTable
                                dtLastVal.Load(drLastVal)


                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                ' Retrive the last value for the month

                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                commandupdateAddDiff.CommandType = CommandType.Text
                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                commandupdateAddDiff.Parameters.Clear()

                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                commandupdateAddDiff.Connection = conn
                                commandupdateAddDiff.ExecuteScalar()

                                commandupdateAddDiff.Dispose()
                                dtLastVal.Dispose()
                                commandLastVal.Dispose()

                                'End If
                            End If
                            commandSumMonthYear1.Dispose()
                            dtSumMonthYear1.Dispose()
                            '''''''''''''''''' for the last record
                        End If
                        commandValues1.Dispose()
                        commandValues10.Dispose()
                        dtValues1.Dispose()
                        dtValues10.Dispose()

                    End If
                End If



                ''''''''''''''''''''''''''''''''''''''''

                ''''''''''''''' 15.07
                'Start: quoted on 25.08.21

                'If txtComputationMethod1.Text = "Fixed Contract Value" Then
                '    Dim dblTotalValue As Decimal = 0.0
                '    Dim dbldiff As Decimal = 0.0

                '    Dim rcnoAdjusted As Integer = 0
                '    Dim ValueAdjusted As Decimal = 0.0

                '    Dim commandFixedValue As MySqlCommand = New MySqlCommand

                '    commandFixedValue.CommandType = CommandType.Text
                '    commandFixedValue.CommandText = "SELECT sum(value) as totalvalue FROM tbwserviceschedule where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y'"
                '    commandFixedValue.Connection = conn

                '    Dim drFixedValue As MySqlDataReader = commandFixedValue.ExecuteReader()
                '    Dim dtFixedValue As New DataTable
                '    dtFixedValue.Load(drFixedValue)

                '    dblTotalValue = Convert.ToDouble(dtFixedValue.Rows(0)("totalvalue").ToString)


                '    'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                '    '    dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                '    'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '    '    dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                '    'End If

                '    'If dblTotalValue < Convert.ToDecimal(txtAgreeValue.Text) Then
                '    dbldiff = Convert.ToDecimal(txtAgreeValue.Text) - dblTotalValue
                '    'ElseIf dblTotalValue > Convert.ToDecimal(txtAgreeValue.Text) Then
                '    'dbldiff = dblTotalValue - Convert.ToDecimal(txtAgreeValue.Text)
                '    'End If
                '    '''''''''''''''

                '    Dim commandAdjustLastRecord As MySqlCommand = New MySqlCommand
                '    commandAdjustLastRecord.CommandType = CommandType.Text
                '    commandAdjustLastRecord.CommandText = "select rcno, Value from tbwserviceschedule  where BatchNo = '" & txtBatchNo.Text.Trim & "' and Active ='Y' order by ServiceDate desc limit 1"
                '    commandAdjustLastRecord.Connection = conn

                '    Dim drAdjustLastRecord As MySqlDataReader = commandAdjustLastRecord.ExecuteReader()
                '    Dim dtAdjustLastRecord As New DataTable
                '    dtAdjustLastRecord.Load(drAdjustLastRecord)

                '    If dtAdjustLastRecord.Rows.Count > 0 Then
                '        rcnoAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("rcno").ToString)
                '        ValueAdjusted = Convert.ToDouble(dtAdjustLastRecord.Rows(0)("Value").ToString)
                '    End If
                '    ''''''''''''''''''''

                '    '''''''''''''''''''''''
                '    Dim AdjustValue As Decimal = 0.0

                '    'If dbldiff > 0 Then
                '    '    AdjustValue = ValueAdjusted - dbldiff
                '    'Else
                '    '    AdjustValue = ValueAdjusted + dbldiff
                '    'End If

                '    AdjustValue = ValueAdjusted + dbldiff

                '    Dim commandAdjustLastRec As MySqlCommand = New MySqlCommand
                '    commandAdjustLastRec.CommandType = CommandType.Text

                '    Dim qryT As String = "UPDATE tbwserviceschedule SET  Value = " & AdjustValue & " where rcno = " & rcnoAdjusted

                '    commandAdjustLastRec.CommandText = qryT
                '    commandAdjustLastRec.Parameters.Clear()
                '    commandAdjustLastRec.Connection = conn
                '    commandAdjustLastRec.ExecuteNonQuery()

                '    commandAdjustLastRecord.Dispose()
                '    commandAdjustLastRec.Dispose()

                'End If

                'End: quoted on 25.08.21
                '''''''''''''''''''''''''''''
                '' End: update for fixed value

                ''''''''''''''''''''''''''''''

                '''''''''''''''''''''''''''''
                '' Start: update for Monthly Computaion Method

                ''''''''''''''''''''''''''''''
                'If ((txtComputationMethod1.Text = "Monthly") Or (txtComputationMethod1.Text = "Fixed Contract Value")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then
                If ((txtComputationMethod1.Text = "Monthly")) And Convert.ToDecimal(txtAgreeValue.Text) > 0 Then

                    Dim commandValues1 As MySqlCommand = New MySqlCommand

                    commandValues1.CommandType = CommandType.Text
                    commandValues1.CommandText = "SELECT count(distinct(frequency)) as frequencycount  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                    commandValues1.Connection = conn

                    Dim drValues1 As MySqlDataReader = commandValues1.ExecuteReader()
                    Dim dtValues1 As New DataTable
                    dtValues1.Load(drValues1)

                    If Convert.ToInt32(dtValues1.Rows(0)("frequencycount").ToString) > 1 Then

                        '''' Monthly and higher

                        Dim commandValues10 As MySqlCommand = New MySqlCommand

                        commandValues10.CommandType = CommandType.Text
                        commandValues10.CommandText = "SELECT min(maximumserviceinterval) as maxserviceinterval  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                        commandValues10.Connection = conn

                        Dim drValues10 As MySqlDataReader = commandValues10.ExecuteReader()
                        Dim dtValues10 As New DataTable
                        dtValues10.Load(drValues10)

                        If Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) >= 30 Then

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            Dim commandValues2 As MySqlCommand = New MySqlCommand

                            commandValues2.CommandType = CommandType.Text
                            commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                            commandValues2.Connection = conn

                            Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                            Dim dtValues2 As New DataTable
                            dtValues2.Load(drValues2)

                            Dim ldistinctmonthyear As Integer

                            ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            '''''''''''''''''''''''''''''''''''''
                            Dim commandValues3 As MySqlCommand = New MySqlCommand

                            commandValues3.CommandType = CommandType.Text
                            commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear, MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y' order by servicedate"
                            commandValues3.Connection = conn

                            Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                            Dim dtValues3 As New DataTable
                            dtValues3.Load(drValues3)

                            ''''''''' 31.10.17
                            Dim lrcno As Long
                            Dim lmonthear As String

                            lrcno = 0
                            lmonthear = ""

                            lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                            lmonthear = dtValues3.Rows(0)("MonthYear").ToString.Trim

                            ''''''''' 31.10.17

                            For Each row As DataRow In dtValues3.Rows

                                Dim updateval As Decimal = 0.0
                                updateval = Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear")

                                Dim commandVal4 As MySqlCommand = New MySqlCommand
                                commandVal4.CommandType = CommandType.Text
                                commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                commandVal4.Parameters.Clear()

                                commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtAgreeValue.Text) / ldistinctmonthyear / row("CountMonthYear"))
                                'commandVal4.Parameters.AddWithValue("@Val", updateval)

                                commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                                commandVal4.Connection = conn
                                commandVal4.ExecuteScalar()

                                commandVal4.Dispose()

                                ''''''''' 31.10.17
                                If lmonthear <> row("MonthYear") Then

                                    Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                    commandSumMonthYear.CommandType = CommandType.Text
                                    commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                    commandSumMonthYear.Connection = conn

                                    Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                    Dim dtSumMonthYear As New DataTable
                                    dtSumMonthYear.Load(drSumMonthYear)
                                    Dim monthyearsum As Decimal = 0.0

                                    monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                        Dim addiff As Decimal = 0.0
                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                        ' Retrive the last value for the month

                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                                        commandLastVal.CommandType = CommandType.Text
                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                        commandLastVal.Connection = conn

                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                        Dim dtLastVal As New DataTable
                                        dtLastVal.Load(drLastVal)


                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                        ' Retrive the last value for the month

                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                        commandupdateAddDiff.CommandType = CommandType.Text
                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                        commandupdateAddDiff.Parameters.Clear()

                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                        commandupdateAddDiff.Connection = conn
                                        commandupdateAddDiff.ExecuteScalar()

                                        commandupdateAddDiff.Dispose()
                                        'End If
                                    End If


                                    lrcno = row("Rcno")
                                    lmonthear = row("MonthYear")
                                Else
                                    lrcno = row("Rcno")
                                End If

                                ''''''''' 31.10.17

                            Next row

                            commandValues3.Dispose()




                            '''''''''''''''''''' for the last recrd


                            Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                            commandSumMonthYear1.CommandType = CommandType.Text
                            commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                            commandSumMonthYear1.Connection = conn

                            Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                            Dim dtSumMonthYear1 As New DataTable
                            dtSumMonthYear1.Load(drSumMonthYear1)
                            Dim monthyearsum1 As Decimal = 0.0

                            monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                Dim addiff As Decimal = 0.0
                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                                ' Retrive the last value for the month

                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                                commandLastVal.CommandType = CommandType.Text
                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                commandLastVal.Connection = conn

                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                Dim dtLastVal As New DataTable
                                dtLastVal.Load(drLastVal)


                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                ' Retrive the last value for the month

                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                commandupdateAddDiff.CommandType = CommandType.Text
                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                commandupdateAddDiff.Parameters.Clear()

                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                commandupdateAddDiff.Connection = conn
                                commandupdateAddDiff.ExecuteScalar()

                                commandupdateAddDiff.Dispose()
                                'End If
                            End If

                            '''''''''''''''''' for the last record


                        ElseIf Convert.ToInt32(dtValues10.Rows(0)("maxserviceinterval").ToString) <= 30 Then

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            Dim commandValues2 As MySqlCommand = New MySqlCommand

                            commandValues2.CommandType = CommandType.Text
                            commandValues2.CommandText = "SELECT count(distinct(monthyear)) as distinctmonthyear  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'"
                            commandValues2.Connection = conn

                            Dim drValues2 As MySqlDataReader = commandValues2.ExecuteReader()
                            Dim dtValues2 As New DataTable
                            dtValues2.Load(drValues2)

                            Dim ldistinctmonthyear As Integer

                            ldistinctmonthyear = Convert.ToInt32(dtValues2.Rows(0)("distinctmonthyear").ToString)

                            ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                            '''''''''''''''''''''''''''''''''''''
                            Dim commandValues3 As MySqlCommand = New MySqlCommand

                            commandValues3.CommandType = CommandType.Text
                            commandValues3.CommandText = "SELECT BatchNo, rcno, CountDays, Value,CountMonthYear,MonthYear FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Active = 'Y'  order by servicedate"
                            commandValues3.Connection = conn

                            Dim drValues3 As MySqlDataReader = commandValues3.ExecuteReader()
                            Dim dtValues3 As New DataTable
                            dtValues3.Load(drValues3)


                            ''''''''' 31.10.17
                            Dim lrcno As Long
                            Dim lmonthear As String

                            lrcno = 0
                            lmonthear = ""

                            lrcno = Convert.ToInt32(dtValues3.Rows(0)("rcno").ToString)
                            lmonthear = dtValues3.Rows(0)("MonthYear").ToString

                            ''''''''' 31.10.17
                            For Each row As DataRow In dtValues3.Rows

                                Dim updateval As Decimal = 0.0
                                updateval = Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear")

                                Dim commandVal4 As MySqlCommand = New MySqlCommand
                                commandVal4.CommandType = CommandType.Text
                                commandVal4.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                commandVal4.Parameters.Clear()

                                commandVal4.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                'commandVal.Parameters.AddWithValue("@MonthYear", Month(gServiceDate) & Year(gServiceDate))
                                'commandVal4.Parameters.AddWithValue("@Val", Convert.ToDecimal(txtValPerMnth.Text) / row("CountMonthYear"))
                                commandVal4.Parameters.AddWithValue("@Val", updateval)
                                commandVal4.Parameters.AddWithValue("@Rcno", row("Rcno"))

                                commandVal4.Connection = conn
                                commandVal4.ExecuteScalar()

                                commandVal4.Dispose()


                                ''''''''' 31.10.17
                                If lmonthear <> row("MonthYear") Then

                                    Dim commandSumMonthYear As MySqlCommand = New MySqlCommand

                                    commandSumMonthYear.CommandType = CommandType.Text
                                    commandSumMonthYear.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                                    commandSumMonthYear.Connection = conn

                                    Dim drSumMonthYear As MySqlDataReader = commandSumMonthYear.ExecuteReader()
                                    Dim dtSumMonthYear As New DataTable
                                    dtSumMonthYear.Load(drSumMonthYear)
                                    Dim monthyearsum As Decimal = 0.0

                                    monthyearsum = Convert.ToDecimal(dtSumMonthYear.Rows(0)("monthyearsum").ToString)


                                    If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                        'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                        Dim addiff As Decimal = 0.0
                                        addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum)

                                        ' Retrive the last value for the month

                                        Dim commandLastVal As MySqlCommand = New MySqlCommand

                                        commandLastVal.CommandType = CommandType.Text
                                        commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                        commandLastVal.Connection = conn

                                        Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                        Dim dtLastVal As New DataTable
                                        dtLastVal.Load(drLastVal)


                                        addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                        ' Retrive the last value for the month

                                        Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                        commandupdateAddDiff.CommandType = CommandType.Text
                                        commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                        commandupdateAddDiff.Parameters.Clear()
                                        commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                        commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)
                                        commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)
                                        commandupdateAddDiff.Connection = conn
                                        commandupdateAddDiff.ExecuteScalar()
                                        commandupdateAddDiff.Dispose()
                                        'End If
                                    End If


                                    lrcno = row("Rcno")
                                    lmonthear = row("MonthYear")
                                Else
                                    lrcno = row("Rcno")
                                End If

                                ''''''''' 31.10.17
                            Next row
                            commandValues3.Dispose()


                            '''''''''''''''''''' for the last recrd
                            Dim commandSumMonthYear1 As MySqlCommand = New MySqlCommand

                            commandSumMonthYear1.CommandType = CommandType.Text
                            commandSumMonthYear1.CommandText = "SELECT sum(Value) as monthyearsum  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y'"
                            commandSumMonthYear1.Connection = conn

                            Dim drSumMonthYear1 As MySqlDataReader = commandSumMonthYear1.ExecuteReader()
                            Dim dtSumMonthYear1 As New DataTable
                            dtSumMonthYear1.Load(drSumMonthYear1)
                            Dim monthyearsum1 As Decimal = 0.0

                            monthyearsum1 = Convert.ToDecimal(dtSumMonthYear1.Rows(0)("monthyearsum").ToString)


                            If Convert.ToDecimal(txtValPerMnth.Text) > 0 Then
                                'If Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum > 0 Then
                                Dim addiff As Decimal = 0.0
                                addiff = (Convert.ToDecimal(txtValPerMnth.Text) - monthyearsum1)

                                ' Retrive the last value for the month

                                Dim commandLastVal As MySqlCommand = New MySqlCommand

                                commandLastVal.CommandType = CommandType.Text
                                commandLastVal.CommandText = "SELECT Value  FROM tbwserviceschedule where BatchNo ='" & txtBatchNo.Text.Trim & "' and Monthyear = '" & lmonthear & "' and Active = 'Y' and rcno =" & lrcno
                                commandLastVal.Connection = conn

                                Dim drLastVal As MySqlDataReader = commandLastVal.ExecuteReader()
                                Dim dtLastVal As New DataTable
                                dtLastVal.Load(drLastVal)


                                addiff = Convert.ToDecimal(dtLastVal.Rows(0)("Value").ToString) + addiff

                                ' Retrive the last value for the month

                                Dim commandupdateAddDiff As MySqlCommand = New MySqlCommand
                                commandupdateAddDiff.CommandType = CommandType.Text
                                commandupdateAddDiff.CommandText = "Update tbwserviceschedule set Value = @Val where BatchNo = @BatchNo and Rcno = @Rcno"
                                commandupdateAddDiff.Parameters.Clear()

                                commandupdateAddDiff.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text.Trim)
                                commandupdateAddDiff.Parameters.AddWithValue("@Val", addiff)

                                commandupdateAddDiff.Parameters.AddWithValue("@Rcno", lrcno)

                                commandupdateAddDiff.Connection = conn
                                commandupdateAddDiff.ExecuteScalar()

                                commandupdateAddDiff.Dispose()
                                dtLastVal.Dispose()
                                commandLastVal.Dispose()

                                'End If
                            End If
                            commandSumMonthYear1.Dispose()
                            dtSumMonthYear1.Dispose()
                            '''''''''''''''''' for the last record
                        End If
                        commandValues1.Dispose()
                        commandValues10.Dispose()
                        dtValues1.Dispose()
                        dtValues10.Dispose()

                    End If
                End If


            End If ' If IsPerServiceValue = "N" Then 13.01.19

            ''''''''''''''''''''''''''''''''''''''''

            conn.Close()
            conn.Dispose()

            command1.Dispose()
            command3.Dispose()
            dtservicecontractDet.Dispose()
            drservicecontractDet.Close()


            SqlDSServiceSchedule.SelectCommand = "SELECT ContractNo, ServiceDate, Rcno, Seq, PublicHoliday, Frequency, DOW, Services, Location, BranchId, Value, ContractDetSQLID, ContractDetFreqSQLID, TargetId, TargetDesc, ServiceId, LocationID, ServiceName, Address1, LocateGRP,ServiceLocationGroup, Salesman FROM tbwserviceschedule where ContractNo =@ContractNo  and Active = 'Y'  ORDER BY ServiceDate"

            'txtTotalRecords.Text = grvschedule.Rows.Count

            SqlDSServiceSchedule.DataBind()
            grvschedule.DataSourceID = "SqlDSServiceSchedule"
            grvschedule.DataBind()
            txtTotalRecords.Text = grvschedule.Rows.Count

            'If Convert.ToDouble(txtAgreeValue.Text) <> Convert.ToDouble(txtTotalServiceValue.Text) Then
            '    AdjustLastRecord()
            'End If

            'End:Scheduling
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "PopulateForMonths", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
    End Sub
    Protected Sub txtMonths_TextChanged(sender As Object, e As EventArgs) Handles txtMonths.TextChanged
        Try
            lblAlert.Text = ""


                If Val(txtMonthsOriginal.Text) < Val(txtMonths.Text) Then
                    lblAlert.Text = "Months cannot be more than " & txtMonthsOriginal.Text

                    Dim effDate As DateTime = DateTime.Parse(txtTo.Text)
                    Dim RefDate As DateTime = DateTime.Parse(txtFrom.Text)

                    Dim months As Integer = (effDate.Year - RefDate.Year) * 12 + effDate.Month - RefDate.Month
                    If effDate.Day > RefDate.Day Then months += 1
                    txtMonths.Text = months
                    'txtMonthsOriginal.Text = txtMonths.Text

                End If
                txtServEnd.Text = CDate(txtFrom.Text).AddMonths(txtMonths.Text).AddDays(-1)
                txtTo.Text = txtServEnd.Text
                'PopulateGrid()

                Label9.Text = "Do you want to generate " & txtMonths.Text & " month/s of schedule, "
                Label8.Text = " starting from " & txtFrom.Text & " ?"
            'mdlConfirmMonths.Show()
            PopulateGrid()
            'PopulateForMonths()
            Catch ex As Exception
                lblAlert.Text = ex.Message.ToString
                InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "txtMonths_TextChanged", ex.Message.ToString, txtContractNo.Text)
                Exit Sub
            End Try
    End Sub

    Protected Sub btnConfirmMonthsYes_Click(sender As Object, e As EventArgs) Handles btnConfirmMonthsYes.Click
        PopulateForMonths()
    End Sub

    Protected Sub txtFrom_TextChanged(sender As Object, e As EventArgs) Handles txtFrom.TextChanged
        lblAlert.Text = ""


        Dim t As DateTime
        Dim d As Double
        Dim dt As Date
        Try
            If String.IsNullOrEmpty(txtFrom.Text) = False Then
                If Date.TryParseExact(txtFrom.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, dt) Then
                    txtFrom.Text = dt.ToShortDateString

                Else
                    ' MessageBox.Message.Alert(Page, "Schedule Date is invalid", "str")
                    lblAlert.Text = "FROM DATE IS INVALID"
                    Exit Sub
                End If
            End If


            If txtendoflastschedule.Text = "blank" Then
                If Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") < Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") Then
                    lblAlert.Text = "Start Date cannot be earlier than Contract Date"
                    txtFrom.Text = Session("servstart")
                    Exit Sub
                End If
            Else

                If Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") < Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") Then
                    lblAlert.Text = "Start Date cannot be earlier than Contract Date"
                    txtFrom.Text = Session("servstart")
                    Exit Sub
                End If

                If Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") < DateAdd(DateInterval.Day, 1, CDate(txtendoflastschedule.Text)) Then
                    lblAlert.Text = "Start Date cannot be earlier than 'End of Last Schedule' Date"
                    txtFrom.Text = DateAdd(DateInterval.Day, 1, CDate(txtendoflastschedule.Text))
                    Exit Sub
                End If
            End If

            'If Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") < Convert.ToDateTime(txtContractDate.Text).ToString("yyyy-MM-dd") Then
            '    lblAlert.Text = "Start Date cannot be earlier than Contract Date"
            '    txtFrom.Text = Session("servstart")
            '    Exit Sub
            'End If

            If Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") > Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") Then
                lblAlert.Text = "Start Date cannot be later than End Date"
                Exit Sub
            End If

            txtServStart.Text = txtFrom.Text

            txtServEnd.Text = CDate(txtFrom.Text).AddMonths(txtMonths.Text).AddDays(-1)
            txtTo.Text = txtServEnd.Text

            Label9.Text = "Do you want to generate " & txtMonths.Text & " month/s of schedule, "
            Label8.Text = " starting from " & txtFrom.Text & " ?"
            'mdlConfirmMonths.Show()
            PopulateForMonths()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblServiceEventLog("SERVICE SCHEDULE - " + Session("UserID"), "txtFrom_TextChanged", ex.Message.ToString, txtContractNo.Text)
            Exit Sub
        End Try
        'PopulateForMonths()
    End Sub

    Function IsServicePeriodlocked() As Boolean
        'lblAlert.Text = ""
        'updPanelContract1.Update()
        'Dim lContractOrService As String
        'lContractOrService = pContractOrService

        Dim IsContractLocked As Boolean
        IsContractLocked = False


        Dim IsContractLocked1 As Boolean
        IsContractLocked1 = False

        'If lContractOrService = "ServiceEnd" Then
        Dim sqlstr As String
        sqlstr = ""

        sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtTo.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

        Dim commandLocked1 As MySqlCommand = New MySqlCommand

        Dim conn1 As MySqlConnection = New MySqlConnection()
        conn1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn1.Open()

        commandLocked1.CommandType = CommandType.Text
        commandLocked1.CommandText = sqlstr
        commandLocked1.Connection = conn1

        Dim dr1 As MySqlDataReader = commandLocked1.ExecuteReader()
        Dim dt1 As New DataTable
        dt1.Load(dr1)


        If dt1.Rows.Count > 0 Then
            If dt1.Rows(0)("svcLock").ToString = "Y" Then
                IsContractLocked1 = True
            End If
        End If

        conn1.Close()
        conn1.Dispose()
        commandLocked1.Dispose()
        dr1.Close()
        'Return IsContractLocked
        'End If

        'If lContractOrService = "ServiceStart" Then
        'Dim sqlstr As String

        Dim IsContractLocked2 As Boolean
        IsContractLocked2 = False
        sqlstr = ""

        sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(txtFrom.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

        Dim commandLocked2 As MySqlCommand = New MySqlCommand

        Dim conn2 As MySqlConnection = New MySqlConnection()
        conn2.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn2.Open()

        commandLocked2.CommandType = CommandType.Text
        commandLocked2.CommandText = sqlstr
        commandLocked2.Connection = conn2

        Dim dr2 As MySqlDataReader = commandLocked2.ExecuteReader()
        Dim dt2 As New DataTable
        dt2.Load(dr2)


        If dt2.Rows.Count > 0 Then
            If dt2.Rows(0)("svcLock").ToString = "Y" Then

                IsContractLocked2 = True

            End If
        End If

        conn2.Close()
        conn2.Dispose()
        commandLocked2.Dispose()
        dr2.Close()

        If IsContractLocked1 = True Or IsContractLocked2 = True Then
            IsContractLocked = True
        End If

        Return IsContractLocked
    End Function
End Class




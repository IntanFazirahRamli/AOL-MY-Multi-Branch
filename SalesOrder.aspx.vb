Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports System.Data
Imports System.Data.SqlClient
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Web.UI.WebControls
Imports System.Web
Imports System.IO
Imports System.Net
Imports System.Text

Imports System.Globalization
Imports System.Threading
Imports System.Drawing

Partial Class SalesOrder
    Inherits System.Web.UI.Page
    Public rcno As String
    Private Shared GridSelected As String = String.Empty
    Private Shared gScheduler, gddlvalue As String
    'Public conn As MySqlConnection = New MySqlConnection()
    Dim constr As String = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    Dim client As String
    'Public rcno As String

    Public TotDetailRecords As Integer

    Dim gSeq As String
    Dim gServiceDate As Date

    Dim rowdeleted As String
    Dim RowNumber As Integer
    Dim RowIndexSch As Integer

    Dim mode As String
    Dim vStrStatus As String

    Public HasDuplicateServiceRecord As Boolean
    'Public HasDuplicateLocaion As Boolean
    'Public HasDuplicateServices As Boolean
    'Public HasDuplicateFrequency As Boolean

    Public xgrvBillingDetails As GridViewRow

    Public lGLCode As String
    Public lGLDescription As String
    Public lCreditAmount As Decimal

    Public gContractNos As String
    Public gTargetIds As String

    Public gBillNo As String
    Dim rowIndex As Integer

    Public gNetPrice As Decimal
    Public tot As Decimal = 0

    Public IsSuccess As Boolean
    Public isInPage As Boolean = False
    Protected Sub Page_Init(sender As Object, e As EventArgs) Handles Me.Init
        Response.Cache.SetCacheability(HttpCacheability.NoCache)
        Response.Cache.SetExpires(DateTime.Now.AddSeconds(-1))
        Response.Cache.SetNoStore()

    End Sub

    Function TruncateDecimal(value As Decimal, precision As Integer) As Decimal
        Dim stepper As Decimal = Math.Pow(10, precision)
        Dim tmp As Decimal = Math.Truncate(stepper * value)
        Return tmp / stepper
    End Function

    Protected Sub Page_Load(sender As Object, e As EventArgs) Handles Me.Load
        Try
            txtPostStatus.Attributes.Add("readonly", "readonly")
            txtInvoiceNo.Attributes.Add("readonly", "readonly")

            'txtAccountName.Attributes.Add("readonly", "readonly")
            'txtBillAddress.Attributes.Add("readonly", "readonly")
            'txtBillBuilding.Attributes.Add("readonly", "readonly")
            'txtBillStreet.Attributes.Add("readonly", "readonly")
            'txtBillCountry.Attributes.Add("readonly", "readonly")
            'txtBillPostal.Attributes.Add("readonly", "readonly")
            'txtTotal.Attributes.Add("readonly", "readonly")
            txtTaxRatePct.Attributes.Add("readonly", "readonly")

            txtBillingPeriod.Attributes.Add("readonly", "readonly")
            txtCompanyGroup.Attributes.Add("readonly", "readonly")
            txtAccountType.Attributes.Add("readonly", "readonly")
            txtInvoiceAmount.Attributes.Add("readonly", "readonly")
            txtDiscountAmount.Attributes.Add("readonly", "readonly")
            txtAmountWithDiscount.Attributes.Add("readonly", "readonly")

            txtGSTAmount.Attributes.Add("readonly", "readonly")
            txtNetAmount.Attributes.Add("readonly", "readonly")

            txtCreditDays.Attributes.Add("readonly", "readonly")
            txtDueDate.Attributes.Add("readonly", "readonly")
            txtInvoiceDate.Attributes.Add("readonly", "readonly")
            txtInvoiceSchedule.Attributes.Add("readonly", "readonly")

            txtAccountIdBillingQR.Attributes.Add("readonly", "readonly")
            txtAccountNameQR.Attributes.Add("readonly", "readonly")
            txtRecordNoQR.Attributes.Add("readonly", "readonly")
            txtBankIDQR.Attributes.Add("readonly", "readonly")

            txtTotalServiceSelected.Attributes.Add("readonly", "readonly")
            txtTotalInvoiceSelected.Attributes.Add("readonly", "readonly")
            'txtDueDate.Attributes.Add("readonly", "readonly")

            txtGST1.Attributes.Add("readonly", "readonly")

            txtClientNameII.Attributes.Add("readonly", "readonly")


            txtLocation.Attributes.Add("disabled", "true")
            'btnTop.Attributes.Add("onclick", "javascript:scroll(0,0);return false;")

            btnTop.Attributes.Add("onclick", "<script> ResetScrollPosition();</Script>")

            'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            'grvBillingDetailsNew.DataBind()
            'updPanelInvoice.Update()


            If Not Page.IsPostBack Then
                mdlPopUpClient.Hide()
                mdlPopupLocation.Hide()
                mdlImportServices.Hide()
                txtDuplicateServiceRecord.Text = "N"
                tb1.ActiveTabIndex = 0
                MakeMeNull()
                DisableControls()
                EnableNotesControls()
                txtSearch1Status.Text = "O,P"

                txtGroupAuthority.Text = Session("SecGroupAuthority")
                txtCreatedBy.Text = Session("userid")
                'FindLocation()
                Dim Query As String = ""

                Query = "SELECT companygroup FROM tblcompanygroup order by companygroup"
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrp)
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrpSearch)
                PopulateDropDownList(Query, "companygroup", "companygroup", ddlCompanyGrpII)

                Query = "Select SettleType from tblsettletype where DefaultBank is not null or DefaultBank <> ''"
                PopulateDropDownList(Query, "SettleType", "SettleType", ddlPaymentModeQR)


                Query = "Select StaffID from tblStaff where Status = 'O' and Roles <> 'TECHNICAL'"
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchEditedBy)
                PopulateDropDownList(Query, "StaffID", "StaffID", ddlSearchCreatedBy)

                Query = "Select concat(COACode, ' - ', Description) as CCode from tblChartofAccounts where ((GLType is null) or (GLType <> 'BANK')) order by COACode"
                PopulateDropDownList(Query, "CCode", "CCode", ddlCOACode)

                Query = "Select TaxType from tbltaxtype  order by taxtype"
                PopulateDropDownList(Query, "TaxType", "TaxType", txtGST)

                Query = "SELECT Terms FROM tblTerms ORDER BY Seq"
                PopulateDropDownList(Query, "Terms", "Terms", ddlCreditTerms)

                Query = "SELECT StaffId FROM tblstaff where roles= 'SALES MAN' ORDER BY STAFFID"
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanBilling)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSearchSalesman)
                PopulateDropDownList(Query, "StaffId", "StaffId", ddlSalesmanEdit)

                Query = "SELECT contractgroup FROM tblcontractgroup ORDER BY contractgroup"
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroupBilling)
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlContractGroup)
                PopulateDropDownList(Query, "contractgroup", "contractgroup", ddlSearchContractGroup)

                Query = "SELECT Frequency FROM tblServiceFrequency order by Frequency"
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlServiceFrequency)


                Query = "SELECT Frequency FROM tblFrequency  order by Frequency "
                PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFrequency)

                SqlDSGL.SelectCommand = "Select COACode, Description, GLType from tblchartofaccounts order by COACode"
                SqlDSGL.DataBind()

                'Query = "SELECT industry FROM tblindustry ORDER BY industry"
                'PopulateDropDownList(Query, "industry", "industry", ddlServiceFrequency)


                'Query = "SELECT Frequency FROM tblFrequency  order by Frequency "
                'PopulateDropDownList(Query, "Frequency", "Frequency", ddlBillingFrequency)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()

                Dim lBankId As String = ""

                Dim sqlBank As String
                sqlBank = ""
                sqlBank = "Select DefaultBank from tblSettleType where SettleType = '" & ddlPaymentModeQR.Text & "'"

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = sqlBank
                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()

                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows.Count > 0 Then
                    If dt2.Rows(0)("DefaultBank").ToString <> "" Then : lBankId = dt2.Rows(0)("DefaultBank").ToString : End If
                End If
                'conn.Close()
                'Dim Query As String

                ddlBankCodeQR.Items.Clear()
                ddlBankCodeQR.Items.Add("--SELECT--")

                Query = "SELECT CONCAT(BankId, ' - ', Bank) AS codedes FROM tblBank  where BankId = '" & lBankId & "' ORDER BY BankId"
                PopulateDropDownList(Query, "codedes", "codedes", ddlBankCodeQR)

                'Dim sql As String
                'sql = ""

                'If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) = "SINGAPORE" Then
                '    sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
                '    txtGST.Text = "SR"
                'Else
                '    sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
                '    txtGST.Text = "ZR"
                'End If

                'txtGSTSelected.Text = txtGST.Text

                ''sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"

                'Dim command1 As MySqlCommand = New MySqlCommand
                'command1.CommandType = CommandType.Text
                'command1.CommandText = sql
                'command1.Connection = conn

                'Dim dr As MySqlDataReader = command1.ExecuteReader()

                'Dim dt As New DataTable
                'dt.Load(dr)

                'If dt.Rows.Count > 0 Then
                '    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                'End If


                'If conn.State = ConnectionState.Open Then
                '    conn.Close()
                'End If
                '''''''''''''''''''''''''''''''''''''''''''''''

                ''''''''''''''''''''''''''''''''''''''''''''''''
                Dim commandServiceRecordMasterSetup As MySqlCommand = New MySqlCommand
                commandServiceRecordMasterSetup.CommandType = CommandType.Text
                commandServiceRecordMasterSetup.CommandText = "SELECT ShowInvoiceOnScreenLoad, InvoiceRecordMaxRec,DisplayRecordsLocationWise, PostInvoice, InvoiceOnlyEditableByCreator, DefaultTaxCode FROM tblservicerecordmastersetup"
                commandServiceRecordMasterSetup.Connection = conn

                Dim drServiceRecordMasterSetup As MySqlDataReader = commandServiceRecordMasterSetup.ExecuteReader()
                Dim dtServiceRecordMasterSetup As New DataTable
                dtServiceRecordMasterSetup.Load(drServiceRecordMasterSetup)

                txtLimit.Text = dtServiceRecordMasterSetup.Rows(0)("InvoiceRecordMaxRec")
                txtDisplayRecordsLocationwise.Text = dtServiceRecordMasterSetup.Rows(0)("DisplayRecordsLocationWise").ToString
                txtPostUponSave.Text = dtServiceRecordMasterSetup.Rows(0)("PostInvoice").ToString
                txtOnlyEditableByCreator.Text = dtServiceRecordMasterSetup.Rows(0)("InvoiceOnlyEditableByCreator").ToString
                txtDefaultTaxCode.Text = dtServiceRecordMasterSetup.Rows(0)("DefaultTaxCode").ToString
              
                ''''''''''''''''''''''''''''''''''''''''''

                Dim sql As String
                sql = ""


                'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'SR'"
                txtGST.Text = txtDefaultTaxCode.Text

                'sql = "Select TaxRatePct from tbltaxtype where TaxType = 'ZR'"
                'txtGST.Text = "ZR"


                txtGSTSelected.Text = txtGST.Text

                sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtDefaultTaxCode.Text & "'"

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = sql
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()

                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtTaxRatePct.Text = dt.Rows(0)("TaxRatePct").ToString : End If
                End If

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    lblBranch1.Visible = True
                    txtLocation.Visible = True
                    lblBranch.Visible = True
                    ddlBranch.Visible = True
                Else
                    lblBranch1.Visible = False
                    txtLocation.Visible = False
                    lblBranch.Visible = False
                    ddlBranch.Visible = False
                End If

                '''''''''''''''''''''''''''''''''''''''''''
                Session.Add("customerfrom", Request.QueryString("CustomerFrom"))
                If String.IsNullOrEmpty(Session("customerfrom")) = False Then
                    Session.Add("invoiceno", Request.QueryString("VoucherNumber"))
                    If Request.QueryString("VoucherNumber") <> "" Then
                        txtInvoicenoSearch.Text = Session("invoiceno")
                        txtFrom.Text = Session("customerfrom")
                        txtFrom2.Text = Session("customerfrom")

                        btnQuickSearch_Click(sender, e)
                        Session.Remove("invoiceno")
                        Session.Remove("customerfrom")
                        ''''' Retrieve rcno for the Invoice 

                        ''''' Retrieve rcno for the Invoice 
                        GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    End If
                End If


                If String.IsNullOrEmpty(Session("invoicefrom")) = False Then
                    btnADD_Click(sender, e)
                    txtInvoiceNo.Text = Session("invoiceno")
                    txtInvoicenoSearch.Text = Session("invoiceno")
                    txtSearch1Status.Text = "O,P"

                    txtAccountType.SelectedIndex = -1
                    ddlCreditTerms.SelectedIndex = -1
                    ddlSalesmanBilling.SelectedIndex = -1
                    ddlCompanyGrpSearch.SelectedIndex = -1
                    ddlContactTypeSearch.SelectedIndex = -1
                    ddlContractGroupBilling.SelectedIndex = -1
                    btnQuickSearch_Click(sender, e)

                    lblInvoiceId.Visible = True
                    lblInvoiceId1.Text = Session("invoiceno")
                    txtFrom.Text = Session("invoicefrom")
                    txtFrom2.Text = Session("invoicefrom")

                    Session.Remove("invoiceno")
                    Session.Remove("invoicefrom")
                    'GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                End If

                If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
                    'btnADD_Click(sender, e)
                    'txtInvoiceNo.Text = Session("invoiceno")
                    'txtInvoicenoSearch.Text = Session("invoiceno")
                    'txtSearch1Status.Text = "O,P"
                    'btnQuickSearch_Click(sender, e)

                    'lblInvoiceId.Visible = True
                    'lblInvoiceId1.Text = Session("invoiceno")
                    'txtRcno.Text = Session("rcnoinv")
                    'Session.Remove("receiptfrom")
                    txtFrom.Text = Session("receiptfrom")
                    txtFrom1.Text = Session("receiptfrom")
                    txtFrom2.Text = Session("fromtext")

                    'Session.Remove("receiptfrom")
                    Session.Remove("fromtext")

                    If String.IsNullOrEmpty(Session("gridsqlinv")) = False Then

                        txtRcno.Text = Session("rcnoinv")
                        txt.Text = ""
                        txt.Text = Session("gridsqlinv")
                        txtCondition.Text = Session("strcondition")
                        SQLDSInvoice.SelectCommand = txt.Text
                        GridView1.DataSourceID = "SQLDSInvoice"
                        GridView1.DataBind()
                        CalculateTotal()
                        Session.Remove("gridsqlinv")
                    End If
                    GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    Session.Remove("receiptfrom")
                End If


                ''''''''''''''''''''''''''''''''''''''''''''''

                If String.IsNullOrEmpty(Session("cnfrom")) = False Then

                    txtFrom.Text = Session("cnfrom")
                    txtFrom1.Text = Session("cnfrom")
                    txtFrom2.Text = Session("fromtext")

                    'Session.Remove("cnfrom")
                    Session.Remove("fromtext")

                    If String.IsNullOrEmpty(Session("gridsqlinv")) = False Then

                        txtRcno.Text = Session("rcnoinv")
                        txt.Text = ""
                        txt.Text = Session("gridsqlinv")
                        txtCondition.Text = Session("strcondition")
                        SQLDSInvoice.SelectCommand = txt.Text
                        GridView1.DataSourceID = "SQLDSInvoice"
                        GridView1.DataBind()
                        CalculateTotal()
                        Session.Remove("gridsqlinv")
                    End If
                    GridView1_SelectedIndexChanged(New Object(), New EventArgs)
                    Session.Remove("cnfrom")
                End If



                '''''''''''''''''''''''''''''''''''''''''''''''


                txt.Text = SQLDSInvoice.SelectCommand

                If String.IsNullOrEmpty(txtFrom.Text) = True Then

                    If Convert.ToBoolean(dtServiceRecordMasterSetup.Rows(0)("ShowInvoiceOnScreenLoad")) = False Then
                        txt.Text = ""
                        'SqlDataSource1.SelectCommand = ""
                        'GridView1.DataSourceID = "SqlDataSource1"
                        'GridView1.DataBind()
                    Else
                        txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringSalesOrder, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, custAddBuilding, CustAddCountry, CustAddPostal, CustAddCity, CustAddStreet, PrintCounter, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule, Description, EmailSentStatus, EmailSentDate, Location, ServiceAddress  FROM tblsalesOrder WHERE 1=1  "
                        txtSelect.Text = txt.Text
                        txtCondition.Text = " and  (PostStatus = 'O' OR PostStatus = 'P') and GLPeriod = concat(year(now()), if(length(month(now()))=1, concat('0', month(now())),month(now()))) "

                        If txtDisplayRecordsLocationwise.Text = "Y" Then
                            'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"
                            txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

                        End If

                        txtOrderBy.Text = " ORDER BY Rcno DESC, CustName"
                        txt.Text = txt.Text + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text



                        CalculateTotal()
                    End If
                    If String.IsNullOrEmpty(txtFrom2.Text.Trim) = True Then
                        btnBack.Text = "QUIT"
                    End If
                End If
                SQLDSInvoice.SelectCommand = txt.Text
                GridView1.DataSourceID = "SQLDSInvoice"
                GridView1.DataBind()

                txtFrom1.Text = ""
                'txtFrom.Text = ""

                If String.IsNullOrEmpty(txtSelect.Text) = True Then
                    'SqlDSMultiPrint.SelectCommand = ""

                    'grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
                    'grdViewMultiPrint.DataBind()

                    'Else
                    '    SqlDSMultiPrint.SelectCommand = txtSelect.Text + txtCondition.Text + " and (DocTYpe='ARDN') and PostStatus ='P' " + txtOrderBy.Text + " limit " & txtLimit.Text
                    '    '    SqlDSMultiPrint.DataBind()
                    '    grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
                    '    grdViewMultiPrint.DataBind()

                End If

                conn.Close()
                conn.Dispose()

                command1.Dispose()
                command2.Dispose()
                commandServiceRecordMasterSetup.Dispose()
                dtServiceRecordMasterSetup.Dispose()
                dt.Dispose()
                dt2.Dispose()

                txtFrom.Text = ""
            Else

                btnSaveInvoice.Attributes.Add("onclick", "this.disabled=true;" + ClientScript.GetPostBackEventReference(btnSaveInvoice, "").ToString())

                'Exit Sub

                If txtIsPopup.Text = "Team" Then
                    txtIsPopup.Text = "N"
                    'mdlPopUpTeam.Show()
                ElseIf txtIsPopup.Text = "Client" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient.Show()
                End If

                If txtIsPopup.Text = "Client2" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpClient2.Show()
                End If

                If txtIsPopup.Text = "Location" Then
                    txtIsPopup.Text = "N"
                    mdlImportServices.Show()
                End If

                If txtIsPopup.Text = "Staff" Then
                    txtIsPopup.Text = "N"
                    mdlPopupStaff.Show()
                End If

                If txtSearch.Text = "ImportService" Then
                    'txtSearch.Text = "N"
                    mdlPopUpClient.Show()
                End If

                If txtIsPopup.Text = "ContractNo" Then
                    txtIsPopup.Text = "N"
                    mdlPopUpContractNo.Show()
                End If

                If txtIsPopup.Text = "GL" Then
                    txtIsPopup.Text = "N"
                    imgBtnGL_ModalPopupExtender.Show()
                    'Dim TextBoxItemCode1 As mo As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                    'mdl mdlImportServices.Show()
                End If
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "Page_Load", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub CalculateTotal()
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT ifnull(Sum(ValueBase),0) as valueamount, ifnull(Sum(AppliedBase),0) as totalamount, ifnull(Sum(BalanceBase),0) as balanceamount FROM tblSalesOrder  where 1=1 " + txtCondition.Text

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)
            'Convert.ToDecimal(tot.ToString()).ToString("N2")
            If dt.Rows.Count > 0 Then
                txtTotalSalesAmount.Text = Convert.ToDecimal(dt.Rows(0)("valueamount").ToString()).ToString("N2")
                txtTotalInvoiceAmount.Text = Convert.ToDecimal(dt.Rows(0)("totalamount").ToString()).ToString("N2")
                txtTotalOSAmount.Text = Convert.ToDecimal(dt.Rows(0)("balanceamount").ToString()).ToString("N2")
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION CalculateTotal", ex.Message.ToString, "")
        End Try
    End Sub
    Private Sub FindRcno(source As String)
        Try
            Dim sqlstr As String
            sqlstr = ""

            sqlstr = "SELECT Rcno FROM tblSales where InvoiceNumber ='" & source & "'"

            Dim command As MySqlCommand = New MySqlCommand

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            command.CommandText = sqlstr
            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New System.Data.DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                txtRcno.Text = dt.Rows(0)("Rcno").ToString()
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION FindRcno", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub GridView1_DataBound(sender As Object, e As EventArgs) Handles GridView1.DataBound
        If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
            If (isInPage = False) Then

                GridView1.PageIndex = GridView1.PageIndex + 1
                GridView1.DataBind()
            End If

        End If

        If String.IsNullOrEmpty(Session("cnfrom")) = False Then
            If (isInPage = False) Then

                GridView1.PageIndex = GridView1.PageIndex + 1
                GridView1.DataBind()
            End If

        End If
    End Sub

    Protected Sub GridView1_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            If e.Row.Cells(11).Text = "COMPANY" Then
                e.Row.Cells(11).Text = "CORPORATE"
            Else
                e.Row.Cells(11).Text = "RESIDENTIAL"
            End If

            e.Row.Cells(17).Text = (e.Row.Cells(17).Text * (-1)).ToString("N2")
        End If

    End Sub
    Protected Sub GridView1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged

        lblAlert.Text = ""
        lblMessage.Text = ""

        If txtMode.Text = "NEW" Or txtMode.Text = "EDIT" Then
            lblAlert.Text = "CANNOT SELECT RECORD IN ADD/EDIT MODE. SAVE OR CANCEL TO PROCEED"

            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Return
        End If


        Try
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()
            MakeNotesNull()
            txtMode.Text = "View"
            'txtMode.Text = "View"
            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black


            Dim editindex As Integer = GridView1.SelectedIndex

            txtRcno.Text = 0
            ddlContractGroupBilling.SelectedIndex = -1
            'If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
            If txtFrom.Text = "invoice" Then
                txtRcno.Text = Session("rcnoinv")
                Session.Remove("rcnoinv")
                Session.Remove("receiptfrom")
                ddlSalesmanBilling.SelectedIndex = -1
                ddlCreditTerms.SelectedIndex = -1
                ddlContractGroup.SelectedIndex = -1
                ddlContractGroupBilling.SelectedIndex = -1
                'txtFrom.Text = ""

            ElseIf txtFrom.Text = "Corporate" Or txtFrom.Text = "Residential" Then
                FindRcno(txtInvoicenoSearch.Text)
                ddlSalesmanBilling.SelectedIndex = -1
                ddlCreditTerms.SelectedIndex = -1
                ddlContractGroup.SelectedIndex = -1
                ddlContractGroupBilling.SelectedIndex = -1
                'txtFrom.Text = ""
            Else
                txtRcno.Text = GridView1.SelectedRow.Cells(1).Text.Trim
            End If


            PopulateRecord()


            'If String.IsNullOrEmpty(Session("receiptfrom")) = False Then
            '    GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
            'End If

            If txtFrom1.Text = "invoice" Then
                GridView1.SelectedIndex = Convert.ToInt32(txtSelectedRow.Text)
                'txtFrom.Text = ""
            End If

            'grvBillingDetailsNew.DataBind()
            'lbltotalservices.Text = (grvBillingDetailsNew.Rows.Count).ToString
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            updPnlMsg.Update()
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "GridView1_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub PopulateRecord()
        Dim sql As String
        sql = ""
        Try
            grvBillingDetails.ShowHeader = False
            grvBillingDetails.Visible = False

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            sql = "Select PostStatus, GLStatus, SalesOrderNumber, SalesOrderDate, GLPeriod, CompanyGroup, AccountId, ContactType, CustName, BillAddress1, BillBuilding, BillStreet, BillPostal, BillCountry, Billcity, BillState, "
            sql = sql + " Salesman, PONo, OurRef, YourRef, Terms, TermsDay, BatchNo, Comments, RecurringSalesOrder, BillSchedule,"
            sql = sql + " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, DiscountAmount, AmountWithDiscount, GSTAmount, NetAmount, SalesOrderType,  "
            sql = sql + " Receiptbase, Creditbase, balanceBase,  StaffCode, CustAddress1, CustAddBuilding, CustAddStreet,  CustAddCountry, CustAddPostal, CustAddCity, CustAddState, CustAttention,  DueDate, ContractGroup, Printcounter, Description, Location, GST, DocType, GSTRate, GStInclusive, EmailSentStatus, EmailSentDate, "
            sql = sql + " CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn "
            sql = sql & " , ServiceAddress "
            sql = sql + " FROM tblSalesOrder "
            sql = sql + "where rcno = " & Convert.ToInt64(txtRcno.Text)

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)
            If dt.Rows.Count > 0 Then
                ddlContractGroupBilling.SelectedIndex = -1

                'If txtFrom.Text = "invoice" Then
                '    txtFrom.Text = ""
                'End If

                If dt.Rows(0)("SalesOrderType").ToString = "M" Then
                    rbtInvoiceType.SelectedIndex = 0
                Else
                    rbtInvoiceType.SelectedIndex = 1
                End If

                If dt.Rows(0)("PostStatus").ToString <> "" Then : txtPostStatus.Text = dt.Rows(0)("PostStatus").ToString : End If
                If dt.Rows(0)("SalesOrderNumber").ToString <> "" Then : txtInvoiceNo.Text = dt.Rows(0)("SalesOrderNumber").ToString : End If
                If dt.Rows(0)("SalesOrderDate").ToString <> "" Then : txtInvoiceDate.Text = Convert.ToDateTime(dt.Rows(0)("SalesOrderDate")).ToString("dd/MM/yyyy") : End If

                If dt.Rows(0)("GLPeriod").ToString <> "" Then : txtBillingPeriod.Text = dt.Rows(0)("GLPeriod").ToString : End If
                If dt.Rows(0)("CompanyGroup").ToString <> "" Then : txtCompanyGroup.Text = dt.Rows(0)("CompanyGroup").ToString : End If
                If dt.Rows(0)("AccountId").ToString <> "" Then : txtAccountIdBilling.Text = dt.Rows(0)("AccountId").ToString : End If
                If dt.Rows(0)("ContactType").ToString <> "" Then : txtAccountType.Text = dt.Rows(0)("ContactType").ToString : End If
                If dt.Rows(0)("CustName").ToString <> "" Then : txtAccountName.Text = dt.Rows(0)("CustName").ToString : End If
                txtBillingNameEdit.Text = txtAccountName.Text
                If dt.Rows(0)("CustAddress1").ToString <> "" Then : txtBillAddress.Text = dt.Rows(0)("CustAddress1").ToString : End If
                If dt.Rows(0)("CustAddStreet").ToString <> "" Then : txtBillStreet.Text = dt.Rows(0)("CustAddStreet").ToString : End If
                If dt.Rows(0)("CustAddBuilding").ToString <> "" Then : txtBillBuilding.Text = dt.Rows(0)("CustAddBuilding").ToString : End If

                If dt.Rows(0)("CustAddCity").ToString <> "" Then : txtBillCity.Text = dt.Rows(0)("CustAddCity").ToString : End If
                If dt.Rows(0)("CustAddState").ToString <> "" Then : txtBillState.Text = dt.Rows(0)("CustAddState").ToString : End If

                If dt.Rows(0)("CustAddCountry").ToString <> "" Then : txtBillCountry.Text = dt.Rows(0)("CustAddCountry").ToString : End If
                If dt.Rows(0)("CustAddPostal").ToString <> "" Then : txtBillPostal.Text = dt.Rows(0)("CustAddPostal").ToString : End If
                If dt.Rows(0)("CustAttention").ToString <> "" Then : txtContactPerson.Text = dt.Rows(0)("CustAttention").ToString : End If

                ddlSalesmanBilling.SelectedIndex = -1



                If dt.Rows(0)("StaffCode").ToString <> "" Then
                    gddlvalue = dt.Rows(0)("StaffCode").ToString.ToUpper()

                    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanBilling.Items.Add(gddlvalue)
                        ddlSalesmanBilling.Text = gddlvalue

                    Else
                        ddlSalesmanBilling.Text = dt.Rows(0)("StaffCode").ToString.Trim().ToUpper()

                    End If
                End If

                If dt.Rows(0)("StaffCode").ToString <> "" Then
                    gddlvalue = dt.Rows(0)("StaffCode").ToString.ToUpper()

                    If ddlSalesmanEdit.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanEdit.Items.Add(gddlvalue)
                        ddlSalesmanEdit.Text = gddlvalue
                    Else
                        ddlSalesmanEdit.Text = dt.Rows(0)("StaffCode").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("PONo").ToString <> "" Then : txtPONo.Text = dt.Rows(0)("PONo").ToString : End If
                If dt.Rows(0)("OurRef").ToString <> "" Then : txtOurReference.Text = dt.Rows(0)("OurRef").ToString : End If
                If dt.Rows(0)("YourRef").ToString <> "" Then : txtYourReference.Text = dt.Rows(0)("YourRef").ToString : End If


                ddlCreditTerms.SelectedIndex = -1

                If dt.Rows(0)("Terms").ToString.Trim <> "" Then

                    gddlvalue = dt.Rows(0)("Terms").ToString.ToUpper.Trim()

                    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlCreditTerms.Items.Add(gddlvalue)
                        ddlCreditTerms.Text = gddlvalue
                    Else
                        ddlCreditTerms.Text = dt.Rows(0)("Terms").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("BatchNo").ToString <> "" Then : txtBatchNo.Text = dt.Rows(0)("BatchNo").ToString : End If
                If dt.Rows(0)("Comments").ToString <> "" Then : txtComments.Text = dt.Rows(0)("Comments").ToString : End If
                If dt.Rows(0)("TermsDay").ToString <> "" Then : txtCreditDays.Text = dt.Rows(0)("TermsDay").ToString : End If

                If dt.Rows(0)("Description").ToString <> "" Then : txtDescription.Text = dt.Rows(0)("Description").ToString : End If

                If dt.Rows(0)("RecurringSalesOrder").ToString = "N" Then
                    chkRecurringInvoice.Checked = False
                Else
                    chkRecurringInvoice.Checked = True
                End If
                If dt.Rows(0)("BillSchedule").ToString <> "" Then : txtInvoiceSchedule.Text = dt.Rows(0)("BillSchedule").ToString : End If

                If dt.Rows(0)("ValueBase").ToString <> "" Then : txtAmountWithDiscount.Text = dt.Rows(0)("ValueBase").ToString : End If
                If dt.Rows(0)("GSTBase").ToString <> "" Then : txtGSTAmount.Text = dt.Rows(0)("GSTBase").ToString : End If
                If dt.Rows(0)("AppliedBase").ToString <> "" Then : txtNetAmount.Text = dt.Rows(0)("AppliedBase").ToString : End If
                If dt.Rows(0)("BalanceBase").ToString <> "" Then : txtBalanceBase.Text = dt.Rows(0)("BalanceBase").ToString : End If

                If dt.Rows(0)("DiscountAmount").ToString <> "" Then : txtDiscountAmount.Text = dt.Rows(0)("DiscountAmount").ToString : End If
                If dt.Rows(0)("ValueBase").ToString <> "" Then : txtInvoiceAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtDiscountAmount.Text) : End If

                If dt.Rows(0)("Receiptbase").ToString <> "" Then : txtTotalReceiptAmount.Text = dt.Rows(0)("Receiptbase").ToString : End If
                If dt.Rows(0)("CreditBase").ToString <> "" Then : txtTotalCNAmount.Text = dt.Rows(0)("CreditBase").ToString : End If

                If dt.Rows(0)("DueDate").ToString <> "" Then : txtDueDate.Text = Convert.ToDateTime(dt.Rows(0)("DueDate")).ToString("dd/MM/yyyy") : End If
                If dt.Rows(0)("AppliedBase").ToString <> "" Then : txtNetInvoiceAmount.Text = dt.Rows(0)("AppliedBase").ToString : End If
                'If dt.Rows(0)("Location").ToString <> "" Then : txtLocation.Text = dt.Rows(0)("Location").ToString : End If

                txtLocation.Text = dt.Rows(0)("Location").ToString
                If dt.Rows(0)("GST").ToString <> "" Then : txtGST.Text = dt.Rows(0)("GST").ToString : End If
                If dt.Rows(0)("GSTRate").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("GSTRate").ToString : End If

                If dt.Rows(0)("ContractGroup").ToString <> "" Then

                    gddlvalue = dt.Rows(0)("ContractGroup").ToString.ToUpper()

                    If ddlContractGroupBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlContractGroupBilling.Items.Add(gddlvalue)
                        ddlContractGroupBilling.Text = gddlvalue
                    Else
                        ddlContractGroupBilling.Text = dt.Rows(0)("ContractGroup").ToString.Trim().ToUpper()
                    End If
                End If

                If dt.Rows(0)("DocType").ToString <> "" Then : txtDocType.Text = dt.Rows(0)("DocType").ToString : End If

                'If dt.Rows(0)("RecurringInvoice").ToString = "N" Then
                '    chkRecurringInvoice.Checked = False
                'Else
                '    chkRecurringInvoice.Checked = True
                'End If

                chkGSTInclusive.Checked = dt.Rows(0)("gstInclusive").ToString
                txtRecordCreatedBy.Text = dt.Rows(0)("CreatedBy").ToString

                txtContactPersonEdit.Text = txtContactPerson.Text
                txtBillAddressEdit.Text = txtBillAddress.Text
                txtBillBuildingEdit.Text = txtBillBuilding.Text
                txtBillStreetEdit.Text = txtBillStreet.Text

                txtBillCityEdit.Text = txtBillCity.Text
                txtBillStateEdit.Text = txtBillState.Text

                txtBillPostalEdit.Text = txtBillPostal.Text
                txtBillCountryEdit.Text = txtBillCountry.Text

                txtOurRefEdit.Text = txtOurReference.Text
                txtYourRefEdit.Text = txtYourReference.Text
                txtPONOEdit.Text = txtPONo.Text
                txtRemarksEdit.Text = txtComments.Text
                txtDescriptionEdit.Text = txtDescription.Text
                lblNotesKeyField.Text = txtInvoiceNo.Text

                btnEditBillingDetails.Visible = True
                btnEditPONo.Visible = True
                btnEditComments.Visible = True
                btnEditBillingName.Visible = True
                btnEditSalesman.Visible = True

                tb1.ActiveTabIndex = 0
            End If

            txtMode.Text = "View"

            '''''''''''''''''''''''''''''''''''
            '    Label26.Text = txtInvoiceNo.Text


            ' ''''''SASI - 20191115''''''''

            'Dim qry As String = "SELECT recordno,filename,servicedate,filenamelink,filedescription FROM tblfileupload LEFT JOIN TBLSERVICErecord on tblfileupload.fileref = tblservicerecord.recordno"
            'qry = qry + " where manualreport='Y' and fileref in (SELECT RefType FROM tblsalesOrderdetail where SalesOrderNumber = '" + txtInvoiceNo.Text + "');"
            'SqlDSManualReports.SelectCommand = qry
            'SqlDSManualReports.DataBind()
            'grdManualReports.DataBind()
            ''   Label26.Text = txtInvoiceNo.Text + " " + qry

            ' '''''END SASI - 20191115'''''''



            SqlDSSalesDetail.SelectCommand = "select SalesOrderNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, SalesOrderType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode from tblSalesOrderDetail where SalesOrderNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
            'grvBillingDetailsNew.PageSize = Convert.ToInt16(ddlViewServiceRecs.SelectedItem.Text)
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()



            ' ''''''''''''''''''''''''''''''''''''''''
            ''Start:Retrive Service Records
            'Dim commandService As MySqlCommand = New MySqlCommand

            'commandService.CommandType = CommandType.Text
            'commandService.CommandText = "SELECT count(a.receiptnumber) as totreceiptrec FROM tblrecv a, tblrecvdet b where a.receiptnumber = b.receiptnumber and a.PostStatus <> 'V' and b.reftype ='" & txtInvoiceNo.Text & "'"
            'commandService.Connection = conn

            'Dim drService As MySqlDataReader = commandService.ExecuteReader()
            'Dim dtService As New DataTable
            'dtService.Load(drService)

            'If dtService.Rows.Count > 0 Then
            '    txtTotReceipts.Text = Val(dtService.Rows(0)("totreceiptrec").ToString).ToString
            '    btnReceipts.Text = "RECEIPTS [" + Val(dtService.Rows(0)("totreceiptrec").ToString).ToString + "]"
            '    txtTotalReceipts.Text = Val(dtService.Rows(0)("totreceiptrec").ToString).ToString
            '    'btnServiceRecords.Enabled = True
            '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            'End If

            ''End:Retrieve Service Records
            ' ''''''''''''''''''''''''''
            ' ''''''''''''''''''''''''''''''''''''''''
            ''Start:Retrive CN Records
            'Dim commandCNDN As MySqlCommand = New MySqlCommand

            'commandCNDN.CommandType = CommandType.Text
            'commandCNDN.CommandText = "SELECT count(distinct(a.SalesOrderNumber)) as totcndnrec FROM tblSalesOrder a, tblSalesOrderDetail b where a.SalesOrderNumber = b.SalesOrderNumber and ((a.DocTYpe='ARCN') or (a.Doctype = 'ARDN')) and a.PostStatus <> 'V' and b.SourceInvoice ='" & txtInvoiceNo.Text & "'"
            'commandCNDN.Connection = conn

            'Dim drCNDN As MySqlDataReader = commandCNDN.ExecuteReader()
            'Dim dtCNDN As New DataTable
            'dtCNDN.Load(drCNDN)

            'If dtCNDN.Rows.Count > 0 Then
            '    'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
            '    btnCNDN.Text = "CN/DN [" + Val(dtCNDN.Rows(0)("totcndnrec").ToString).ToString + "]"
            '    'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

            '    'btnServiceRecords.Enabled = True
            '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            'End If

            ''End:Retrieve CN Records
            ' ''''''''''''''''''''''''''


            ' ''''''''''''''''''''''''''''''''''''''''
            ''Start:Retrive Journal Records
            'Dim commandJournal As MySqlCommand = New MySqlCommand

            'commandJournal.CommandType = CommandType.Text
            'commandJournal.CommandText = "SELECT count(a.VoucherNumber) as totjournalrec FROM tblJrnv a, tblJrnvDet b where a.VoucherNumber = b.VoucherNumber and a.PostStatus <> 'V' and b.RefTYpe ='" & txtInvoiceNo.Text & "'"
            'commandJournal.Connection = conn

            'Dim drJournal As MySqlDataReader = commandJournal.ExecuteReader()
            'Dim dtJournal As New DataTable
            'dtJournal.Load(drJournal)

            'If dtJournal.Rows.Count > 0 Then
            '    'txtTotReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString
            '    btnJournal.Text = "JOURNAL [" + Val(dtJournal.Rows(0)("totjournalrec").ToString).ToString + "]"
            '    'txtTotalReceipts.Text = Val(dtCNDN.Rows(0)("totreceiptrec").ToString).ToString

            '    'btnServiceRecords.Enabled = True
            '    'btnServiceRecords.ForeColor = System.Drawing.Color.Black
            'End If

            ''End:Retrieve Journal Records
            ' ''''''''''''''''''''''''''

            Dim commandDetailTotal As MySqlCommand = New MySqlCommand

            commandDetailTotal.CommandType = CommandType.Text
            commandDetailTotal.CommandText = "SELECT count(rcno) as TotDetRec, sum(ValueBase) as TotalwithDisc, sum(GSTBase) as TotalGST, sum(AppliedBase) as Totalappliedbase FROM tblSalesOrderDetail  where SalesOrderNumber ='" & txtInvoiceNo.Text & "'"
            commandDetailTotal.Connection = conn

            Dim drDetailTotal As MySqlDataReader = commandDetailTotal.ExecuteReader()
            Dim dtDetailTotal As New DataTable
            dtDetailTotal.Load(drDetailTotal)

            If dtDetailTotal.Rows.Count > 0 Then
                txtTotalWithDiscAmt.Text = dtDetailTotal.Rows(0)("TotalwithDisc").ToString
                txtTotalGSTAmt.Text = dtDetailTotal.Rows(0)("TotalGST").ToString
                txtTotalWithGST.Text = dtDetailTotal.Rows(0)("Totalappliedbase").ToString
                txtTotDetRec.Text = dtDetailTotal.Rows(0)("TotDetRec").ToString
            End If
            commandDetailTotal.Dispose()
            dtDetailTotal.Dispose()

            ''''''''''''''''''''''''
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            'commandService.Dispose()
            'dtService.Dispose()
            dr.Close()
            drDetailTotal.Close()
            'PopulateInvoiceDetailGrid()

            'PopulateGLCodes()

            DisplayGLGrid()
            IsDetailBlank()


            'grvBillingDetailsNew.DataBind()
            lbltotalservices.Text = (grvBillingDetailsNew.Rows.Count).ToString & " out of " & txtTotDetRec.Text

            If txtDocType.Text <> "ARSO" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnCopy.Enabled = False
                btnCopy.ForeColor = System.Drawing.Color.Gray

                btnRecalculate.Enabled = False
                btnRecalculate.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = False
                btnPrint.ForeColor = System.Drawing.Color.Gray

                btnMultiPrint.Enabled = False
                btnMultiPrint.ForeColor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray

                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnDeleteAll.Enabled = False
                btnDeleteAll.ForeColor = System.Drawing.Color.Gray

                'btnReceipts.Enabled = False
                'btnReceipts.ForeColor = System.Drawing.Color.Gray

                btnReceipts.Enabled = True
                btnReceipts.ForeColor = System.Drawing.Color.Black

                btnCNDN.Enabled = True
                btnCNDN.ForeColor = System.Drawing.Color.Black

                btnJournal.Enabled = False
                btnJournal.ForeColor = System.Drawing.Color.Gray
                'grvServiceRecDetailsnew.Enabled = False
                grvServiceRecDetails.Enabled = False

                Exit Sub

            End If

            btnJournal.Enabled = True
            btnJournal.ForeColor = System.Drawing.Color.Black

            If txtPostStatus.Text = "P" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                'btnCopy.Enabled = True
                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black

                btnChangeStatus.Enabled = False
                btnChangeStatus.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnDeleteAll.Enabled = False
                btnDeleteAll.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = True
                btnPrint.ForeColor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.ForeColor = System.Drawing.Color.Black

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray
                'btnDelete.Enabled = True
                btnReceipts.Enabled = True
                btnReceipts.ForeColor = System.Drawing.Color.Black

                btnCNDN.Enabled = True
                btnCNDN.ForeColor = System.Drawing.Color.Black

                grvServiceRecDetails.Enabled = True
            Else
                btnEdit.Enabled = True
                btnEdit.ForeColor = System.Drawing.Color.Black
                'btnCopy.Enabled = True
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray

                btnChangeStatus.Enabled = True
                btnChangeStatus.ForeColor = System.Drawing.Color.Black

                btnDelete.Enabled = True
                btnDelete.ForeColor = System.Drawing.Color.Black

                btnDeleteAll.Enabled = False
                btnDeleteAll.ForeColor = System.Drawing.Color.Gray

                btnPrint.Enabled = True
                btnPrint.ForeColor = System.Drawing.Color.Black

                btnMultiPrint.Enabled = True
                btnMultiPrint.ForeColor = System.Drawing.Color.Black

                btnPost.Enabled = True
                btnPost.ForeColor = System.Drawing.Color.Black
                btnReceipts.Enabled = False
                btnReceipts.ForeColor = System.Drawing.Color.Gray

                btnCNDN.Enabled = False
                btnCNDN.ForeColor = System.Drawing.Color.Gray
                'btnDelete.Enabled = True
            End If

            btnCopy.Enabled = True
            btnCopy.ForeColor = System.Drawing.Color.Black

            btnRecalculate.Enabled = True
            btnRecalculate.ForeColor = System.Drawing.Color.Black

            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            AccessControl()
            'End If


            If txtPostStatus.Text = "P" Then
                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray
                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray
            Else
                '    btnEdit.Enabled = True
                '    btnEdit.ForeColor = System.Drawing.Color.Black
                '    'btnCopy.Enabled = True
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray


            End If

            If Convert.ToDecimal(txtTotalReceiptAmount.Text) > 0.0 Then
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
                'btnQuickReceipt.Enabled = False
                'btnQuickReceipt.ForeColor = System.Drawing.Color.Gray
            End If

            If Convert.ToDecimal(txtTotalCNAmount.Text) > 0.0 Then
                btnReverse.Enabled = False
                btnReverse.ForeColor = System.Drawing.Color.Gray
            End If

            Dim IsLock = FindSOPeriod(txtBillingPeriod.Text)

            'If IsLock = "Y" Then
            '    btnEdit.Enabled = False
            '    btnEdit.ForeColor = System.Drawing.Color.Gray
            '    btnPost.Enabled = False
            '    btnPost.ForeColor = System.Drawing.Color.Gray
            '    btnReverse.Enabled = False
            '    btnReverse.ForeColor = System.Drawing.Color.Gray
            '    btnChangeStatus.Enabled = False
            '    btnChangeStatus.ForeColor = System.Drawing.Color.Gray
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If

            If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
                If txtOnlyEditableByCreator.Text = "1" Then
                    If txtRecordCreatedBy.Text.Trim <> txtCreatedBy.Text.Trim Then
                        btnEdit.Enabled = False
                        btnPost.Enabled = False
                        btnReverse.Enabled = False
                        'btnCopy.Enabled = False
                        btnChangeStatus.Enabled = False

                        btnEdit.ForeColor = System.Drawing.Color.Gray
                        btnPost.ForeColor = System.Drawing.Color.Gray
                        btnReverse.ForeColor = System.Drawing.Color.Gray
                        btnChangeStatus.ForeColor = System.Drawing.Color.Gray
                    End If
                End If
            End If


            'If Val(dtService.Rows(0)("totreceiptrec").ToString).ToString = 0 Then
            '    btnReceipts.Text = False
            '    btnReceipts.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnReceipts.Text = True
            '    btnReceipts.ForeColor = System.Drawing.Color.Black
            'End If

            'If Val(dtCNDN.Rows(0)("totcndnrec").ToString).ToString = 0 Then
            '    btnCNDN.Enabled = False
            '    btnCNDN.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnCNDN.Enabled = True
            '    btnCNDN.ForeColor = System.Drawing.Color.Black
            'End If

            'If Val(dtJournal.Rows(0)("totjournalrec").ToString).ToString = 0 Then
            '    btnJournal.Enabled = False
            '    btnJournal.ForeColor = System.Drawing.Color.Gray
            'Else
            '    btnJournal.Enabled = True
            '    btnJournal.ForeColor = System.Drawing.Color.Black
            'End If

            updPanelInvoice.Update()
            updPnlMsg.Update()


        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PopulateRecord", ex.Message.ToString, txtRcno.Text & "-" & Right(sql, 1900))
        End Try
    End Sub
    'Function
    Private Sub IsDetailBlank()

        'grvBillingDetailsNew.DataBind()
        'grvBillingDetails.DataBind()


        Dim TextBoxItemTypeNew As TextBox
        Dim TextBoxItemType As DropDownList

        Dim rownew As String
        Dim rowold As Integer

        rownew = "0"
        rowold = 0

        If grvBillingDetailsNew.Rows.Count > 0 Then
            TextBoxItemTypeNew = CType(grvBillingDetailsNew.Rows(0).Cells(0).FindControl("txtItemTypeGVB"), TextBox)
            rownew = String.IsNullOrEmpty(TextBoxItemTypeNew.Text)
            If String.IsNullOrEmpty(rownew) = False Then
                rownew = "1"
            End If
        End If

        If grvBillingDetails.Rows.Count > 0 Then
            TextBoxItemType = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
            rowold = TextBoxItemType.SelectedIndex
        End If


        If rownew = "1" And rowold = 0 Then
            'grvBillingDetails.ShowHeader = False
            grvBillingDetails.Visible = False
            'FirstGridViewRowBillingDetailsRecs()
            'grvBillingDetails.ShowHeader = True

            'UpdatePanel2.Update()
            UpdatePanel5.Update()
            'updPanelInvoice.Update()
        End If

        'If grvBillingDetails.Rows.Count > 0 Then

        'End If


        If rownew = "0" And rowold = 0 Then
            grvBillingDetails.ShowHeader = True
            grvBillingDetails.Visible = True
            FirstGridViewRowBillingDetailsRecs()
            grvBillingDetails.ShowHeader = True
            'updPanelInvoice.Update()
        End If
    End Sub
    Private Sub GenerateSalesOrderNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String
            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtInvoiceDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If

            lPrefix = Format(CDate(strdate), "yyyyMM")
            lInvoiceNo = "SO" + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = "SO" + lYear
            lSuffixVal = 0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                'Start: Continuous Number
                'If lMonth = "01" Then
                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "02" Then
                '    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "03" Then
                '    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "04" Then
                '    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "05" Then
                '    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "06" Then
                '    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "07" Then
                '    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "08" Then
                '    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "09" Then
                '    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "10" Then
                '    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "11" Then
                '    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "12" Then
                '    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)
                commandDocControlEdit.Dispose()
                dt2.Dispose()
                dr2.Close()
            Else

                Dim lSuffixVal1 As String
                'Dim lSuffixVal2 As String
                'Dim lSuffixVal3 As String
                'Dim lSuffixVal4 As String
                'Dim lSuffixVal5 As String
                'Dim lSuffixVal6 As String
                'Dim lSuffixVal7 As String
                'Dim lSuffixVal8 As String
                'Dim lSuffixVal9 As String
                'Dim lSuffixVal10 As String
                'Dim lSuffixVal11 As String
                'Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                'lSuffixVal2 = 0
                'lSuffixVal3 = 0
                'lSuffixVal4 = 0
                'lSuffixVal5 = 0
                'lSuffixVal6 = 0
                'lSuffixVal7 = 0
                'lSuffixVal8 = 0
                'lSuffixVal9 = 0
                'lSuffixVal10 = 0
                'lSuffixVal11 = 0
                'lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                    'ElseIf lMonth = "02" Then
                    '    lSuffixVal2 = 1
                    'ElseIf lMonth = "03" Then
                    '    lSuffixVal3 = 1
                    'ElseIf lMonth = "04" Then
                    '    lSuffixVal4 = 1
                    'ElseIf lMonth = "05" Then
                    '    lSuffixVal5 = 1
                    'ElseIf lMonth = "06" Then
                    '    lSuffixVal6 = 1
                    'ElseIf lMonth = "07" Then
                    '    lSuffixVal7 = 1
                    'ElseIf lMonth = "08" Then
                    '    lSuffixVal8 = 1
                    'ElseIf lMonth = "09" Then
                    '    lSuffixVal9 = 1
                    'ElseIf lMonth = "10" Then
                    '    lSuffixVal10 = 1
                    'ElseIf lMonth = "11" Then
                    '    lSuffixVal11 = 1
                    'ElseIf lMonth = "12" Then
                    '    lSuffixVal12 = 1
                End If

                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                         "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & ", 0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1

                'Start: Continuous Number

                '    'Start: Reset at every month
                '    If lMonth = "01" Then
                '        lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "02" Then
                '        lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString
                '        strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "03" Then
                '        lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "04" Then
                '        lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "05" Then
                '        lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "06" Then
                '        lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "07" Then
                '        lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "08" Then
                '        lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString
                '        strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "09" Then
                '        lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "10" Then
                '        lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "11" Then
                '        lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString

                '        strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    ElseIf lMonth = "12" Then
                '        lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                '        lSetWidth = dt.Rows(0)("Width").ToString
                '        strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                '    End If

                '    Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                '    commandDocControlEdit.CommandType = CommandType.Text
                '    commandDocControlEdit.CommandText = strUpdate
                '    commandDocControlEdit.Connection = conn

                '    Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                '    Dim dt2 As New DataTable
                '    dt2.Load(dr2)
                'Else

                '    Dim lSuffixVal1 As String
                '    Dim lSuffixVal2 As String
                '    Dim lSuffixVal3 As String
                '    Dim lSuffixVal4 As String
                '    Dim lSuffixVal5 As String
                '    Dim lSuffixVal6 As String
                '    Dim lSuffixVal7 As String
                '    Dim lSuffixVal8 As String
                '    Dim lSuffixVal9 As String
                '    Dim lSuffixVal10 As String
                '    Dim lSuffixVal11 As String
                '    Dim lSuffixVal12 As String

                '    lSuffixVal1 = 0
                '    lSuffixVal2 = 0
                '    lSuffixVal3 = 0
                '    lSuffixVal4 = 0
                '    lSuffixVal5 = 0
                '    lSuffixVal6 = 0
                '    lSuffixVal7 = 0
                '    lSuffixVal8 = 0
                '    lSuffixVal9 = 0
                '    lSuffixVal10 = 0
                '    lSuffixVal11 = 0
                '    lSuffixVal12 = 0

                '    If lMonth = "01" Then
                '        lSuffixVal1 = 1
                '    ElseIf lMonth = "02" Then
                '        lSuffixVal2 = 1
                '    ElseIf lMonth = "03" Then
                '        lSuffixVal3 = 1
                '    ElseIf lMonth = "04" Then
                '        lSuffixVal4 = 1
                '    ElseIf lMonth = "05" Then
                '        lSuffixVal5 = 1
                '    ElseIf lMonth = "06" Then
                '        lSuffixVal6 = 1
                '    ElseIf lMonth = "07" Then
                '        lSuffixVal7 = 1
                '    ElseIf lMonth = "08" Then
                '        lSuffixVal8 = 1
                '    ElseIf lMonth = "09" Then
                '        lSuffixVal9 = 1
                '    ElseIf lMonth = "10" Then
                '        lSuffixVal10 = 1
                '    ElseIf lMonth = "11" Then
                '        lSuffixVal11 = 1
                '    ElseIf lMonth = "12" Then
                '        lSuffixVal12 = 1
                '    End If

                '    Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                '    commandDocControlInsert.CommandType = CommandType.Text
                '    'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '    '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                '    commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '             "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"

                '    commandDocControlInsert.Connection = conn

                '    Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                '    Dim dt2 As New DataTable
                '    dt2.Load(dr2)

                '    lSetWidth = 6
                '    lSuffixVal = 1

                '    'Start: Reset at every month
            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            gBillNo = lInvoiceNo + lSuffix
            txtInvoiceNo.Text = lInvoiceNo + lSuffix

            dt.Dispose()
            commandDocControl.Dispose()
            conn.Close()
            conn.Dispose()
            dr.Close()


        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION GenerateInvoiceNo", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub GenerateBillingSchedule()

        Dim lPrefix As String
        Dim lYear As String
        Dim lMonth As String
        Dim lInvoiceNo As String
        Dim lSuffixVal As String
        Dim lSuffix As String
        Dim lSetWidth As Integer
        Dim lSetZeroes As String
        Dim lSeparator As String
        Dim strUpdate As String
        lSeparator = "-"
        strUpdate = ""

        Dim strdate As Date
        Dim d As Date
        If Date.TryParseExact(txtInvoiceDate.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
            strdate = d.ToShortDateString
        End If

        lPrefix = Format(CDate(strdate), "yyyyMM")
        lInvoiceNo = "SBS" + lPrefix + "-"
        lMonth = Right(lPrefix, 2)
        lYear = Left(lPrefix, 4)

        lPrefix = "SBS" + lYear
        lSuffixVal = 0

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        If conn.State = ConnectionState.Open Then
            conn.Close()
            conn.Dispose()
        End If
        conn.Open()

        Dim commandDocControl As MySqlCommand = New MySqlCommand
        commandDocControl.CommandType = CommandType.Text
        commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
        commandDocControl.Connection = conn

        Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then

            If lMonth = "01" Then
                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "02" Then
                lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString
                strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "03" Then
                lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "04" Then
                lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "05" Then
                lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "06" Then
                lSuffixVal = dt.Rows(0)("Period06").ToString
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "07" Then
                lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "08" Then
                lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString
                strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "09" Then
                lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "10" Then
                lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "11" Then
                lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            ElseIf lMonth = "12" Then
                lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString
                strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

            End If

            Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

            commandDocControlEdit.CommandType = CommandType.Text
            commandDocControlEdit.CommandText = strUpdate
            commandDocControlEdit.Connection = conn

            Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)
        Else

            Dim lSuffixVal1 As String
            Dim lSuffixVal2 As String
            Dim lSuffixVal3 As String
            Dim lSuffixVal4 As String
            Dim lSuffixVal5 As String
            Dim lSuffixVal6 As String
            Dim lSuffixVal7 As String
            Dim lSuffixVal8 As String
            Dim lSuffixVal9 As String
            Dim lSuffixVal10 As String
            Dim lSuffixVal11 As String
            Dim lSuffixVal12 As String

            lSuffixVal1 = 0
            lSuffixVal2 = 0
            lSuffixVal3 = 0
            lSuffixVal4 = 0
            lSuffixVal5 = 0
            lSuffixVal6 = 0
            lSuffixVal7 = 0
            lSuffixVal8 = 0
            lSuffixVal9 = 0
            lSuffixVal10 = 0
            lSuffixVal11 = 0
            lSuffixVal12 = 0

            If lMonth = "01" Then
                lSuffixVal1 = 1
            ElseIf lMonth = "02" Then
                lSuffixVal2 = 1
            ElseIf lMonth = "03" Then
                lSuffixVal3 = 1
            ElseIf lMonth = "04" Then
                lSuffixVal4 = 1
            ElseIf lMonth = "05" Then
                lSuffixVal5 = 1
            ElseIf lMonth = "06" Then
                lSuffixVal6 = 1
            ElseIf lMonth = "07" Then
                lSuffixVal7 = 1
            ElseIf lMonth = "08" Then
                lSuffixVal8 = 1
            ElseIf lMonth = "09" Then
                lSuffixVal9 = 1
            ElseIf lMonth = "10" Then
                lSuffixVal10 = 1
            ElseIf lMonth = "11" Then
                lSuffixVal11 = 1
            ElseIf lMonth = "12" Then
                lSuffixVal12 = 1
            End If

            Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

            commandDocControlInsert.CommandType = CommandType.Text
            'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
            '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

            commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                     "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"

            commandDocControlInsert.Connection = conn

            Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
            Dim dt2 As New DataTable
            dt2.Load(dr2)

            lSetWidth = 6
            lSuffixVal = 1

        End If

        lSetZeroes = ""

        Dim i As Integer
        If lSetWidth > 0 Then
            For i = 1 To lSetWidth - (Len(lSuffixVal))
                lSetZeroes = lSetZeroes & "0"
            Next i
            'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
            '    strZeros = "000000"
            '    setWidth = 6
            'Else                                        ' Use vLength and save it in Doc Control
            '    For i = 1 To pLength
            '        strZeros = strZeros & "0"
            '    Next i
            '    setWidth = pLength
        End If
        lSuffix = lSetZeroes + lSuffixVal.ToString()
        gBillNo = lInvoiceNo + lSuffix
        txtInvoiceNo.Text = lInvoiceNo + lSuffix
    End Sub
    Public Sub MakeMeNull()
        Try
            'txtContractDate.Text = System.DateTime.Now.Date.ToString("dd/MM/yyyy")
            'Session("contractdetailfrom") = ""
            'Session("contractno") = ""
            'Session("serviceschedulefrom") = ""
            'Session("contractfrom") = ""

            lblMessage.Text = ""
            lblAlert.Text = ""
            txtMode.Text = ""

            txtAccountId.Text = ""
            txtClientName.Text = ""
            txtLocationId.Text = ""
            ddlContractNo.Text = ""
            txtRowSelected.Text = "0"
            'txtSearch1Status.Text = "O,P"

            'txtSearch1Status.Text = "O"
            txtBatchNo.Text = ""
            'txtMode.Text = "NEW"
            txtRcno.Text = "0"
            txtServiceBy.Text = ""
            txtTotalServiceSelected.Text = "0.00"

            txtContractTE.Text = ""
            txtLogDocNo.Text = "'"

            grvBillingDetails.ShowHeader = True
            grvBillingDetails.Visible = True

            txtTotReceipts.Text = "0"
            ddlViewServiceRecs.Text = 15

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray
            'btnCopy.Enabled = False
            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnMultiPrint.Enabled = False
            btnMultiPrint.ForeColor = System.Drawing.Color.Gray

            btnPost.Enabled = False
            btnPost.ForeColor = System.Drawing.Color.Gray

            btnDeleteAll.Enabled = False
            btnDeleteAll.ForeColor = System.Drawing.Color.Gray

            btnSaveInvoice.Enabled = True

            btnReceipts.Text = "RECEIPTS"
            btnCNDN.Text = "CN/DN"
            btnJournal.Text = "JOURNAL"
            '''''''''''''''''''''''''''''''''''''''''''''''''''''
            PopulateGLCodes()
            ''''''''''''''''''''''''''''''''''''''''''''''''
            'txtModeDetail.Text = "E"
            Label43.Text = "SERVICE BILLING DETAILS"
            updPnlMsg.Update()

            DisableControls()
            FirstGridViewRowBillingDetailsRecs()

            SqlDSServices.SelectCommand = ""
            grvServiceRecDetails.DataSourceID = "SqlDSServices"
            grvServiceRecDetails.DataBind()

            'FirstGridViewRowServiceRecs()

            Page.ClientScript.RegisterStartupScript(Me.GetType(), "alert", "currentdatetimeinvoice();", True)
            'Me.cpnlSearchServiceRecords.Collapsed = True
            'Me.cpnlSearchServiceRecords.ClientState = "true"
            'Me.cpnlServiceBillingDetails.Collapsed = True
            'Me.cpnlServiceBillingDetails.ClientState = "true"
            'Me.cpnlInvoiceDetails.Collapsed = False

            'Dim Query As String

            'Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
            ''Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
            'Query = "Select * from tblbillingproducts  "
            'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

            'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            'Query = "Select * from tblunitms "
            'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)

            updpnlServiceRecs.Update()

            updPnlMsg.Update()
            'UpdatePanel1.Update()
            updPanelInvoice.Update()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION MakeMeNull", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub AccessControl()
        Try
            'If Session("SecGroupAuthority") <> "ADMINISTRATOR" Then
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            command.CommandType = CommandType.Text
            'command.CommandText = "SELECT X0252,  X0252Add, X0252Edit, X0252Delete, X0252Print FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"
            command.CommandText = "SELECT x0259SalesOrder,  X0259SalesOrderAdd, X0259SalesOrderEdit, X0259SalesOrderDelete, X0259SalesOrderPrint, X0259SalesOrderPost, X0259SalesOrderReverse,  x0259SalesOrderMultiPrint,  x0259SalesOrderEditCompanyName, x0259SalesOrderEditBillingAddress, x0259SalesOrderEditOurRef, x0259SalesOrderEditSalesman, x0259SalesOrderEditRemarks,  x0259SalesOrderExport, x0259SalesOrderView, x0259SalesOrderEmail FROM tblGroupAccess where GroupAccess = '" & Session("SecGroupAuthority") & "'"

            command.Connection = conn

            Dim dr As MySqlDataReader = command.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)
            'conn.Close()

            If dt.Rows.Count > 0 Then
                If Not IsDBNull(dt.Rows(0)("x0259SalesOrder")) Then
                    If String.IsNullOrEmpty(Convert.ToBoolean(dt.Rows(0)("x0259SalesOrder"))) = False Then
                        If Convert.ToBoolean(dt.Rows(0)("x0259SalesOrder")) = False Then
                            Response.Redirect("Home.aspx")
                        End If
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("X0259SalesOrderAdd")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("X0259SalesOrderAdd")) = False Then
                        Me.btnADD.Enabled = dt.Rows(0)("X0259SalesOrderAdd").ToString()
                        Me.btnCopy.Enabled = dt.Rows(0)("X0259SalesOrderAdd").ToString()
                    End If
                End If

                'If Not IsDBNull(dt.Rows(0)("x0252PrintInvoice")) Then
                '    If String.IsNullOrEmpty(dt.Rows(0)("x0252PrintInvoice")) = False Then
                '        Me.btnPrintInvoice1.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice2.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice3.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice4.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice5.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice6.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice7.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice8.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()

                '        Me.btnPrintInvoice9.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        Me.btnPrintInvoice10.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()
                '        'Me.btnPrintInvoice11.Visible = dt.Rows(0)("x0252PrintInvoice").ToString()

                '    End If
                'End If

                If Not IsDBNull(dt.Rows(0)("x0259SalesOrderExport")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0259SalesOrderExport")) = False Then
                        Me.btnExportInvoice1.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice2.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice3.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice4.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice5.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice6.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice7.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice8.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice9.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                        Me.btnExportInvoice10.Visible = dt.Rows(0)("x0259SalesOrderExport").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x0259SalesOrderView")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0259SalesOrderView")) = False Then
                        Me.btnViewInvoice1.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice2.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice3.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice4.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice5.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice6.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice7.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice8.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice9.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                        Me.btnViewInvoice10.Visible = dt.Rows(0)("x0259SalesOrderView").ToString()
                    End If
                End If

                If Not IsDBNull(dt.Rows(0)("x0259SalesOrderEmail")) Then
                    If String.IsNullOrEmpty(dt.Rows(0)("x0259SalesOrderEmail")) = False Then
                        Me.btnEmailInvoice1.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice2.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice3.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice4.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice5.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice6.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice7.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice8.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice9.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice10.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                        Me.btnEmailInvoice11.Visible = dt.Rows(0)("x0259SalesOrderEmail").ToString()
                    End If
                End If





                If txtMode.Text = "View" Then
                    If Not IsDBNull(dt.Rows(0)("X0259SalesOrderEdit")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("X0259SalesOrderEdit")) = False Then
                            Me.btnEdit.Enabled = dt.Rows(0)("X0259SalesOrderEdit").ToString()
                            'btnEditComments.Enabled = dt.Rows(0)("X0252Edit").ToString()
                            Me.btnRecalculate.Enabled = dt.Rows(0)("X0259SalesOrderEdit").ToString()

                            btnEditBillingName.Visible = dt.Rows(0)("x0259SalesOrderEditCompanyName").ToString()
                            btnEditBillingDetails.Visible = dt.Rows(0)("x0259SalesOrderEditBillingAddress").ToString()
                            btnEditPONo.Visible = dt.Rows(0)("x0259SalesOrderEditOurRef").ToString()
                            btnEditSalesman.Visible = dt.Rows(0)("x0259SalesOrderEditSalesman").ToString()
                            btnEditComments.Visible = dt.Rows(0)("x0259SalesOrderEditRemarks").ToString()
                        End If
                    End If

                    'If Not IsDBNull(dt.Rows(0)("X0252Delete")) Then
                    '    If String.IsNullOrEmpty(dt.Rows(0)("X0252Delete")) = False Then
                    '        Me.btnDelete.Enabled = dt.Rows(0)("X0252Delete").ToString()
                    '        Me.btnDeleteAll.Enabled = dt.Rows(0)("X0252Delete").ToString()
                    '    End If
                    'End If

                    If Not IsDBNull(dt.Rows(0)("X0259SalesOrderPrint")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("X0259SalesOrderPrint")) = False Then
                            Me.btnPrint.Enabled = dt.Rows(0)("X0259SalesOrderPrint").ToString()
                            'Me.btnMultiPrint.Enabled = dt.Rows(0)("X0252Print").ToString()
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("x0259SalesOrderMultiPrint")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("x0259SalesOrderMultiPrint")) = False Then
                            'Me.btnPrint.Enabled = dt.Rows(0)("X0252MultiPrint").ToString()
                            Me.btnMultiPrint.Enabled = dt.Rows(0)("x0259SalesOrderMultiPrint").ToString()
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("X0259SalesOrderPost")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("X0259SalesOrderPost")) = False Then
                            Me.btnPost.Enabled = dt.Rows(0)("X0259SalesOrderPost").ToString()
                        End If
                    End If

                    If Not IsDBNull(dt.Rows(0)("X0259SalesOrderReverse")) Then
                        If String.IsNullOrEmpty(dt.Rows(0)("X0259SalesOrderReverse")) = False Then
                            Me.btnReverse.Enabled = dt.Rows(0)("X0259SalesOrderReverse").ToString()
                        End If
                    End If

                    'If Not IsDBNull(dt.Rows(0)("X0255")) Then
                    '    If String.IsNullOrEmpty(dt.Rows(0)("X0255")) = False Then
                    '        Me.btnReceipts.Enabled = dt.Rows(0)("X0255").ToString()
                    '        chkReceiptAccess.Checked = dt.Rows(0)("X0255").ToString()
                    '    End If
                    'End If

                    'If Not IsDBNull(dt.Rows(0)("X0255QReceipt")) Then
                    '    If String.IsNullOrEmpty(dt.Rows(0)("X0255QReceipt")) = False Then
                    '        If chkReceiptAccess.Checked = False Then
                    '            Me.btnReceipts.Enabled = dt.Rows(0)("X0255QReceipt").ToString()
                    '        End If

                    '        chkQReceiptAccess.Checked = dt.Rows(0)("X0255QReceipt").ToString()
                    '    End If
                    'End If

                    'If Not IsDBNull(dt.Rows(0)("X0256")) Then
                    '    If String.IsNullOrEmpty(dt.Rows(0)("X0256")) = False Then
                    '        Me.btnCNDN.Enabled = dt.Rows(0)("X0256").ToString()
                    '        'chkQReceiptAccess.Checked = dt.Rows(0)("X0256").ToString()
                    '    End If
                    'End If

                 

                Else
                    Me.btnEdit.Enabled = False
                    Me.btnDelete.Enabled = False
                    Me.btnPrint.Enabled = False
                    Me.btnMultiPrint.Enabled = False
                    Me.btnPost.Enabled = False
                    Me.btnReverse.Enabled = False
                End If

                'If String.IsNullOrEmpty(dt.Rows(0)("X0252Print")) = False Then
                '    Me.btnDelete.Enabled = dt.Rows(0)("X0252Print").ToString()
                'End If



                If btnADD.Enabled = True Then
                    btnADD.ForeColor = System.Drawing.Color.Black
                Else
                    btnADD.ForeColor = System.Drawing.Color.Gray
                End If

                If btnEdit.Enabled = True Then
                    btnEdit.ForeColor = System.Drawing.Color.Black
                Else
                    btnEdit.ForeColor = System.Drawing.Color.Gray
                End If

                If btnDelete.Enabled = True Then
                    btnDelete.ForeColor = System.Drawing.Color.Black
                Else
                    btnDelete.ForeColor = System.Drawing.Color.Gray
                End If

                If btnPrint.Enabled = True Then
                    btnPrint.ForeColor = System.Drawing.Color.Black
                    btnMultiPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnPrint.ForeColor = System.Drawing.Color.Gray
                    btnMultiPrint.ForeColor = System.Drawing.Color.Gray
                End If
                If btnMultiPrint.Enabled = True Then
                    btnMultiPrint.ForeColor = System.Drawing.Color.Black
                Else
                    btnMultiPrint.ForeColor = System.Drawing.Color.Gray
                End If
                If btnPost.Enabled = True Then
                    btnPost.ForeColor = System.Drawing.Color.Black
                Else
                    btnPost.ForeColor = System.Drawing.Color.Gray
                End If

                If btnReverse.Enabled = True Then
                    btnReverse.ForeColor = System.Drawing.Color.Black
                Else
                    btnReverse.ForeColor = System.Drawing.Color.Gray
                End If

                If btnReceipts.Enabled = True Then
                    btnReceipts.ForeColor = System.Drawing.Color.Black
                Else
                    btnReceipts.ForeColor = System.Drawing.Color.Gray
                End If
            End If
            conn.Close()
            conn.Dispose()
            command.Dispose()
            dt.Dispose()
            dr.Close()
            'Else
            '    chkReceiptAccess.Checked = True
            '    chkQReceiptAccess.Checked = True

            'End If


        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION AccessControl", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub DisableControls()
        btnSave.Enabled = False
        btnSave.ForeColor = System.Drawing.Color.Gray
        btnCancel.Enabled = False
        btnCancel.ForeColor = System.Drawing.Color.Gray
        btnADD.Enabled = True
        btnADD.ForeColor = System.Drawing.Color.Black

        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray

        btnRecalculate.Enabled = False
        btnRecalculate.ForeColor = System.Drawing.Color.Gray

        btnJournal.Enabled = False
        btnJournal.ForeColor = System.Drawing.Color.Gray
      
        'btnClient.Visible = False
        'btnDelete.Enabled = True
        'btnDelete.ForeColor = System.Drawing.Color.Black

        'chkManualInvoice.Enabled = False
        chkManualInvoice.Visible = False
        chkManualInvoice.Checked = False
        txtInvoiceNo.Enabled = False
        txtInvoiceDate.Enabled = False
        txtBillingPeriod.Enabled = False
        txtCompanyGroup.Enabled = False
        txtAccountIdBilling.Enabled = False
        txtAccountType.Enabled = False
        txtAccountName.Enabled = False
        txtBillAddress.Enabled = False
        txtBillStreet.Enabled = False
        txtBillBuilding.Enabled = False

        txtBillCity.Enabled = False
        txtBillState.Enabled = False

        'txtBillCityEdit.Enabled = False
        'txtBillStateEdit.Enabled = False
        If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) <> "SINGAPORE" Then
            txtBillCity.Attributes.Remove("readonly")
            txtBillState.Attributes.Remove("readonly")
            txtBillCityEdit.Attributes.Remove("readonly")
            txtBillStateEdit.Attributes.Remove("readonly")
        Else
            txtBillCity.Attributes.Add("readonly", "readonly")
            txtBillState.Attributes.Add("readonly", "readonly")
            txtBillCityEdit.Attributes.Add("readonly", "readonly")
            txtBillStateEdit.Attributes.Add("readonly", "readonly")
        End If

        txtBillPostal.Enabled = False
        ddlSalesmanBilling.Enabled = False
        txtInvoiceAmount.Enabled = False
        txtBillCountry.Enabled = False
        txtPONo.Enabled = False
        ddlCreditTerms.Enabled = False
        txtDiscountAmount.Enabled = False
        txtAmountWithDiscount.Enabled = False
        txtGSTAmount.Enabled = False
        txtNetAmount.Enabled = False
        txtOurReference.Enabled = False
        txtYourReference.Enabled = False
        txtComments.Enabled = False
        txtDescription.Enabled = False
        txtContactPerson.Enabled = False
        txtCreditDays.Enabled = False
        txtDueDate.Enabled = False
        ddlDocType.Enabled = False
        ddlContractGroupBilling.Enabled = False
        txtGST.Enabled = False

        chkGSTInclusive.Enabled = False
        btnSaveInvoice.Enabled = False
        'btnSave.Enabled = False
        btnShowRecords.Enabled = False

        grvBillingDetails.Enabled = False
        rbtInvoiceType.Enabled = False
        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray


        'btnQuickReceipt.Enabled = False
        'btnQuickReceipt.ForeColor = System.Drawing.Color.Gray
        btnClient1.Visible = False
        btnImport.Enabled = False

        grvBillingDetailsNew.Enabled = False

        btnEditBillingDetails.Visible = False
        btnEditPONo.Visible = False
        btnEditComments.Visible = False
        btnEditBillingName.Visible = False
        btnEditSalesman.Visible = False
        'grvBillingDetails.Enabled = False
        'ddlCompanyGrp.Enabled = False
        'ddlContractNo.Enabled = False
        'txtDateFrom.Enabled = False
        'txtDateTo.Enabled = False
        'ddlContactType.Enabled = False
        'ddlServiceFrequency.Enabled = False
        'ddlBillingFrequency.Enabled = False
        'ddlContractGroup.Enabled = False
        'txtAccountId.Enabled = False

        'txtClientName.Enabled = False
        'txtLocationId.Enabled = False


        'rdbAll.Enabled = False
        'rdbCompleted.Enabled = False
        'rdbNotCompleted.Enabled = False
        'btnClient.Visible = False
        'BtnLocation.Visible = False
        'grvServiceRecDetails.Enabled = False

        'btnDelete.Enabled = False
        'btnDelete.ForeColor = System.Drawing.Color.Gray


        ''''''''''''''''''''
        txtInvoicenoSearch.Enabled = True
        txtInvoiceDateFromSearch.Enabled = True
        txtInvoiceDateToSearch.Enabled = True
        ddlCompanyGrpSearch.Enabled = True
        ddlContactTypeSearch.Enabled = True
        txtAccountIdSearch.Enabled = True
        txtSearch1Status.Enabled = True
        btnQuickSearch.Enabled = True
        btnQuickReset.Enabled = True
        txtCommentsSearch.Enabled = True
        txtClientNameSearch.Enabled = True
        btnSearch1Status.Enabled = True
        btnClientSearch0.Enabled = True
        btnClientSearch.Enabled = True
        rdbSearchPaidStatus.Enabled = True

        btnFilter.Enabled = True
        '''''''''''''''''''
        btnReceipts.Enabled = False
        btnReceipts.ForeColor = System.Drawing.Color.Gray


        btnCNDN.Enabled = False
        btnCNDN.ForeColor = System.Drawing.Color.Gray


        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black

        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black

        'btnReset.Enabled = False
        'btnReset.ForeColor = System.Drawing.Color.Gray

        AccessControl()
    End Sub

    Private Sub EnableControls()
        btnSave.Enabled = True
        btnSave.ForeColor = System.Drawing.Color.Black
        btnCancel.Enabled = True
        btnCancel.ForeColor = System.Drawing.Color.Black
        btnClient.Visible = True
        btnADD.Enabled = False
        btnADD.ForeColor = System.Drawing.Color.Gray

        'btnDelete.Enabled = False
        'btnDelete.ForeColor = System.Drawing.Color.Gray

        btnReceipts.Enabled = False
        btnReceipts.ForeColor = System.Drawing.Color.Gray

        btnCNDN.Enabled = False
        btnCNDN.ForeColor = System.Drawing.Color.Gray


        btnChangeStatus.Enabled = False
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray

        'btnQuickReceipt.Enabled = False
        'btnQuickReceipt.ForeColor = System.Drawing.Color.Gray



        'btnQuit.Enabled = False
        'btnQuit.ForeColor = System.Drawing.Color.Gray

        'btnBack.Enabled = False
        'btnBack.ForeColor = System.Drawing.Color.Gray

        btnCopy.Enabled = False
        btnCopy.ForeColor = System.Drawing.Color.Gray

        btnRecalculate.Enabled = False
        btnRecalculate.ForeColor = System.Drawing.Color.Gray

        'rdbAll.Attributes.Remove("disabled")
        'rdbCompleted.Attributes.Add("readonly", "readonly")
        'rdbNotCompleted.Attributes.Add("readonly", "readonly")

        'rdbAll.Enabled = True
        'rdbCompleted.Enabled = True
        'rdbNotCompleted.Enabled = True

        rdbNotCompleted.Enabled = True
        rdbCompleted.Enabled = True
        rdbAll.Enabled = True
        ddlCompanyGrp.Enabled = True
        ddlContactType.Enabled = True
        txtClientName.Enabled = True
        txtAccountId.Enabled = True
        txtLocationId.Enabled = True
        ddlContractNo.Enabled = True
        txtDateFrom.Enabled = True
        txtDateTo.Enabled = True

        ddlServiceFrequency.Enabled = True
        ddlBillingFrequency.Enabled = True
        'ddlContractGroup.Enabled = True
        txtAccountIdBilling.Enabled = True

        chkManualInvoice.Enabled = True
        txtInvoiceNo.Enabled = True
        txtInvoiceDate.Enabled = True
        txtBillingPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        txtAccountId.Enabled = True
        txtAccountType.Enabled = True

        txtAccountName.Enabled = True
        txtBillAddress.Enabled = True
        txtBillStreet.Enabled = True
        txtBillBuilding.Enabled = True

        If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) <> "SINGAPORE" Then
            txtBillCity.Enabled = True
            txtBillState.Enabled = True

            txtBillCityEdit.Enabled = True
            txtBillStateEdit.Enabled = True
        Else
            txtBillCity.Enabled = False
            txtBillState.Enabled = False

            txtBillCityEdit.Enabled = False
            txtBillStateEdit.Enabled = False
        End If
        txtBillPostal.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtInvoiceAmount.Enabled = True
        txtBillCountry.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtDiscountAmount.Enabled = True
        txtAmountWithDiscount.Enabled = True
        txtGSTAmount.Enabled = True
        txtNetAmount.Enabled = True

        txtComments.Enabled = True
        txtDescription.Enabled = True
        ddlDocType.Enabled = True
        'txtDueDate.Enabled = True
        ddlContractGroupBilling.Enabled = True

        txtContactPerson.Enabled = True
        txtGST.Enabled = True
        chkGSTInclusive.Enabled = True
        'txtCreditDays.Enabled = True
        btnSaveInvoice.Enabled = True
        'btnSave.Enabled = True
        btnShowRecords.Enabled = True
        btnImport.Enabled = True
        'ddlContactType.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'txtAccountId.Enabled = True
        'txtContractNo.Enabled = True
        'txtClientName.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractGrp.Enabled = True

        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True

        btnEditBillingDetails.Visible = False
        btnEditPONo.Visible = False
        btnEditComments.Visible = False
        btnEditBillingName.Visible = False
        btnEditSalesman.Visible = False
        btnDelete.Enabled = True

        grvBillingDetails.Enabled = True
        grvServiceRecDetails.Enabled = True


        ''''''''''''''''''''
        txtInvoicenoSearch.Enabled = False
        txtInvoiceDateFromSearch.Enabled = False
        txtInvoiceDateToSearch.Enabled = False
        ddlCompanyGrpSearch.Enabled = False
        ddlContactTypeSearch.Enabled = False
        txtAccountIdSearch.Enabled = False
        txtSearch1Status.Enabled = False
        btnQuickSearch.Enabled = False
        btnQuickReset.Enabled = False
        txtCommentsSearch.Enabled = False
        txtClientNameSearch.Enabled = False
        btnSearch1Status.Enabled = False
        btnClientSearch0.Enabled = False
        btnClientSearch.Enabled = False
        rdbSearchPaidStatus.Enabled = False
        btnFilter.Enabled = False

        '''''''''''''''''''
        updpnlServiceRecs.Update()

        updPanelSave.Update()
        'UpdatePanel1.Update()

        btnClient.Visible = True
        btnClient1.Visible = True
        BtnLocation.Visible = True
        rbtInvoiceType.Enabled = True
        AccessControl()
    End Sub



    'Function

    'Button-click
    Protected Sub ShowMessage(sender As Object, e As EventArgs, message As String)

        'Dim message As String = "alert('Hello! Mudassar.')"

        ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)

    End Sub

    Protected Sub btnADD_Click(sender As Object, e As EventArgs) Handles btnADD.Click
        Try
            'txtInvoiceDate.Text = ""
            MakeMeNull()
            MakeMeNullBillingDetails()
            EnableControls()
            If chkRecurringInvoice.Checked = True Then
                txtAccountId.Text = txtAccountIdBilling.Text
                'UpdatePanel1.Update()
                btnShowRecords_Click(sender, e)
            End If

            updPanelInvoice.Update()
            txtMode.Text = "NEW"
            lblMessage.Text = "ACTION: ADD RECORD"
            txtSearch1Status.Text = "O,P"

            If String.IsNullOrEmpty(txtInvoiceDate.Text) = False Then
                txtBillingPeriod.Text = Year(Convert.ToDateTime(txtInvoiceDate.Text)) & Format(Month(Convert.ToDateTime(txtInvoiceDate.Text)), "00")
            End If


            btnADD.Enabled = False
            btnADD.ForeColor = System.Drawing.Color.Gray

            btnEdit.Enabled = False
            btnEdit.ForeColor = System.Drawing.Color.Gray

            btnDelete.Enabled = False
            btnDelete.ForeColor = System.Drawing.Color.Gray

            btnReceipts.Enabled = False
            btnReceipts.ForeColor = System.Drawing.Color.Gray


            btnCNDN.Enabled = False
            btnCNDN.ForeColor = System.Drawing.Color.Gray

            btnBack.Enabled = False
            btnBack.ForeColor = System.Drawing.Color.Gray

            btnBack.Enabled = False
            btnBack.ForeColor = System.Drawing.Color.Gray

            'btnReset.Enabled = False
            'btnReset.ForeColor = System.Drawing.Color.Gray

            btnPrint.Enabled = False
            btnPrint.ForeColor = System.Drawing.Color.Gray

            btnMultiPrint.Enabled = False
            btnMultiPrint.ForeColor = System.Drawing.Color.Gray

            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = False
            btnChangeStatus.ForeColor = System.Drawing.Color.Gray

            btnJournal.Enabled = False
            btnJournal.ForeColor = System.Drawing.Color.Gray

            'chkManualInvoice.Visible = True

            grvBillingDetails.ShowHeader = True
            'pnlGrid.Enabled = False

            txtAccountIdBilling.Focus()
        Catch ex As Exception
            lblAlert.Text = ex.Message
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnADD_Click", ex.Message.ToString, "")
            'MsgBox("Error" & ex.Message)
        End Try
    End Sub


    Public Sub PopulateDropDownList(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal ddl As DropDownList)
        Try
            Dim con As MySqlConnection = New MySqlConnection()

            con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'Using con As New MySqlConnection(constr)

            Using cmd As New MySqlCommand(query)
                cmd.CommandType = CommandType.Text
                cmd.Connection = con
                con.Open()
                ddl.DataSource = cmd.ExecuteReader()
                ddl.DataTextField = textField.Trim()
                ddl.DataValueField = valueField.Trim()
                ddl.DataBind()
                con.Close()
                con.Dispose()
                cmd.Dispose()
            End Using
            'End Using
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PopulateDropDownList", ex.Message.ToString, textField.Trim() & valueField.Trim())
        End Try
    End Sub


    Public Sub PopulateComboBox(ByVal query As String, ByVal textField As String, ByVal valueField As String, ByVal cmb As AjaxControlToolkit.ComboBox)
        Dim con As MySqlConnection = New MySqlConnection()

        con.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'Using con As New MySqlConnection(constr)
        Using cmd As New MySqlCommand(query)
            cmd.CommandType = CommandType.Text
            cmd.Connection = con
            con.Open()
            cmb.DataSource = cmd.ExecuteReader()
            cmb.DataTextField = textField.Trim()
            cmb.DataValueField = valueField.Trim()
            cmb.DataBind()
            con.Close()
        End Using
        'End Using
    End Sub


    Protected Sub GridView1_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles GridView1.PageIndexChanging
        GridView1.PageIndex = e.NewPageIndex


        'If GridSelected = "SQLDSContract" Then
        '    SQLDSInvoice.SelectCommand = txt.Text
        '    SQLDSInvoice.DataBind()
        'ElseIf GridSelected = "SQLDSContractClientId" Then
        '    'SqlDataSource1.SelectCommand = txt.Text
        '    'SQLDSContractClientId.DataBind()
        'ElseIf GridSelected = "SQLDSContractNo" Then
        '    ''SqlDataSource1.SelectCommand = txt.Text
        '    'SqlDSContractNo.DataBind()
        'End If
        SQLDSInvoice.SelectCommand = txt.Text
        GridView1.DataBind()
    End Sub



    Protected Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        lblAlert.Text = ""
        Try
            If txtPostStatus.Text = "P" Then
                lblAlert.Text = "Invoice has already been POSTED.. Cannot be DELETED"
                'Dim message1 As String = "alert('Contract has already been POSTED.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message1, True)

                Exit Sub
            End If

            If txtPostStatus.Text = "V" Then
                lblAlert.Text = "Invoice is VOID.. Cannot be DELETED"
                'Dim message2 As String = "alert('Contract is VOID.. Cannot be DELETED!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message2, True)

                Exit Sub
            End If

            lblAlert.Text = ""
            lblMessage.Text = "ACTION: DELETE RECORD"


            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()


                ''Delete from tblSalesOrderDetail

                Dim commandValues As MySqlCommand = New MySqlCommand

                commandValues.CommandType = CommandType.Text
                'commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
                commandValues.CommandText = "SELECT *  FROM tblSalesOrderDetail where SalesOrderNumber ='" & txtInvoiceNo.Text.Trim & "'"
                commandValues.Connection = conn

                Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
                Dim dtValues As New DataTable
                dtValues.Load(drValues)

                For Each row As DataRow In dtValues.Rows

                    If Convert.ToDecimal(row("ValueBase")) > 0.0 Then

                        'Start: Update tblServiceRecord
                        If row("ItemCode") = "IN-DEF" Or row("ItemCode") = "IN-SRV" Then

                            UpdateServiceRecord(row("RefType"), row("ValueBase"), row("ValueBase"), "Delete")

                            'Dim command4 As MySqlCommand = New MySqlCommand
                            'command4.CommandType = CommandType.Text

                            ''Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                            'Dim qry4 As String = "Update tblservicerecord Set BillYN = 'N' where Rcno= @Rcno "

                            'command4.CommandText = qry4
                            'command4.Parameters.Clear()

                            'command4.Parameters.AddWithValue("@Rcno", row("RcnoServiceRecord"))
                            'command4.Connection = conn
                            'command4.ExecuteNonQuery()
                        End If
                    End If

                Next row


                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                Dim qry1 As String = "DELETE from tblSalesOrderDetail where SalesOrderNumber ='" & txtInvoiceNo.Text.Trim & "'"

                command1.CommandText = qry1
                'command1.Parameters.Clear()

                'command1.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                command1.Connection = conn
                command1.ExecuteNonQuery()


                ''Delete from tblSalesOrderDetail


                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text

                Dim qry2 As String = "DELETE from tblSalesOrder where SalesOrderNumber ='" & txtInvoiceNo.Text.Trim & "'"

                command2.CommandText = qry2
                'command2.Parameters.Clear()

                'command2.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                command2.Connection = conn
                command2.ExecuteNonQuery()


                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                'conn.Close()

                'Dim message As String = "alert('Contract is deleted Successfully!!!')"
                'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)


                'btnADD_Click(sender, e)

                'txt.Text = "SELECT * From tblContract where (1=1)  and Status ='O' order by rcno desc, CustName limit 50"
                SQLDSInvoice.SelectCommand = txt.Text
                SQLDSInvoice.DataBind()
                'GridView1.DataSourceID = "SqlDSContract"


                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)


                MakeMeNull()
                MakeMeNullBillingDetails()
                GridView1.DataBind()
                lblMessage.Text = "DELETE: SALES ORDER SUCCESSFULLY DELETED"

                updPnlMsg.Update()
                updPnlSearch.Update()

                command1.Dispose()
                command2.Dispose()
                commandValues.Dispose()
                dtValues.Dispose()
                'updpnlServiceRecs.Update()
                'GridView1.DataBind()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString

            lblAlert.Text = exstr
            'Dim message As String = "alert('" + exstr + "!!!')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnDelete_Click", ex.Message.ToString, "")

        End Try
    End Sub


    Protected Sub GridView1_Sorting(sender As Object, e As GridViewSortEventArgs) Handles GridView1.Sorting

        'If GridSelected = "SQLDSContract" Then
        '    SQLDSInvoice.SelectCommand = txt.Text
        '    SQLDSInvoice.DataBind()
        'ElseIf GridSelected = "SQLDSContractClientId" Then
        '    'SqlDataSource1.SelectCommand = txt.Text
        '    'SQLDSContractClientId.DataBind()
        'ElseIf GridSelected = "SQLDSContractNo" Then
        '    ''SqlDataSource1.SelectCommand = txt.Text
        '    'SqlDSContractNo.DataBind()
        'End If

        'GridView1.DataBind()

        SQLDSInvoice.SelectCommand = txt.Text
        GridView1.DataBind()
    End Sub

    ''''''' Start: Service Details

    Protected Sub btnEdit_Click(sender As Object, e As EventArgs) Handles btnEdit.Click
        lblMessage.Text = ""
        lblAlert.Text = ""
        'If txtStatus.Text = "O" Then
        '    'btnSave.Enabled = True
        'Else
        '    'btnSave.Enabled = False
        '    lblAlert.Text = "CONTRACT STATUS SHOULD BE [O-OPEN]"
        '    Exit Sub
        'End If

        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return
        End If

        lblMessage.Text = "ACTION: EDIT RECORD"

        txtMode.Text = "EDIT"

        'btnSave.Enabled = True
        'btnSave.ForeColor = System.Drawing.Color.Black
        'btnCancel.Enabled = True
        'btnCancel.ForeColor = System.Drawing.Color.Black
        'btnClient.Visible = True
        'btnADD.Enabled = True
        'btnADD.ForeColor = System.Drawing.Color.Black

        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnDeleteAll.Enabled = True
        btnDeleteAll.ForeColor = System.Drawing.Color.Black

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnPost.Enabled = False
        btnPost.ForeColor = System.Drawing.Color.Gray

        btnJournal.Enabled = False
        btnJournal.ForeColor = System.Drawing.Color.Gray

        'rdbNotCompleted.Enabled = True
        'rdbCompleted.Enabled = True
        'rdbAll.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'ddlContactType.Enabled = True
        'txtClientName.Enabled = True
        'txtAccountId.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True

        'txtAccountIdBilling.Enabled = True


        txtInvoiceNo.Enabled = True
        txtInvoiceDate.Enabled = True
        txtBillingPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        txtAccountId.Enabled = True
        txtAccountType.Enabled = True

        txtAccountName.Enabled = True
        txtBillAddress.Enabled = True
        txtBillStreet.Enabled = True
        txtBillBuilding.Enabled = True

        txtBillCity.Enabled = True
        txtBillState.Enabled = True


        txtBillPostal.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtInvoiceAmount.Enabled = True
        txtBillCountry.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtDiscountAmount.Enabled = True
        txtAmountWithDiscount.Enabled = True
        txtGSTAmount.Enabled = True
        txtNetAmount.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtComments.Enabled = True
        txtDescription.Enabled = True
        'btnSaveInvoice.Enabled = True
        btnSave.Enabled = True
        btnShowRecords.Enabled = True
        btnSaveInvoice.Enabled = True

        'ddlContactType.Enabled = True
        'ddlCompanyGrp.Enabled = True
        'txtAccountId.Enabled = True
        'txtContractNo.Enabled = True
        'txtClientName.Enabled = True
        'txtLocationId.Enabled = True
        'ddlContractGrp.Enabled = True

        'ddlContractNo.Enabled = True
        'txtDateFrom.Enabled = True
        'txtDateTo.Enabled = True

        'btnDelete.Enabled = True
        grvBillingDetailsNew.Enabled = True
        'grvBillingDetails.Enabled = True
        grvServiceRecDetails.Enabled = True
        grvBillingDetails.Enabled = True


        '''''''''''''''''''
        If Val((grvBillingDetailsNew.Rows.Count).ToString) < Val(txtTotDetRec.Text) Then
            If Val(txtTotDetRec.Text) > 100 Then
                ddlViewServiceRecs.Text = 500
            ElseIf Val(txtTotDetRec.Text) > 50 Then
                ddlViewServiceRecs.Text = 100
            ElseIf Val(txtTotDetRec.Text) > 25 Then
                ddlViewServiceRecs.Text = 50
            ElseIf Val(txtTotDetRec.Text) > 15 Then
                ddlViewServiceRecs.Text = 25
            End If

            'If Val(txtTotDetRec.Text) > 15 Then
            '    ddlViewServiceRecs.Text = 25
            'ElseIf Val(txtTotDetRec.Text) > 25 Then
            '    ddlViewServiceRecs.Text = 50
            'ElseIf Val(txtTotDetRec.Text) > 50 Then
            '    ddlViewServiceRecs.Text = 100
            'ElseIf Val(txtTotDetRec.Text) > 100 Then
            '    ddlViewServiceRecs.Text = 200
            'End If
            ddlViewServiceRecs_SelectedIndexChanged(sender, e)
        End If



        '''''''''''''''''''''''''
        updpnlServiceRecs.Update()

        updPanelSave.Update()
        'UpdatePanel2.Update()

        EnableControls()

        chkGSTInclusive.Enabled = False
        'txtAccountIdBilling.Attributes.Add("readonly", "readonly")
        'txtAccountType.Attributes.Add("readonly", "readonly")


        'txtAccountType.Enabled = False
        'btnClient1.Visible = False

        UpdatePanel3.Update()
        updPanelInvoice.Update()

        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black

        grvBillingDetails.Visible = True
    End Sub




    Protected Sub btnQuickSearch_Click(sender As Object, e As EventArgs) Handles btnQuickSearch.Click

        Dim strsql As String = ""
        Try
            lblMessage.Text = ""
            txtTotalInvoiceAmount.Text = "0.00"
            txtCondition.Text = ""


            'strsql = SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, 
            strsql = "Select PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringSalesOrder,  BillSchedule, "
            strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, Description, EmailSentStatus, EmailSentDate, Location,"
            strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno "
            strsql = strsql & " , ServiceAddress "

            strsql = strsql & " from tblSalesOrder where 1=1 "

            'strsql = strsql & " from tblSales, invoiceserviceaddress where tblSales.InvoiceNumber = invoiceserviceaddress.invoiceNumber and  1=1 "

            'txtCondition.Text = " and (DocType='ARIN')  "

            txtSelect.Text = strsql

            If String.IsNullOrEmpty(txtSearch1Status.Text) = False Then
                Dim stringList As List(Of String) = txtSearch1Status.Text.Split(","c).ToList()
                Dim YrStrList As List(Of [String]) = New List(Of String)()

                For Each str As String In stringList
                    str = "'" + str + "'"
                    YrStrList.Add(str.ToUpper)
                Next

                Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
                txtCondition.Text = txtCondition.Text & " and PostStatus in (" + YrStr + ")"

            End If


            If txtDisplayRecordsLocationwise.Text = "Y" Then
                'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"
                txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"
                If ddlBranch.SelectedIndex > 0 Then
                    If String.IsNullOrEmpty(ddlBranch.Text) = False Then
                        txtCondition.Text = txtCondition.Text & " and location = '" & ddlBranch.Text.Trim + "'"
                    End If
                End If


            End If


            'If String.IsNullOrEmpty(txtBillingPeriodSearch.Text) = False Then
            '    strsql = strsql & " and GLPeriod like '%" & txtBillingPeriodSearch.Text.Trim + "%'"
            'End If


            If ddlCompanyGrpSearch.SelectedIndex > 0 Then
                If String.IsNullOrEmpty(ddlCompanyGrpSearch.Text) = False Then
                    txtCondition.Text = txtCondition.Text & " and CompanyGroup = '" & ddlCompanyGrpSearch.Text.Trim + "'"
                End If
            End If

            If String.IsNullOrEmpty(txtInvoicenoSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and SalesOrderNumber like '%" & txtInvoicenoSearch.Text.Trim + "%'"
            End If


            If String.IsNullOrEmpty(txtAccountIdSearch.Text) = False Then
                'strsql = strsql & " and (AccountId like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtAccountIdSearch.Text.Trim & "%')"

            End If

            If String.IsNullOrEmpty(txtClientNameSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and CustName like ""%" & txtClientNameSearch.Text.Trim & "%"""
            End If

            If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            End If

            'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            'End If

            'If rdbSearchPaidStatus.SelectedItem.Value = "Fully Paid" Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase = 0 and ValueBase <> 0 "
            'ElseIf rdbSearchPaidStatus.SelectedItem.Value = "O/S" Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase <>  0"
            'End If


            If String.IsNullOrEmpty(txtInvoiceDateFromSearch.Text) = False And txtInvoiceDateFromSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesOrderDate >= '" + Convert.ToDateTime(txtInvoiceDateFromSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateToSearch.Text) = False And txtInvoiceDateToSearch.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesOrderDate <= '" + Convert.ToDateTime(txtInvoiceDateToSearch.Text).ToString("yyyy-MM-dd") + "'"
            End If


            If String.IsNullOrEmpty(txtCommentsSearch.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and Comments like '%" & txtCommentsSearch.Text.Trim & "%'"
            End If

            txtOrderBy.Text = " order by rcno desc, custname "


            '''''''''''''''''''''''''''''



            ''strsql = strsql + txtSelect.Text + txtCondition.Text + " and (DocType='ARIN')  " + txtOrderBy.Text + " limit " & txtLimit.Text
            'SqlDSMultiPrint.SelectCommand = ""

            'SqlDSMultiPrint.SelectCommand = txtSelect.Text + txtCondition.Text + " and (DocType='ARIN') and PostStatus ='P' " + txtOrderBy.Text + " limit " & txtLimit.Text
            'SqlDSMultiPrint.DataBind()
            ''SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            'grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
            'grdViewMultiPrint.DataBind()

            '''''''''''''''''''''''''''''

            strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            txt.Text = strsql
            'txtComments.Text = strsql
            SQLDSInvoice.SelectCommand = strsql
            SQLDSInvoice.DataBind()
            GridView1.DataBind()

            CalculateTotal()

            ''''''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


                MakeMeNull()
                MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"

                    If String.IsNullOrEmpty(txtRcnoSelected.Text.Trim) = False Then
                        If txtRcnoSelected.Text > 0 Then
                            txtRcno.Text = txtRcnoSelected.Text
                            txtRcnoSelected.Text = 0
                        Else
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                        End If
                    Else
                        txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                    End If

                    'txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    PopulateRecord()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0
                    updPanelSave.Update()
                    UpdatePanel3.Update()

                    'GridView1_SelectedIndexChanged(sender, e)
                Else
                    MakeMeNull()
                    MakeMeNullBillingDetails()
                End If
            End If

            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '+ "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '''''''''''''''''''''''''''''


            updPnlMsg.Update()
            updPanelInvoice.Update()
            'SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            'GridSelected = "SQLDSContract"
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnQuickSearch_Click", ex.Message.ToString, Left(strsql, 1000))
        End Try
    End Sub



    Protected Sub btnShowRecords_Click(sender As Object, e As EventArgs) Handles btnShowRecords.Click
        Try
            lblAlert.Text = ""

            updPanelInvoice.Update()
            PopulateServiceGrid()
            btnImportService.Enabled = True
            mdlImportServices.Show()

            'txtMessage1.Text = grvServiceRecDetails.Rows.Count & " RECORD/S FOUND"
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub PopulateInvoiceDetailGrid()
        'EnableControls()
        Try

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                grvBillingDetails.DataSource = dtScdrLoc
                grvBillingDetails.DataBind()

                SetPreviousDataBillingDetailsRecs()
            Next i

            FirstGridViewRowBillingDetailsRecs()

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim sql As String
            sql = ""

            sql = "Select * "
            sql = sql + " FROM tblSalesOrderDetail A "
            sql = sql + " where 1 = 1 and SalesOrderNumber = '" & txtInvoiceNo.Text & "'"


            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()

            Dim dt1 As New DataTable
            dt1.Load(dr1)

            Dim TotDetailRecordsServiceRec = dt1.Rows.Count
            If dt1.Rows.Count > 0 Then

                'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)

                'Dim Query As String

                'Query = "Select TaxType from tbltaxtype"
                'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)

                'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                'Query = "Select * from tblunitms order by UnitMs"
                'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)

                Dim rowIndex = 0

                For Each row As DataRow In dt1.Rows
                    If (TotDetailRecordsServiceRec > (rowIndex)) Then
                        'AddNewRowWithDetailRecGL()
                        'AddNewRowWithDetailRecBillingDetailsRecs()
                        AddNewRowBillingDetailsRecs()
                    End If


                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                    If dt1.Rows(rowIndex)("SubCode").ToString() = "SERV" Then
                        TextBoxItemType.Text = "SERVICE"
                        TextBoxItemType.Enabled = False
                    ElseIf dt1.Rows(rowIndex)("SubCode").ToString() = "STCK" Then
                        TextBoxItemType.Text = "STOCK"
                        TextBoxItemType.Enabled = False
                    ElseIf dt1.Rows(rowIndex)("SubCode").ToString() = "DIST" Then
                        TextBoxItemType.Text = "OTHERS"
                        TextBoxItemType.Enabled = False
                    End If

                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                    TextBoxItemCode.Items.Clear()
                    TextBoxItemCode.Items.Add(dt1.Rows(rowIndex)("ItemDescription").ToString().Trim)


                    Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                    TextBoxDescription.Text = dt1.Rows(rowIndex)("ItemCode").ToString().Trim

                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDescriptionGV"), TextBox)
                    TextBoxItemDescription.Text = dt1.Rows(rowIndex)("Description").ToString().Trim

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    TextBoxGLDescription.Text = dt1.Rows(rowIndex)("LedgerName").ToString().Trim

                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                    TextBoxOtherCode.Text = dt1.Rows(rowIndex)("LedgerCode").ToString()

                    Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    TextBoxServiceDate.Text = dt1.Rows(rowIndex)("ServiceDate").ToString()


                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    TextBoxUOM.Text = dt1.Rows(rowIndex)("UnitMS").ToString()


                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                    TextBoxQty.Text = Convert.ToDecimal(dt1.Rows(rowIndex)("Quantity").ToString()).ToString("N0")
                    TextBoxQty.Enabled = False


                    Dim TextBoxUnitOriginal As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                    TextBoxUnitOriginal.Text = dt1.Rows(rowIndex)("UnitBase").ToString()

                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                    TextBoxTotalPrice.Text = Convert.ToDecimal(dt1.Rows(rowIndex)("TotalPrice").ToString()).ToString("N2")

                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                    TextBoxDiscPerc.Text = dt1.Rows(rowIndex)("DiscP").ToString()

                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                    TextBoxDiscAmount.Text = dt1.Rows(rowIndex)("DiscAmount").ToString()

                    Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                    TextBoxPriceWithDisc.Text = dt1.Rows(rowIndex)("ValueBase").ToString()

                    Dim TextBoxGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                    TextBoxGST.Text = dt1.Rows(0)("GST").ToString()


                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                    TextBoxGSTPerc.Text = dt1.Rows(rowIndex)("GSTRate").ToString()

                    Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    TextBoxGSTAmt.Text = dt1.Rows(rowIndex)("GSTBase").ToString()

                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                    TextBoxTotalPriceWithGST.Text = dt1.Rows(rowIndex)("AppliedBase").ToString()


                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = dt1.Rows(rowIndex)("CostCode").ToString()

                    Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                    TextBoxServiceStatus.Text = dt1.Rows(rowIndex)("ServiceStatus").ToString()

                    Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    TextBoxRcnoInvoice.Text = dt1.Rows(rowIndex)("Rcno").ToString()

                    If Convert.ToInt32(TextBoxRcnoInvoice.Text) > 0 Then
                        Dim TextBoxServiceRecord As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordGV"), DropDownList)
                        TextBoxServiceRecord.Items.Clear()
                        'TextBoxServiceRecord.Items.Add(dt1.Rows(rowIndex)("RefType").ToString())
                        TextBoxServiceRecord.Enabled = False

                        ''30.05.17
                        If String.IsNullOrEmpty(dt1.Rows(rowIndex)("RefType").ToString()) = True Then
                            TextBoxServiceRecord.Items.Add("--SELECT--")
                        Else
                            TextBoxServiceRecord.Items.Add(dt1.Rows(rowIndex)("RefType").ToString())
                        End If
                        ''30.05.17
                    Else
                        Dim TextBoxServiceRecord As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordGV"), DropDownList)
                        'TextBoxServiceRecord.Text = dt1.Rows(rowIndex)("RefType").ToString()

                        ''30.05.17
                        If String.IsNullOrEmpty(dt1.Rows(rowIndex)("RefType").ToString()) = True Then
                            TextBoxServiceRecord.Items.Add("--SELECT--")
                        Else
                            TextBoxServiceRecord.Items.Add(dt1.Rows(rowIndex)("RefType").ToString())
                        End If
                        ''30.05.17

                    End If


                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    TextBoxRcnoServiceRecord.Text = dt1.Rows(rowIndex)("RcnoServiceRecord").ToString()

                    Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = dt1.Rows(rowIndex)("LocationId").ToString()

                    Dim TextBoxServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceLocationGroupGV"), TextBox)
                    TextBoxServiceLocationGroup.Text = dt1.Rows(rowIndex)("ServiceLocationGroup").ToString()

                    Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    TextBoxBillingFrequency.Text = dt1.Rows(rowIndex)("BillingFrequency").ToString()

                    Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    TextBoxServiceBy.Text = dt1.Rows(rowIndex)("ServiceBy").ToString()

                    rowIndex = rowIndex + 1

                Next row

            Else
                'FirstGridViewRowServiceRecs()
                FirstGridViewRowBillingDetailsRecs()
            End If
            'End If

            'Label43.Text = "SERVICE BILLING DETAILS : Total Records :" & grvServiceRecDetails.Rows.Count.ToString
            'updpnlServiceRecs.Update()



            'txtClientName.Text = sql

            Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

            If txtMode.Text = "View" Then

                If (table.Rows.Count > 0) Then
                    For i As Integer = 0 To (table.Rows.Count) - 1
                        Dim TextBoxSel As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("chkSelectGV"), CheckBox)
                        TextBoxSel.Enabled = False
                        TextBoxSel.Checked = True
                    Next i
                End If
            End If
            'End: Service Recods

            CalculateTotalPrice()
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt1.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PopulateInvoiceDetailGrid", ex.Message.ToString, "")
        End Try
    End Sub
    Private Sub PopulateServiceGrid()
        Dim sqlstr As String
        sqlstr = ""
        Try

            'Start: Service Recods

            '22.08.17
            'Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
            'Dim drCurrentRowLoc As DataRow = Nothing

            'For i As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
            '    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
            '    drCurrentRowLoc = dtScdrLoc.NewRow()
            '    ViewState("CurrentTableServiceRec") = dtScdrLoc
            '    grvServiceRecDetails.DataSource = dtScdrLoc
            '    grvServiceRecDetails.DataBind()

            '    SetPreviousDataServiceRecs()
            'Next i

            'FirstGridViewRowServiceRecs()

            '22.08.17

            lblAlert1.Text = ""

            If ddlContactType.SelectedIndex = 0 Then
                lblAlert1.Text = "PLEASE SELECT ACCOUNT TYPE"
                Exit Sub
            End If

            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            If txtMode.Text = "View" Then

                sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.Name,  A.LocationId, A.Address1, "
                sqlstr = sqlstr + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef,  A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,"
                sqlstr = sqlstr + " A.Salesman, A.BillAddress1, A.BillBuilding, A.BillStreet, A.BillPostal, A.BillCity, A.BillCountry, "
                sqlstr = sqlstr + " A.BillingFrequency, A.RcnoInvoice, A.Rcno as rcnotblservicebillingdetail, A.ContractGroup, A.RcnoServiceRecord, A.ServiceBy, A.ServiceLocationGroup "
                sqlstr = sqlstr + " FROM tblservicebillingdetail A "
                sqlstr = sqlstr + " where 1 = 1 and InvoiceNo = '" & txtInvoiceNo.Text & "'"

            Else


                If ddlContactType.SelectedIndex = 1 Then

                    'If ddlServiceFrequency.SelectedIndex > 0 Then
                    '    sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    '    sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                    '    sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,  "
                    '    sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup   "
                    '    sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B, tblcontractdet D "
                    '    sqlstr = sqlstr + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0 and  A.AccountId = B.AccountId and C.ContractNo = D.ContractNo  and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    '    'End If
                    'Else
                    '    sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    '    sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                    '    sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                    '    sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    '    sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B"
                    '    sqlstr = sqlstr + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0 and  A.AccountId = B.AccountId   and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    'End If

                    If ddlServiceFrequency.SelectedIndex > 0 Then
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,  "
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes    "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B, tblcontractdet D "
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and   A.AccountId = B.AccountId and C.ContractNo = D.ContractNo  and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                        'End If
                    Else
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes   "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B"
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId   and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    End If

                ElseIf ddlContactType.SelectedIndex = 2 Then

                    'If ddlServiceFrequency.SelectedIndex > 0 Then
                    '    sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    '    sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
                    '    sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                    '    sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    '    sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
                    '    sqlstr = sqlstr + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0   and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and  A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    'Else
                    '    sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    '    sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup, "
                    '    sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                    '    sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    '    sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B "
                    '    sqlstr = sqlstr + " where 1 = 1 and (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) > 0  and A.AccountId = B.AccountId and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    'End If

                    If ddlServiceFrequency.SelectedIndex > 0 Then
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes  "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and  A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    Else
                        sqlstr = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sqlstr = sqlstr + " (A.BillAmount - A.BilledAmt - A.TotalCreditAmount) as Billamount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup, "
                        sqlstr = sqlstr + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, B.ARTerm,"
                        sqlstr = sqlstr + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup, A.Notes   "
                        sqlstr = sqlstr + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B "
                        sqlstr = sqlstr + " where 1 = 1 and (((A.BillAmount - A.BilledAmt) > 0) or ((A.BillAmount = 0) and (A.BillYN = 'N'))) and A.AccountId = B.AccountId and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    End If

                End If

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                    sqlstr = sqlstr + " and  A.AccountID like '%" & txtAccountId.Text & "%'"
                Else
                    If String.IsNullOrEmpty(txtClientName.Text.Trim) = False Then
                        sqlstr = sqlstr + " and  A.ServiceName like ""%" & txtClientName.Text & "%"""
                    End If
                End If

                'If String.IsNullOrEmpty(txtClientName.Text) = False Then
                '    sqlstr = sqlstr + " and  A.ServiceName like '%" & txtClientName.Text & "%'"
                'End If

                If ddlCompanyGrp.Text.Trim <> "--SELECT--" Then
                    sqlstr = sqlstr + " and   A.CompanyGroup = '" & ddlCompanyGrp.Text.Trim & "'"
                End If

                'If ddlContractNo.Text.Trim <> "-1" Then
                If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text.Trim) = False And String.IsNullOrEmpty(txtDateTo.Text.Trim) = True Then
                    sqlstr = sqlstr + " and   A.ServiceDate >= '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateTo.Text.Trim) = False And String.IsNullOrEmpty(txtDateFrom.Text.Trim) = True Then
                    sqlstr = sqlstr + " and   A.ServiceDate <= '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text.Trim) = False And String.IsNullOrEmpty(txtDateTo.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ServiceDate between '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtLocationId.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.LocationId = '" & txtLocationId.Text & "'"
                End If


                If String.IsNullOrEmpty(txtServiceAddress.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.Address1 like '%" & txtServiceAddress.Text & "%'"
                End If


                If ddlServiceFrequency.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   D.Frequency = '" & ddlServiceFrequency.Text.Trim & "'"
                End If

                If ddlBillingFrequency.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   C.BillingFrequency = '" & ddlBillingFrequency.Text.Trim & "'"
                End If

                If ddlContractGroup.Text.Trim <> "-1" Then
                    sqlstr = sqlstr + " and   C.ContractGroup = '" & ddlContractGroup.Text.Trim & "'"
                End If


                If String.IsNullOrEmpty(txtServiceBy.Text.Trim) = False Then
                    sqlstr = sqlstr + " and   A.ServiceBy like '%" & txtServiceBy.Text & "%'"
                End If

                If rdbCompleted.Checked = True Then
                    sqlstr = sqlstr + " and  A.Status = 'P' "
                End If

                If rdbNotCompleted.Checked = True Then
                    sqlstr = sqlstr + " and  A.Status = 'O' "
                End If

                If rdbAll.Checked = True Then
                    sqlstr = sqlstr + " and (( A.Status = 'O') or (A.Status = 'P' )) "
                End If

                'If ChkServicesAll.Checked = True Then
                '    sqlstr = sqlstr + " and  A.Status = 'C'"
                'End If

                'If rbtServicestatus.SelectedValue = "C" Then
                '    sqlstr = sqlstr + " and  A.Status = 'P'"
                'End If

                'If rbtServicestatus.SelectedValue = "N" Then
                '    sqlstr = sqlstr + " and  A.Status = 'O'"
                'End If
                'txtInchargeSearch.Text = sqlstrstr

            End If

            If rdbGrouping.SelectedIndex = 0 Then
                sqlstr = sqlstr + " order by A.ContractNo, A.ServiceDate"
            ElseIf rdbGrouping.SelectedIndex = 1 Then
                sqlstr = sqlstr + " order by A.AccountID, A.LocationId"
            ElseIf rdbGrouping.SelectedIndex = 2 Then
                sqlstr = sqlstr + " order by A.AccountID, A.ServiceDate"
            ElseIf rdbGrouping.SelectedIndex = 3 Then
            End If

            '''''''''''''''''''''''''''

            SqlDSServices.SelectCommand = sqlstr
            grvServiceRecDetails.DataSourceID = "SqlDSServices"
            grvServiceRecDetails.DataBind()

            conn.Close()
            conn.Dispose()

            '''''''''''''''''''''''''''''''''''''

            If grvServiceRecDetails.Rows.Count > 0 Then
                Dim TextBoxCompanyGroup1 As TextBox = CType(grvServiceRecDetails.Rows(0).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                If String.IsNullOrEmpty(TextBoxCompanyGroup1.Text) = True Then
                    Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString - 1
                Else
                    Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString
                End If
            Else
                Label43.Text = "SERVICE BILLING DETAILS : Total Records : " & grvServiceRecDetails.Rows.Count.ToString
            End If

            updpnlServiceRecs.Update()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PopulateServiceGrid", ex.Message.ToString, sqlstr)
        End Try
    End Sub
    '''''''''' Start: Service Record

    Private Sub PopulateInvoiceGrid()

        Try

            'Start: Service Recods

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableServiceRec") = dtScdrLoc
                grvServiceRecDetails.DataSource = dtScdrLoc
                grvServiceRecDetails.DataBind()

                SetPreviousDataServiceRecs()
            Next i


            FirstGridViewRowServiceRecs()
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim sql As String
            sql = ""




            If txtMode.Text = "View" Then

                sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.Name,  A.LocationId, A.Address1, "
                sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef,  A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,"
                sql = sql + " A.Salesman, A.BillAddress1, A.BillBuilding, A.BillStreet, A.BillPostal, A.BillCity, A.BillCountry, "
                sql = sql + " A.BillingFrequency, A.RcnoInvoice, A.Rcno as rcnotblservicebillingdetail, A.ContractGroup, A.RcnoServiceRecord, A.ServiceBy, A.ServiceLocationGroup "
                sql = sql + " FROM tblservicebillingdetail A "
                sql = sql + " where 1 = 1 and InvoiceNo = '" & txtInvoiceNo.Text & "'"

            Else
                If ddlContactType.SelectedIndex = 0 Then
                    'sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    'sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup, "
                    'sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                    'sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    'sql = sql + " FROM tblservicerecord A, tblCompany B, tblContract C "
                    'sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContractNo = C.ContractNo and C.ConTractGroup <> 'ST' and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    If ddlServiceFrequency.Text.Trim = "-1" Then
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B"
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId  and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    Else
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo,  A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup,"
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblCompany B, tblcontractdet D "
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    End If

                ElseIf ddlContactType.SelectedIndex = 1 Then
                    'sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                    'sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, "
                    'sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                    'sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                    'sql = sql + " FROM tblservicerecord A, tblPerson B, tblContract C "
                    'sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and A.ContractNo = C.ContractNo and C.ConTractGroup <> 'ST' and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    If ddlServiceFrequency.Text.Trim = "-1" Then
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup,  A.ServiceBy, A.ServiceLocationGroup, "
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B "
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"
                    Else
                        sql = "Select A.Rcno, A.ContactType, A.RecordNo, A.AccountID, A.ContractNo, A.CustName, A.ServiceName,  A.LocationId, A.Address1, A.AddBuilding, A.AddStreet, A.AddPostal,"
                        sql = sql + " A.BillAmount, A.ServiceDate, A.BillNo, A.PoNo, A.OurRef, A.YourRef, A.Status, A.ContractNo, A.ContactType, A.CompanyGroup, A.ServiceBy, A.ServiceLocationGroup, "
                        sql = sql + " B.Address1, B.Salesman, B.Name,  B.BillAddress1, B.BillBuilding, B.BillStreet, B.BillPostal, B.BillCity, B.BillCountry, "
                        sql = sql + " C.BillingFrequency, 0 as RcnoInvoice, 0 as rcnotblservicebillingdetail, C.ContractGroup  "
                        sql = sql + " FROM tblservicerecord A LEFT JOIN tblContract C ON A.ContractNo = C.ContractNo, tblPerson B, tblcontractdet D "
                        sql = sql + " where 1 = 1  and A.BillYN= 'N' and (A.Status = 'O' or A.Status = 'P') and A.AccountId = B.AccountId and C.ContractNo = D.ContractNo and (C.ConTractGroup <> 'ST') and A.ContactType = '" & ddlContactType.Text.Trim & "'"

                    End If

                End If


                If String.IsNullOrEmpty(txtAccountId.Text) = False Then
                    sql = sql + " and  A.AccountID like '%" & txtAccountId.Text & "%'"
                Else
                    If String.IsNullOrEmpty(txtClientName.Text) = False Then
                        sql = sql + " and  A.ServiceName like '%" & txtClientName.Text & "%'"
                    End If
                End If

                'If String.IsNullOrEmpty(txtClientName.Text) = False Then
                '    sql = sql + " and  A.ServiceName like '%" & txtClientName.Text & "%'"
                'End If

                If ddlCompanyGrp.Text.Trim <> "-1" Then
                    sql = sql + " and   A.CompanyGroup = '" & ddlCompanyGrp.Text.Trim & "'"
                End If

                If ddlContractNo.Text.Trim <> "-1" Then
                    sql = sql + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text) = False Then
                    sql = sql + " and   A.ServiceDate >= '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateTo.Text) = False Then
                    sql = sql + " and   A.ServiceDate <= '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtDateFrom.Text) = False And String.IsNullOrEmpty(txtDateTo.Text) = False Then
                    sql = sql + " and   A.ServiceDate between '" & Convert.ToDateTime(txtDateFrom.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateTo.Text).ToString("yyyy-MM-dd") & "'"
                End If

                If String.IsNullOrEmpty(txtLocationId.Text) = False Then
                    sql = sql + " and   A.LocationId = '" & txtLocationId.Text & "'"
                End If


                If ddlServiceFrequency.Text.Trim <> "-1" Then
                    sql = sql + " and   D.Frequency = '" & ddlServiceFrequency.Text.Trim & "'"
                End If

                If ddlBillingFrequency.Text.Trim <> "-1" Then
                    sql = sql + " and   C.BillingFrequency = '" & ddlBillingFrequency.Text.Trim & "'"
                End If

                If ddlContractGroup.Text.Trim <> "-1" Then
                    sql = sql + " and   C.ContractGroup = '" & ddlContractGroup.Text.Trim & "'"
                End If


                If rdbCompleted.Checked = True Then
                    sql = sql + " and  A.Status = 'P' "
                End If

                If rdbNotCompleted.Checked = True Then
                    sql = sql + " and  A.Status = 'O' "
                End If


                'If ChkServicesAll.Checked = True Then
                '    sql = sql + " and  A.Status = 'C'"
                'End If

                'If rbtServicestatus.SelectedValue = "C" Then
                '    sql = sql + " and  A.Status = 'P'"
                'End If

                'If rbtServicestatus.SelectedValue = "N" Then
                '    sql = sql + " and  A.Status = 'O'"
                'End If
                'txtInchargeSearch.Text = sql

            End If

            If rdbGrouping.SelectedIndex = 0 Then
                sql = sql + " order by A.ContractNo, A.ServiceDate"
            ElseIf rdbGrouping.SelectedIndex = 1 Then
                sql = sql + " order by A.AccountID, A.LocationId"
            ElseIf rdbGrouping.SelectedIndex = 2 Then
                sql = sql + " order by A.AccountID, A.ServiceDate"
            ElseIf rdbGrouping.SelectedIndex = 3 Then
            End If


            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            Dim TotDetailRecordsServiceRec = dt.Rows.Count
            If dt.Rows.Count > 0 Then

                Dim rowIndex = 0

                For Each row As DataRow In dt.Rows
                    If (TotDetailRecordsServiceRec > (rowIndex + 1)) Then
                        'AddNewRowLoc()
                        AddNewRowServiceRecs()
                    End If

                    Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                    TextBoxServiceRecordNo.Text = Convert.ToString(dt.Rows(rowIndex)("RecordNo"))

                    Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    TextBoxServiceDate.Text = Convert.ToString(Convert.ToDateTime(dt.Rows(rowIndex)("ServiceDate")).ToString("dd/MM/yyyy"))

                    Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                    TextBoxAccountId.Text = Convert.ToString(dt.Rows(rowIndex)("AccountId"))

                    Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtClientNameGV"), TextBox)
                    TextBoxClientName.Text = Convert.ToString(dt.Rows(rowIndex)("CustName"))

                    Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(dt.Rows(rowIndex)("ContractNo"))

                    Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceAddressGV"), TextBox)

                    If txtMode.Text = "View" Then
                        TextBoxServiceAddress.Text = Convert.ToString(dt.Rows(rowIndex)("Address1"))
                    Else
                        'TextBoxServiceAddress.Text = Convert.ToString(dt.Rows(rowIndex)("Address1")) + ", " + Convert.ToString(dt.Rows(rowIndex)("AddStreet")) + ", " + Convert.ToString(dt.Rows(rowIndex)("AddBuilding")) + ", " + Convert.ToString(dt.Rows(rowIndex)("AddPostal"))

                        TextBoxServiceAddress.Text = Convert.ToString(dt.Rows(rowIndex)("Address1")).Trim

                        If String.IsNullOrEmpty(Convert.ToString(dt.Rows(rowIndex)("AddStreet")).Trim) = False Then
                            TextBoxServiceAddress.Text = TextBoxServiceAddress.Text + ", " + Convert.ToString(dt.Rows(rowIndex)("AddStreet"))
                        End If

                        If String.IsNullOrEmpty(Convert.ToString(dt.Rows(rowIndex)("AddBuilding")).Trim) = False Then
                            TextBoxServiceAddress.Text = TextBoxServiceAddress.Text + ", " + Convert.ToString(dt.Rows(rowIndex)("AddBuilding"))
                        End If

                        If String.IsNullOrEmpty(Convert.ToString(dt.Rows(rowIndex)("AddPostal")).Trim) = False Then
                            TextBoxServiceAddress.Text = TextBoxServiceAddress.Text + ", " + Convert.ToString(dt.Rows(rowIndex)("AddPostal"))
                        End If

                    End If

                    Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = Convert.ToString(dt.Rows(rowIndex)("LocationId"))

                    Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                    TextBoxToBillAmt.Text = Convert.ToString(dt.Rows(rowIndex)("BillAmount"))


                    If txtMode.Text = "View" Then
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        TextBoxRcnoServiceRecord.Text = Convert.ToString(dt.Rows(rowIndex)("RcnoServiceRecord"))
                    Else
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        TextBoxRcnoServiceRecord.Text = Convert.ToString(dt.Rows(rowIndex)("Rcno"))
                    End If


                    Dim TextBoxName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountNameGV"), TextBox)
                    TextBoxName.Text = Convert.ToString(dt.Rows(rowIndex)("Name"))

                    Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillAddress1GV"), TextBox)
                    TextBoxBillAddress1.Text = Convert.ToString(dt.Rows(rowIndex)("BillAddress1"))

                    Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillBuildingGV"), TextBox)
                    TextBoxBillBuilding.Text = Convert.ToString(dt.Rows(rowIndex)("BillBuilding"))

                    Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillStreetGV"), TextBox)
                    TextBoxBillStreet.Text = Convert.ToString(dt.Rows(rowIndex)("BillStreet"))

                    Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillCountryGV"), TextBox)
                    TextBoxBillCountry.Text = Convert.ToString(dt.Rows(rowIndex)("BillCountry"))

                    Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillPostalGV"), TextBox)
                    TextBoxBillPostal.Text = Convert.ToString(dt.Rows(rowIndex)("BillPostal"))

                    Dim TextBoxOurRef As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtOurReferenceGV"), TextBox)
                    TextBoxOurRef.Text = Convert.ToString(dt.Rows(rowIndex)("OurRef"))

                    Dim TextBoxYourRef As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtYourReferenceGV"), TextBox)
                    TextBoxYourRef.Text = Convert.ToString(dt.Rows(rowIndex)("YourRef"))

                    Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtPoNoGV"), TextBox)
                    TextBoxPoNo.Text = Convert.ToString(dt.Rows(rowIndex)("PoNo"))

                    Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    TextBoxBillingFrequency.Text = Convert.ToString(dt.Rows(rowIndex)("BillingFrequency"))

                    Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    TextBoxRcnoInvoice.Text = Convert.ToString(dt.Rows(rowIndex)("RcnoInvoice"))

                    Dim TextBoxRcnoservicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServicebillingdetailGV"), TextBox)
                    TextBoxRcnoservicebillingdetail.Text = Convert.ToString(dt.Rows(rowIndex)("rcnotblservicebillingdetail"))

                    Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtStatusGV"), TextBox)
                    TextBoxStatus.Text = Convert.ToString(dt.Rows(rowIndex)("Status"))



                    Dim TextBoxContractGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtDeptGV"), TextBox)
                    TextBoxContractGroup.Text = Convert.ToString(dt.Rows(rowIndex)("ContractGroup"))


                    'Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtCreditTermsGV"), TextBox)
                    'TextBoxCreditTerms.Text = Convert.ToString(dt.Rows(rowIndex)("CreditTerms"))

                    Dim TextBoxtxtSalesmanGV As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesmanGV"), TextBox)
                    If Convert.ToString(dt.Rows(rowIndex)("Salesman")) = "-1" Then
                        TextBoxtxtSalesmanGV.Text = "-1"
                    Else
                        TextBoxtxtSalesmanGV.Text = Convert.ToString(dt.Rows(rowIndex)("Salesman"))
                    End If

                    'Dim TextBoxtxtSalesmanGV As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesmanGV"), TextBox)
                    'TextBoxtxtSalesmanGV.Text = Convert.ToString(dt.Rows(rowIndex)("Salesman"))

                    Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContactTypeGV"), TextBox)
                    TextBoxContactType.Text = Convert.ToString(dt.Rows(rowIndex)("ContactType"))

                    Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                    TextBoxCompanyGroup.Text = Convert.ToString(dt.Rows(rowIndex)("CompanyGroup"))

                    Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    TextBoxServiceBy.Text = Convert.ToString(dt.Rows(rowIndex)("ServiceBy"))

                    Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceLocationGroupGV"), TextBox)
                    TextBoxServiceLocationGroup.Text = Convert.ToString(dt.Rows(rowIndex)("ServiceLocationGroup"))


                    If TextBoxStatus.Text = "P" Then
                        TextBoxStatus.ForeColor = Color.Blue
                        TextBoxAccountId.ForeColor = Color.Blue
                        TextBoxClientName.ForeColor = Color.Blue
                        TextBoxServiceRecordNo.ForeColor = Color.Blue
                        TextBoxServiceDate.ForeColor = Color.Blue
                        TextBoxBillingFrequency.ForeColor = Color.Blue
                        TextBoxLocationId.ForeColor = Color.Blue
                        TextBoxServiceAddress.ForeColor = Color.Blue
                        TextBoxToBillAmt.ForeColor = Color.Blue
                        TextBoxContractNo.ForeColor = Color.Blue
                        TextBoxContractGroup.ForeColor = Color.Blue
                    End If



                    'Dim ButtonViewEdit As Button = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("btnViewEdit"), Button)
                    'ButtonViewEdit.Enabled = True

                    rowIndex += 1

                Next row

                'AddNewRowServiceRecs()
                'SetPreviousDataServiceRecs()
                'AddNewRowLoc()
                'SetPreviousDataLoc()
            Else
                FirstGridViewRowServiceRecs()

            End If
            'End If

            Label43.Text = "SERVICE BILLING DETAILS : Total Records :" & grvServiceRecDetails.Rows.Count.ToString
            updpnlServiceRecs.Update()
            'txtClientName.Text = sql

            Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

            If txtMode.Text = "View" Then

                If (table.Rows.Count > 0) Then
                    For i As Integer = 0 To (table.Rows.Count) - 1
                        Dim TextBoxSel As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("chkSelectGV"), CheckBox)
                        TextBoxSel.Enabled = False
                        TextBoxSel.Checked = True
                    Next i
                End If
            End If
            'End: Service Recods
            command1.Dispose()
            dt.Dispose()
            dtScdrLoc.Dispose()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PopulateInvoiceGrid", ex.Message.ToString, "")
        End Try
    End Sub
    '''''''''' Start: Service Record

    Private Sub FirstGridViewRowServiceRecs()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("SelRec", GetType(String)))
            dt.Columns.Add(New DataColumn("AccountId", GetType(String)))
            dt.Columns.Add(New DataColumn("ClientName", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceRecordNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("BillingFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceAddress", GetType(String)))
            dt.Columns.Add(New DataColumn("ToBillAmt", GetType(String)))

            dt.Columns.Add(New DataColumn("Dept", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("Status", GetType(String)))

            dt.Columns.Add(New DataColumn("RcnoServicebillingdetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecord", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecordDetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("ContactType", GetType(String)))
            dt.Columns.Add(New DataColumn("CompanyGroup", GetType(String)))

            dt.Columns.Add(New DataColumn("AccountName", GetType(String)))
            dt.Columns.Add(New DataColumn("BillAddress1", GetType(String)))
            dt.Columns.Add(New DataColumn("BillBuilding", GetType(String)))
            dt.Columns.Add(New DataColumn("BillStreet", GetType(String)))
            dt.Columns.Add(New DataColumn("BillCountry", GetType(String)))
            dt.Columns.Add(New DataColumn("BillPostal", GetType(String)))
            dt.Columns.Add(New DataColumn("OurReference", GetType(String)))
            dt.Columns.Add(New DataColumn("YourReference", GetType(String)))
            dt.Columns.Add(New DataColumn("PoNo", GetType(String)))
            dt.Columns.Add(New DataColumn("CreditTerms", GetType(String)))
            dt.Columns.Add(New DataColumn("Salesman", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceBy", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceLocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("Notes", GetType(String)))
            dr = dt.NewRow()

            dr("SelRec") = String.Empty
            dr("AccountId") = String.Empty
            dr("ClientName") = String.Empty
            dr("ServiceRecordNo") = String.Empty
            dr("ServiceDate") = String.Empty
            dr("BillingFrequency") = String.Empty
            dr("LocationId") = String.Empty
            dr("ServiceAddress") = String.Empty
            dr("ToBillAmt") = 0

            dr("Dept") = String.Empty
            dr("ContractNo") = String.Empty
            dr("Status") = String.Empty

            dr("RcnoServicebillingdetail") = 0
            dr("RcnoServiceRecord") = 0
            dr("RcnoServiceRecordDetail") = 0
            dr("RcnoInvoice") = 0
            dr("ContactType") = String.Empty
            dr("CompanyGroup") = String.Empty

            dr("AccountName") = String.Empty
            dr("BillAddress1") = String.Empty
            dr("BillBuilding") = String.Empty
            dr("BillStreet") = String.Empty
            dr("BillCountry") = String.Empty
            dr("BillPostal") = String.Empty
            dr("OurReference") = String.Empty
            dr("YourReference") = String.Empty
            dr("PoNo") = String.Empty
            dr("CreditTerms") = String.Empty
            dr("Salesman") = String.Empty
            dr("ServiceBy") = String.Empty
            dr("ServiceLocationGroup") = String.Empty
            dr("Notes") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableServiceRec") = dt

            grvServiceRecDetails.DataSource = dt
            grvServiceRecDetails.DataBind()

            'Dim btnAdd As Button = CType(grvServiceRecDetails.FooterRow.Cells(1).FindControl("btnViewEdit"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AddNewRowServiceRecs()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()


                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecordDetail") = TextBoxRcnoServiceRecordDetail.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ContactType") = TextBoxContactType.Text
                        dtCurrentTable.Rows(i - 1)("CompanyGroup") = TextBoxCompanyGroup.Text

                        dtCurrentTable.Rows(i - 1)("AccountName") = TextBoxAccountName.Text
                        dtCurrentTable.Rows(i - 1)("BillAddress1") = TextBoxBillAddress1.Text
                        dtCurrentTable.Rows(i - 1)("BillBuilding") = TextBoxBillBuilding.Text
                        dtCurrentTable.Rows(i - 1)("BillStreet") = TextBoxBillStreet.Text
                        dtCurrentTable.Rows(i - 1)("BillCountry") = TextBoxBillCountry.Text
                        dtCurrentTable.Rows(i - 1)("BillPostal") = TextBoxBillPostal.Text
                        dtCurrentTable.Rows(i - 1)("OurReference") = TextBoxOurReference.Text
                        dtCurrentTable.Rows(i - 1)("YourReference") = TextBoxYourReference.Text
                        dtCurrentTable.Rows(i - 1)("PoNo") = TextBoxPoNo.Text
                        dtCurrentTable.Rows(i - 1)("CreditTerms") = TextBoxCreditTerms.Text
                        dtCurrentTable.Rows(i - 1)("Salesman") = TextBoxSalesman.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServicebillingdetail") = TextBoxRcnoServicebillingdetail.Text

                        dtCurrentTable.Rows(i - 1)("Dept") = TextBoxDept.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("Status") = TextBoxStatus.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("ServiceLocationGroup") = TextBoxServiceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Notes") = TextBoxNotes.Text

                        If TextBoxStatus.Text = "P" Then
                            TextBoxStatus.ForeColor = Color.Blue
                            TextBoxAccountId.ForeColor = Color.Blue
                            TextBoxClientName.ForeColor = Color.Blue
                            TextBoxServiceRecordNo.ForeColor = Color.Blue
                            TextBoxServiceDate.ForeColor = Color.Blue
                            TextBoxBillingFrequency.ForeColor = Color.Blue
                            TextBoxLocationId.ForeColor = Color.Blue
                            TextBoxServiceAddress.ForeColor = Color.Blue
                            TextBoxToBillAmt.ForeColor = Color.Blue
                            TextBoxContractNo.ForeColor = Color.Blue
                            TextBoxDept.ForeColor = Color.Blue
                        End If

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServiceRec") = dtCurrentTable

                    grvServiceRecDetails.DataSource = dtCurrentTable
                    grvServiceRecDetails.DataBind()



                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServiceRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecServiceRecs()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)


                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Checked
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecordDetail") = TextBoxRcnoServiceRecordDetail.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ContactType") = TextBoxContactType.Text
                        dtCurrentTable.Rows(i - 1)("CompanyGroup") = TextBoxCompanyGroup.Text

                        dtCurrentTable.Rows(i - 1)("AccountName") = TextBoxAccountName.Text
                        dtCurrentTable.Rows(i - 1)("BillAddress1") = TextBoxBillAddress1.Text
                        dtCurrentTable.Rows(i - 1)("BillBuilding") = TextBoxBillBuilding.Text
                        dtCurrentTable.Rows(i - 1)("BillStreet") = TextBoxBillStreet.Text
                        dtCurrentTable.Rows(i - 1)("BillCountry") = TextBoxBillCountry.Text
                        dtCurrentTable.Rows(i - 1)("BillPostal") = TextBoxBillPostal.Text
                        dtCurrentTable.Rows(i - 1)("OurReference") = TextBoxOurReference.Text
                        dtCurrentTable.Rows(i - 1)("YourReference") = TextBoxYourReference.Text
                        dtCurrentTable.Rows(i - 1)("PoNo") = TextBoxPoNo.Text
                        dtCurrentTable.Rows(i - 1)("CreditTerms") = TextBoxCreditTerms.Text
                        dtCurrentTable.Rows(i - 1)("Salesman") = TextBoxSalesman.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServicebillingdetail") = TextBoxRcnoServicebillingdetail.Text

                        dtCurrentTable.Rows(i - 1)("Dept") = TextBoxDept.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("Status") = TextBoxStatus.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("ServiceLocationGroup") = TextBoxServiceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Notes") = TextBoxNotes.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableServiceRec") = dtCurrentTable

                    grvServiceRecDetails.DataSource = dtCurrentTable
                    grvServiceRecDetails.DataBind()



                End If

                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServiceRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetPreviousDataServiceRecs()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)


                        TextBoxSelect.Text = dt.Rows(i)("SelRec").ToString()
                        TextBoxAccountId.Text = dt.Rows(i)("AccountId").ToString()
                        TextBoxClientName.Text = dt.Rows(i)("ClientName").ToString()
                        TextBoxServiceRecordNo.Text = dt.Rows(i)("ServiceRecordNo").ToString()
                        TextBoxServiceDate.Text = dt.Rows(i)("ServiceDate").ToString()
                        TextBoxBillingFrequency.Text = dt.Rows(i)("BillingFrequency").ToString()
                        TextBoxLocationId.Text = dt.Rows(i)("LocationId").ToString()
                        TextBoxServiceAddress.Text = dt.Rows(i)("ServiceAddress").ToString()
                        TextBoxToBillAmt.Text = dt.Rows(i)("ToBillAmt").ToString()
                        TextBoxRcnoServiceRecord.Text = dt.Rows(i)("RcnoServiceRecord").ToString()
                        TextBoxRcnoServiceRecordDetail.Text = dt.Rows(i)("RcnoServiceRecordDetail").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxContactType.Text = dt.Rows(i)("ContactType").ToString()
                        TextBoxCompanyGroup.Text = dt.Rows(i)("CompanyGroup").ToString()

                        TextBoxAccountName.Text = dt.Rows(i)("AccountName").ToString()

                        TextBoxBillAddress1.Text = dt.Rows(i)("BillAddress1").ToString()
                        TextBoxBillBuilding.Text = dt.Rows(i)("BillBuilding").ToString()
                        TextBoxBillStreet.Text = dt.Rows(i)("BillStreet").ToString()
                        TextBoxBillCountry.Text = dt.Rows(i)("BillCountry").ToString()
                        TextBoxBillPostal.Text = dt.Rows(i)("BillPostal").ToString()
                        TextBoxOurReference.Text = dt.Rows(i)("OurReference").ToString()
                        TextBoxYourReference.Text = dt.Rows(i)("YourReference").ToString()
                        TextBoxPoNo.Text = dt.Rows(i)("PoNo").ToString()
                        TextBoxCreditTerms.Text = dt.Rows(i)("CreditTerms").ToString()
                        TextBoxSalesman.Text = dt.Rows(i)("Salesman").ToString()
                        TextBoxRcnoServicebillingdetail.Text = dt.Rows(i)("RcnoServicebillingdetail").ToString()

                        TextBoxDept.Text = dt.Rows(i)("Dept").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxStatus.Text = dt.Rows(i)("Status").ToString()
                        TextBoxServiceBy.Text = dt.Rows(i)("ServiceBy").ToString()
                        TextBoxServiceLocationGroup.Text = dt.Rows(i)("ServiceLocationGroup").ToString()
                        TextBoxNotes.Text = dt.Rows(i)("Notes").ToString()

                        If TextBoxStatus.Text = "P" Then
                            TextBoxStatus.ForeColor = Color.Blue
                            TextBoxAccountId.ForeColor = Color.Blue
                            TextBoxClientName.ForeColor = Color.Blue
                            TextBoxServiceRecordNo.ForeColor = Color.Blue
                            TextBoxServiceDate.ForeColor = Color.Blue
                            TextBoxBillingFrequency.ForeColor = Color.Blue
                            TextBoxLocationId.ForeColor = Color.Blue
                            TextBoxServiceAddress.ForeColor = Color.Blue
                            TextBoxToBillAmt.ForeColor = Color.Blue
                            TextBoxContractNo.ForeColor = Color.Blue
                            TextBoxDept.ForeColor = Color.Blue
                        End If

                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetRowDataServiceRecs()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableServiceRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableServiceRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
                        Dim TextBoxAccountId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim TextBoxClientName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(1).FindControl("txtClientNameGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(2).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim TextBoxServiceDate As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(3).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(4).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxLocationId As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(5).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxServiceAddress As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(6).FindControl("txtServiceAddressGV"), TextBox)
                        Dim TextBoxToBillAmt As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(8).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoServiceRecordDetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(9).FindControl("txtRcnoServiceRecordDetailGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxContactType As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContactTypeGV"), TextBox)
                        Dim TextBoxCompanyGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtCompanyGroupGV"), TextBox)

                        Dim TextBoxAccountName As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(13).FindControl("txtAccountNameGV"), TextBox)
                        Dim TextBoxBillAddress1 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(14).FindControl("txtBillAddress1GV"), TextBox)
                        Dim TextBoxBillBuilding As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(15).FindControl("txtBillBuildingGV"), TextBox)
                        Dim TextBoxBillStreet As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(16).FindControl("txtBillStreetGV"), TextBox)
                        Dim TextBoxBillCountry As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(17).FindControl("txtBillCountryGV"), TextBox)
                        Dim TextBoxBillPostal As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(18).FindControl("txtBillPostalGV"), TextBox)
                        Dim TextBoxOurReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(19).FindControl("txtOurReferenceGV"), TextBox)
                        Dim TextBoxYourReference As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(20).FindControl("txtYourReferenceGV"), TextBox)
                        Dim TextBoxPoNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(21).FindControl("txtPoNoGV"), TextBox)
                        Dim TextBoxCreditTerms As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(22).FindControl("txtCreditTermsGV"), TextBox)
                        Dim TextBoxSalesman As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(23).FindControl("txtSalesmanGV"), TextBox)
                        Dim TextBoxRcnoServicebillingdetail As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(24).FindControl("txtRcnoServicebillingdetailGV"), TextBox)

                        Dim TextBoxDept As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(10).FindControl("txtDeptGV"), TextBox)
                        Dim TextBoxStatus As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(12).FindControl("txtStatusGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(25).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxServiceLocationGroup As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxNotes As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(30).FindControl("txtNotesGroupGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()


                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("AccountId") = TextBoxAccountId.Text
                        dtCurrentTable.Rows(i - 1)("ClientName") = TextBoxClientName.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("LocationId") = TextBoxLocationId.Text
                        dtCurrentTable.Rows(i - 1)("ServiceAddress") = TextBoxServiceAddress.Text
                        dtCurrentTable.Rows(i - 1)("ToBillAmt") = TextBoxToBillAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecordDetail") = TextBoxRcnoServiceRecordDetail.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ContactType") = TextBoxContactType.Text
                        dtCurrentTable.Rows(i - 1)("CompanyGroup") = TextBoxCompanyGroup.Text

                        dtCurrentTable.Rows(i - 1)("AccountName") = TextBoxAccountName.Text
                        dtCurrentTable.Rows(i - 1)("BillAddress1") = TextBoxBillAddress1.Text
                        dtCurrentTable.Rows(i - 1)("BillBuilding") = TextBoxBillBuilding.Text
                        dtCurrentTable.Rows(i - 1)("BillStreet") = TextBoxBillStreet.Text
                        dtCurrentTable.Rows(i - 1)("BillCountry") = TextBoxBillCountry.Text
                        dtCurrentTable.Rows(i - 1)("BillPostal") = TextBoxBillPostal.Text
                        dtCurrentTable.Rows(i - 1)("OurReference") = TextBoxOurReference.Text
                        dtCurrentTable.Rows(i - 1)("YourReference") = TextBoxYourReference.Text
                        dtCurrentTable.Rows(i - 1)("PoNo") = TextBoxPoNo.Text
                        dtCurrentTable.Rows(i - 1)("CreditTerms") = TextBoxCreditTerms.Text
                        dtCurrentTable.Rows(i - 1)("Salesman") = TextBoxSalesman.Text
                        dtCurrentTable.Rows(i - 1)("RcnoServicebillingdetail") = TextBoxRcnoServicebillingdetail.Text

                        dtCurrentTable.Rows(i - 1)("Dept") = TextBoxDept.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("Status") = TextBoxStatus.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("ServiceLocationGroup") = TextBoxServiceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("Notes") = TextBoxNotes.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableServiceRec") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataServiceRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try

    End Sub

    'End: Serice Record Grid


    'Start: Billing Details Grid


    Private Sub FirstGridViewRowBillingDetailsRecs()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));
            dt.Columns.Add(New DataColumn("SelectRec", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemCode", GetType(String)))
            dt.Columns.Add(New DataColumn("Description", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))

            dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            dt.Columns.Add(New DataColumn("Qty", GetType(String)))
            dt.Columns.Add(New DataColumn("PricePerUOM", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPrice", GetType(String)))

            dt.Columns.Add(New DataColumn("DiscPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("DiscAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("PriceWithDisc", GetType(String)))

            dt.Columns.Add(New DataColumn("TaxType", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPriceWithGST", GetType(String)))

            dt.Columns.Add(New DataColumn("RcnoServiceRecord", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceRecordDetail", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoServiceBillingDetailItem", GetType(String)))

            dt.Columns.Add(New DataColumn("ServiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("OtherCode", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceRecordNo", GetType(String)))

            dt.Columns.Add(New DataColumn("BillingFrequency", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceBy", GetType(String)))

            dt.Columns.Add(New DataColumn("LocationId", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceLocationGroup", GetType(String)))
            dt.Columns.Add(New DataColumn("OriginalBillAmount", GetType(String)))

            dr = dt.NewRow()

            dr("SelectRec") = String.Empty
            dr("ItemType") = String.Empty
            dr("ItemCode") = String.Empty
            dr("Description") = String.Empty
            dr("ItemDescription") = String.Empty
            dr("GLDescription") = String.Empty

            dr("UOM") = String.Empty
            dr("Qty") = 0
            dr("PricePerUOM") = 0.0
            dr("TotalPrice") = 0
            dr("DiscPerc") = 0.0
            dr("DiscAmount") = 0
            dr("PriceWithDisc") = 0
            dr("TaxType") = String.Empty
            dr("GSTPerc") = 0.0
            dr("GSTAmt") = 0
            dr("TotalPriceWithGST") = 0
            dr("RcnoServiceRecord") = 0
            dr("RcnoInvoice") = 0
            dr("InvoiceNo") = String.Empty
            dr("ContractNo") = String.Empty

            dr("OtherCode") = 0
            dr("ServiceRecordNo") = String.Empty

            dr("ServiceDate") = String.Empty
            dr("BillingFrequency") = String.Empty
            dr("ServiceBy") = String.Empty

            dr("LocationId") = String.Empty
            dr("ServiceLocationGroup") = String.Empty

            dr("OriginalBillAmount") = String.Empty

            dt.Rows.Add(dr)

            ViewState("CurrentTableBillingDetailsRec") = dt

            grvBillingDetails.DataSource = dt
            grvBillingDetails.DataBind()
            'grvBillingDetails.ShowHeader = True
            Dim btnAdd As Button = CType(grvBillingDetails.FooterRow.Cells(1).FindControl("btnAddDetail"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AddNewRowBillingDetailsRecs()
        Try
            Dim rowIndex As Integer = 0
            Dim Query As String

            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtOriginalBillAmountGV"), TextBox)

                        'dr("txtLocationIdGV") = String.Empty
                        'dr("txtServiceLocationGroupGV") = String.Empty
                        TextBoxSelect.Checked = True

                        drCurrentRow = dtCurrentTable.NewRow()

                        'TextBoxSelect.Checked = True
                        'Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                        dtCurrentTable.Rows(i - 1)("SelectRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        dtCurrentTable.Rows(i - 1)("Description") = TextBoxDescription.Text
                        dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PricePerUOM") = TextBoxPricePerUOM.Text
                        dtCurrentTable.Rows(i - 1)("TotalPrice") = TextBoxTotalPrice.Text

                        dtCurrentTable.Rows(i - 1)("DiscPerc") = TextBoxDiscPerc.Text
                        dtCurrentTable.Rows(i - 1)("DiscAmount") = TextBoxDiscAmount.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text

                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text

                        'dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text

                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("LocationID") = TextBoxLocationID.Text
                        dtCurrentTable.Rows(i - 1)("serviceLocationGroup") = TextBoxserviceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("OriginalBillAmount") = TextBoxOriginalBillAmount.Text

                        rowIndex += 1

                    Next i

                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable

                    grvBillingDetails.DataSource = dtCurrentTable
                    grvBillingDetails.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        'Dim TextBoxTargetDesc1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)

                        'If ConfigurationManager.AppSettings("DomainName").ToString() = "SINGAPORE" Then
                        '    Query = "Select * from tbltaxType order by taxType"
                        'Else
                        '    Query = "Select * from tbltaxType order by taxType desc"
                        'End If

                        ''Query = "Select TaxType from tbltaxtype"
                        'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)


                        Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Query = "Select * from tblunitms order by UnitMs"
                        PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)


                        Dim TextBoxSelect1 As CheckBox = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("chkSelectRecGV"), CheckBox)
                        TextBoxSelect1.Checked = True

                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxItemDescription1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        TextBoxQty1.Text = 1

                        If TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxQty1.Enabled = False
                            TextBoxQty1.Text = 1
                        End If

                        rowIndex2 += 1
                        j += 1
                    Loop

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex - 1).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                    'TextBoxTargetDesc2.Text = "SR"


                    'Query = "Select TaxType from tbltaxtype"
                    'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc2)


                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "AddNewRowBillingDetailsRecs", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub SetPreviousDataBillingDetailsRecs()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)

                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtOriginalBillAmountGV"), TextBox)

                        TextBoxSelect.Text = dt.Rows(i)("SelectRec").ToString()
                        TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxItemCode.Text = dt.Rows(i)("ItemCode").ToString()
                        TextBoxDescription.Text = dt.Rows(i)("Description").ToString()
                        TextBoxItemDescription.Text = dt.Rows(i)("ItemDescription").ToString()
                        TextBoxUOM.Text = dt.Rows(i)("UOM").ToString()
                        TextBoxQty.Text = dt.Rows(i)("Qty").ToString()
                        TextBoxPricePerUOM.Text = dt.Rows(i)("PricePerUOM").ToString()
                        TextBoxTotalPrice.Text = dt.Rows(i)("TotalPrice").ToString()

                        TextBoxDiscPerc.Text = dt.Rows(i)("DiscPerc").ToString()
                        TextBoxDiscAmount.Text = dt.Rows(i)("DiscAmount").ToString()
                        TextBoxPriceWithDisc.Text = dt.Rows(i)("PriceWithDisc").ToString()

                        TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxGSTPerc.Text = dt.Rows(i)("GSTPerc").ToString()
                        TextBoxGSTAmt.Text = dt.Rows(i)("GSTAmt").ToString()
                        TextBoxTotalPriceWithGST.Text = dt.Rows(i)("TotalPriceWithGST").ToString()

                        TextBoxRcnoServiceRecord.Text = dt.Rows(i)("RcnoServiceRecord").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxInvoiceNo.Text = dt.Rows(i)("InvoiceNo").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        'TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        TextBoxOtherCode.Text = dt.Rows(i)("OtherCode").ToString()
                        'TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxServiceRecordNo.Text = dt.Rows(i)("ServiceRecordNo").ToString()

                        TextBoxServiceDate.Text = dt.Rows(i)("ServiceDate").ToString()
                        TextBoxServiceBy.Text = dt.Rows(i)("ServiceBy").ToString()
                        TextBoxBillingFrequency.Text = dt.Rows(i)("BillingFrequency").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString

                        TextBoxLocationID.Text = dt.Rows(i)("LocationID").ToString
                        TextBoxserviceLocationGroup.Text = dt.Rows(i)("serviceLocationGroup").ToString
                        TextBoxOriginalBillAmount.Text = dt.Rows(i)("OriginalBillAmount").ToString


                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxTaxType1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtTaxTypeGV"), TextBox)

                        Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxItemDescription1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)

                        '''''''''''''
                        Dim Query As String
                        Dim TextBoxRcnoInvoice1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxRecordNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)
                        Dim TextBoxContractNo1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtContractNoGV"), TextBox)

                        If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                            TextBoxRecordNo1.Enabled = False
                            TextBoxContractNo1.Enabled = True
                        ElseIf TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxRecordNo1.Enabled = True
                            TextBoxContractNo1.Enabled = False
                        End If


                        If txtMode.Text = "View" Then

                        Else
                            If TextBoxItemType1.Text <> "-1" Then
                                If String.IsNullOrEmpty(TextBoxRcnoInvoice1.Text) = False Then
                                    'Query = "Select RecordNo from tblServiceRecord where AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'TextBoxRecordNo1.Items.Clear()
                                    'TextBoxRecordNo1.Items.Add("--SELECT--")
                                    'PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                                    TextBoxRecordNo1.Enabled = False

                                    If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                                        TextBoxRecordNo1.Enabled = False
                                        TextBoxContractNo1.Enabled = True
                                    ElseIf TextBoxItemType1.Text = "SERVICE" Then
                                        TextBoxRecordNo1.Enabled = True
                                        TextBoxContractNo1.Enabled = False
                                    End If

                                Else
                                    'Query = "Select RecordNo from tblServiceRecord where BillYN= 'N' and AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'Query = "Select RecordNo from tblServiceRecord where (BillAmount - BilledAmt - TotalCreditAmount) > 0 and AccountId = '" & txtAccountIdBilling.Text & "' and (Status ='O' or Status ='P') order by RecordNo"
                                    'TextBoxRecordNo1.Items.Clear()
                                    'TextBoxRecordNo1.Items.Add("--SELECT--")

                                    'If TextBoxItemType1.Text = "SERVICE" Then
                                    '    PopulateDropDownList(Query, "RecordNo", "RecordNo", TextBoxRecordNo1)
                                    'End If

                                    TextBoxRecordNo1.Enabled = True

                                    If TextBoxItemType1.Text = "STOCK" Or TextBoxItemType1.Text = "OTHERS" Then
                                        TextBoxRecordNo1.Enabled = False
                                        TextBoxContractNo1.Enabled = True
                                    ElseIf TextBoxItemType1.Text = "SERVICE" Then
                                        TextBoxRecordNo1.Enabled = True
                                        TextBoxContractNo1.Enabled = False
                                    End If
                                End If

                                'Dim TextBoxTargetDesc1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                                'Query = "Select * from tbltaxtype order by TaxType"
                                'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)
                            End If



                            'If TextBoxItemType1.Enabled = False Then
                            '    TextBoxRecordNo1.Enabled = False
                            'End If
                        End If

                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        Dim rowIndex2 As Integer = 0
                        Dim j As Integer = 1
                        Do While j <= (rowIndex)

                            Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            Query = "Select * from tblunitms order by UnitMs"
                            PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)

                            rowIndex2 += 1
                            j += 1
                        Loop


                        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        If TextBoxItemType1.Text <> "-1" Then
                            'Dim query As String

                            '30.05.17

                            Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)

                            If TextBoxItemCode2.Items.Count = 1 Then
                                Query = "Select Description from tblbillingproducts  "
                                TextBoxItemCode2.SelectedIndex = -1
                                PopulateDropDownList(Query, "Description", "Description", TextBoxItemCode2)
                            End If

                            '30.05.17

                            '12.01.17
                            'Dim TextBoxTaxCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                            'If ConfigurationManager.AppSettings("DomainName").ToString() = "SINGAPORE" Then
                            '    Query = "Select * from tbltaxType order by taxType"
                            'Else
                            '    Query = "Select * from tbltaxType order by taxType desc"
                            'End If

                            'PopulateDropDownList(Query, "taxType", "taxType", TextBoxTaxCode1)
                            '12.01.17

                            'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            'query = "Select * from tblunitms "
                            'PopulateDropDownList(query, "UnitMs", "UnitMs", TextBoxUOM)

                            If TextBoxItemType1.Text = "SERVICE" Then
                                TextBoxQty1.Enabled = False
                                TextBoxQty1.Text = 1
                                'TextBoxItemCode1.Enabled = False
                                'TextBoxItemDescription1.Enabled = False
                                'TextBoxItemType1.Enabled = False
                                'TextBoxItemCode1.Enabled = False
                                'TextBoxItemDescription1.Enabled = False
                                'ElseIf TextBoxItemType1.Text = "STOCK" Then
                                '    TextBoxRecordNo1.SelectedIndex = 0
                            End If

                        End If


                        rowIndex += 1
                    Next i
                End If

                dt.Dispose()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString

            If Left(exstr, 60) = "System.ArgumentOutOfRangeException: 'txtServiceRecordGV' has" Then
                'If exstr = "System.ArgumentOutOfRangeException: 'txtServiceRecordGV' has a SelectedValue which is invalid because it does not exist in the list of items." Then

            Else
                InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "SetPreviousDataBillingDetailsRecs", ex.Message.ToString, "")
                lblAlert.Text = exstr
            End If

            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetRowDataBillingDetailsRecs()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableBillingDetailsRec") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtDescriptionGV"), TextBox)
                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(2).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(3).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(6).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(7).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(8).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(9).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(10).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(12).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(11).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(13).FindControl("txtRcnoServiceRecordGV"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(15).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(16).FindControl("txtServiceStatusGV"), TextBox)
                        'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceRecordGV"), TextBox)

                        Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtServiceDateGV"), TextBox)
                        Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtServiceByGV"), TextBox)
                        Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(19).FindControl("txtBillingFrequencyGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)

                        Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(21).FindControl("txtLocationIdGV"), TextBox)
                        Dim TextBoxserviceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtServiceLocationGroupGV"), TextBox)
                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(22).FindControl("txtOriginalBillAmountGV"), TextBox)


                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SelectRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        dtCurrentTable.Rows(i - 1)("Description") = TextBoxDescription.Text
                        dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PricePerUOM") = TextBoxPricePerUOM.Text
                        dtCurrentTable.Rows(i - 1)("TotalPrice") = TextBoxTotalPrice.Text

                        dtCurrentTable.Rows(i - 1)("DiscPerc") = TextBoxDiscPerc.Text
                        dtCurrentTable.Rows(i - 1)("DiscAmount") = TextBoxDiscAmount.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text

                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("RcnoServiceRecord") = TextBoxRcnoServiceRecord.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        'dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("ServiceRecordNo") = TextBoxServiceRecordNo.Text

                        dtCurrentTable.Rows(i - 1)("ServiceDate") = TextBoxServiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ServiceBy") = TextBoxServiceBy.Text
                        dtCurrentTable.Rows(i - 1)("BillingFrequency") = TextBoxBillingFrequency.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("LocationID") = TextBoxLocationID.Text
                        dtCurrentTable.Rows(i - 1)("serviceLocationGroup") = TextBoxserviceLocationGroup.Text
                        dtCurrentTable.Rows(i - 1)("OriginalBillAmount") = TextBoxOriginalBillAmount.Text

                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableBillingDetailsRec") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecs()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "SetRowDataBillingDetailsRecs", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try

    End Sub

    'End: Biling Details Grid

    'Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
    '    lblAlert.Text = ""
    '    If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
    '        '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
    '        lblAlert.Text = "SELECT CUSTOMER TYPE TO PROCEED"
    '        Exit Sub
    '    End If


    '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
    '        txtPopUpClient.Text = txtAccountId.Text
    '        txtPopupClientSearch.Text = txtPopUpClient.Text

    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and (upper(Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or accountid like '" + txtPopupClientSearch.Text + "%' or contactperson like '%" + txtPopupClientSearch.Text + "%') order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblPERSON where 1=1 and (upper(Name) Like '%" + txtPopupClientSearch.Text.Trim.ToUpper + "%' or accountid like '" + txtPopupClientSearch.Text + "%' or contACTperson like '%" + txtPopupClientSearch.Text + "%') order by name"
    '        End If

    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '    Else

    '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
    '            SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1  order by name"
    '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
    '            SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where 1=1  order by name"
    '        End If


    '        SqlDSClient.DataBind()
    '        gvClient.DataBind()
    '    End If
    '    mdlPopUpClient.Show()
    'End Sub

    Protected Sub btnPopUpClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientSearch.Click
        'If txtPopUpClient.Text.Trim = "" Then
        '    MessageBox.Message.Alert(Page, "Please enter client name", "str")
        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"
        '    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "')"

        '    SqlDSClient.DataBind()
        '    gvClient.DataBind()
        '    mdlPopUpClient.Show()
        'End If
    End Sub

    Protected Sub gvClient_PageIndexChanging(sender As Object, e As GridViewPageEventArgs)
        Try


            If txtPopUpClient.Text.Trim = "Search Here for AccountID or Client Name or Contact Person" Then
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where status ='O' order by name"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where status ='O' order by name"
                End If
            Else
                If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman From tblCompany where 1=1 and status ='O' and (upper(Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or accountid like '" + txtPopUpClient.Text + "%' or contactperson like '%" + txtPopUpClient.Text + "%') order by name"
                ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman From tblPERSON where 1=1 and status ='O'and (upper(Name) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or accountid like '" + txtPopUpClient.Text + "%' or contACTperson like '%" + txtPopUpClient.Text + "%') order by name"
                End If

                'SqlDSClient.DataBind()
                'gvClient.DataBind()
                'mdlPopUpClient.Show()
            End If

            SqlDSClient.DataBind()
            gvClient.DataBind()
            mdlPopUpClient.Show()
            'End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "gvClient_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub



    Protected Sub gvClient_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        Try
            lblAlert.Text = ""
            txtIsPopup.Text = ""
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


            If txtSearch.Text = "InvoiceFilter" Then
                txtSearchAccountID.Text = ""

                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlSearchContactType.Text = ""
                Else
                    ddlSearchContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtSearchAccountID.Text = ""
                Else
                    txtSearchAccountID.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                    txtSearchClientName.Text = ""
                Else
                    txtSearchClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
                End If


                txtSearch.Text = "N"
                mdlPopupSearch.Show()

            End If


            If txtSearch.Text = "ImportService" Then
                txtAccountId.Text = ""
                txtAccountId.Text = ""


                If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                    ddlCompanyGrp.Text = ""
                Else
                    ddlCompanyGrp.Text = gvClient.SelectedRow.Cells(23).Text.Trim
                End If


                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactType.Text = ""
                Else
                    ddlContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountId.Text = ""
                Else
                    txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                    txtClientName.Text = ""
                Else
                    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtLocationId.Text = ""
                Else
                    txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                txtSearch.Text = "N"
                mdlImportServices.Show()


            End If

            If txtSearch.Text = "ServiceSearch" Then
                txtAccountId.Text = ""
                txtClientName.Text = ""


                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountId.Text = ""
                Else
                    txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                    txtClientName.Text = ""
                Else
                    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtLocationId.Text = ""
                Else
                    txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If


            ElseIf txtSearch.Text = "InvoiceSearch" Then
                txtAccountIdSearch.Text = ""
                txtClientNameSearch.Text = ""


                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactTypeSearch.Text = ""
                Else
                    ddlContactTypeSearch.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountIdSearch.Text = ""
                Else
                    txtAccountIdSearch.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                    txtClientNameSearch.Text = ""
                Else
                    txtClientNameSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                    ddlCompanyGrpSearch.Text = ""
                Else
                    ddlCompanyGrpSearch.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(23).Text.Trim)
                End If

            ElseIf txtSearch.Text = "CustomerSearch" Then
                txtAccountIdBilling.Text = ""
                txtAccountName.Text = ""

               
                If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    txtAccountType.Text = ""
                Else
                    txtAccountType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountIdBilling.Text = ""
                Else
                    txtAccountIdBilling.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtLocationIdSelected.Text = ""
                Else
                    txtLocationIdSelected.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                    ddlContractGroupBilling.SelectedIndex = 0
                Else
                    ddlContractGroupBilling.Text = gvClient.SelectedRow.Cells(4).Text.Trim
                End If

                If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                    txtAccountName.Text = ""
                Else
                    txtAccountName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(8).Text = "&nbsp;") Then
                    txtContactPerson.Text = ""
                Else
                    txtContactPerson.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(8).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                    txtCompanyGroup.Text = ""
                Else
                    txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(23).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(10).Text = "&nbsp;") Then
                    txtBillAddress.Text = ""
                Else
                    txtBillAddress.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(10).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(11).Text = "&nbsp;") Then
                    txtBillStreet.Text = ""
                Else
                    txtBillStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(11).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(12).Text = "&nbsp;") Then
                    txtBillBuilding.Text = ""
                Else
                    txtBillBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(12).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(13).Text = "&nbsp;") Then
                    txtBillCity.Text = ""
                Else
                    txtBillCity.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(13).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(14).Text = "&nbsp;") Then
                    txtBillState.Text = ""
                Else
                    txtBillState.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(14).Text.Trim)
                End If


                If (gvClient.SelectedRow.Cells(15).Text = "&nbsp;") Then
                    txtBillCountry.Text = ""
                Else
                    txtBillCountry.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(15).Text.Trim)
                End If

                If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
                    txtBillPostal.Text = ""
                Else
                    txtBillPostal.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim)
                End If


                If gvClient.SelectedRow.Cells(20).Text = "" Or gvClient.SelectedRow.Cells(19).Text = "&nbsp;" Then
                    'Dim gSalesman As String

                Else

                    gddlvalue = gvClient.SelectedRow.Cells(20).Text

                    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlSalesmanBilling.Items.Add(gddlvalue)
                        ddlSalesmanBilling.Text = gddlvalue
                    Else
                        ddlSalesmanBilling.Text = gvClient.SelectedRow.Cells(20).Text
                    End If
                End If


                If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                    txtLocation.Text = ""
                Else
                    txtLocation.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                End If




                If gvClient.SelectedRow.Cells(19).Text = "" Or gvClient.SelectedRow.Cells(19).Text = "&nbsp;" Then
                    'Dim gSalesman As String
                    ddlCreditTerms.SelectedIndex = 0
                Else

                    gddlvalue = gvClient.SelectedRow.Cells(19).Text

                    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                        ddlCreditTerms.Items.Add(gddlvalue)
                        ddlCreditTerms.Text = gddlvalue
                    Else
                        ddlCreditTerms.Text = gvClient.SelectedRow.Cells(19).Text
                    End If
                End If

                If ddlCreditTerms.SelectedIndex > 0 Then
                    ddlCreditTerms_SelectedIndexChanged(sender, e)
                End If

                If grvBillingDetails.Rows.Count = 0 Then
                    FirstGridViewRowBillingDetailsRecs()
                    txtInvoiceAmount.Text = "0.00"
                    txtDiscountAmount.Text = "0.00"
                    txtAmountWithDiscount.Text = "0.00"
                    txtGSTAmount.Text = "0.00"
                    txtNetAmount.Text = "0.00"
                End If

            End If

            gvLocation.DataBind()
            mdlPopUpClient.Hide()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "gvClient_SelectedIndexChanged", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub gvClient2_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvClient2.PageIndexChanging
        gvClient2.PageIndex = e.NewPageIndex

        If txtClientFrom.Text = "ImportService" Then
            SqlDSClient2.SelectCommand = txtImportService.Text
        End If

        If txtSearch.Text = "CustomerSearch" Then
            SqlDSClient2.SelectCommand = txtCustomerSearch.Text
        End If

        If txtSearch.Text = "InvoiceSearch" Then
            SqlDSClient2.SelectCommand = txtInvoiceSearch.Text
        End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
        'txtIsPopup.Text = "Client"


        SqlDSClient2.DataBind()
        gvClient2.DataBind()
        mdlPopUpClient2.Show()
    End Sub


    Protected Sub gvClient2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvClient2.SelectedIndexChanged
        Try
            lblAlert.Text = ""
            txtIsPopup.Text = ""
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


            'If txtSearch.Text = "InvoiceFilter" Then
            '    txtSearchAccountID.Text = ""

            '    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        ddlSearchContactType.Text = ""
            '    Else
            '        ddlSearchContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
            '        txtSearchAccountID.Text = ""
            '    Else
            '        txtSearchAccountID.Text = gvClient.SelectedRow.Cells(2).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
            '        txtSearchClientName.Text = ""
            '    Else
            '        txtSearchClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(5).Text.Trim)
            '    End If


            '    txtSearch.Text = "N"
            '    mdlPopupSearch.Show()

            'End If


            'If txtSearch.Text = "ImportService" Then
            '    txtAccountId.Text = ""
            '    txtAccountId.Text = ""


            '    If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
            '        ddlCompanyGrp.Text = ""
            '    Else
            '        ddlCompanyGrp.Text = gvClient.SelectedRow.Cells(23).Text.Trim
            '    End If


            '    If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        ddlContactType.Text = ""
            '    Else
            '        ddlContactType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
            '        txtAccountId.Text = ""
            '    Else
            '        txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
            '    End If

            '    If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
            '        txtClientName.Text = ""
            '    Else
            '        txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
            '    End If


            '    If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
            '        txtLocationId.Text = ""
            '    Else
            '        txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
            '    End If

            '    txtSearch.Text = "N"
            '    mdlImportServices.Show()


            'End If

            If txtSearch.Text = "ServiceSearch" Then
                'txtAccountId.Text = ""
                'txtClientName.Text = ""


                'If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                '    txtAccountId.Text = ""
                'Else
                '    txtAccountId.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                '    txtClientName.Text = ""
                'Else
                '    txtClientName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtLocationId.Text = ""
                'Else
                '    txtLocationId.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                'End If


            ElseIf txtSearch.Text = "InvoiceSearch" Then
                txtAccountIdSearch.Text = ""
                txtClientNameSearch.Text = ""


                If (gvClient2.SelectedRow.Cells(1).Text = "&nbsp;") Then
                    ddlContactTypeSearch.Text = ""
                Else
                    ddlContactTypeSearch.Text = gvClient2.SelectedRow.Cells(1).Text.Trim
                End If

                If (gvClient2.SelectedRow.Cells(2).Text = "&nbsp;") Then
                    txtAccountIdSearch.Text = ""
                Else
                    txtAccountIdSearch.Text = gvClient2.SelectedRow.Cells(2).Text.Trim
                End If

                If (gvClient2.SelectedRow.Cells(3).Text = "&nbsp;") Then
                    txtClientNameSearch.Text = ""
                Else
                    txtClientNameSearch.Text = Server.HtmlDecode(gvClient2.SelectedRow.Cells(3).Text.Trim)
                End If


                'If (gvClient2.SelectedRow.Cells(23).Text = "&nbsp;") Then
                '    ddlCompanyGrpSearch.Text = ""
                'Else
                '    ddlCompanyGrpSearch.Text = Server.HtmlDecode(gvClient2.SelectedRow.Cells(23).Text.Trim)
                'End If

            ElseIf txtSearch.Text = "CustomerSearch" Then
                'txtAccountIdBilling.Text = ""
                'txtAccountName.Text = ""


                'If (gvClient.SelectedRow.Cells(1).Text = "&nbsp;") Then
                '    txtAccountType.Text = ""
                'Else
                '    txtAccountType.Text = gvClient.SelectedRow.Cells(1).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(2).Text = "&nbsp;") Then
                '    txtAccountIdBilling.Text = ""
                'Else
                '    txtAccountIdBilling.Text = gvClient.SelectedRow.Cells(2).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(3).Text = "&nbsp;") Then
                '    txtLocationIdSelected.Text = ""
                'Else
                '    txtLocationIdSelected.Text = gvClient.SelectedRow.Cells(3).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(4).Text = "&nbsp;") Then
                '    ddlContractGroupBilling.SelectedIndex = 0
                'Else
                '    ddlContractGroupBilling.Text = gvClient.SelectedRow.Cells(4).Text.Trim
                'End If

                'If (gvClient.SelectedRow.Cells(6).Text = "&nbsp;") Then
                '    txtAccountName.Text = ""
                'Else
                '    txtAccountName.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(6).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(8).Text = "&nbsp;") Then
                '    txtContactPerson.Text = ""
                'Else
                '    txtContactPerson.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(8).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(23).Text = "&nbsp;") Then
                '    txtCompanyGroup.Text = ""
                'Else
                '    txtCompanyGroup.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(23).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(10).Text = "&nbsp;") Then
                '    txtBillAddress.Text = ""
                'Else
                '    txtBillAddress.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(10).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(11).Text = "&nbsp;") Then
                '    txtBillStreet.Text = ""
                'Else
                '    txtBillStreet.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(11).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(12).Text = "&nbsp;") Then
                '    txtBillBuilding.Text = ""
                'Else
                '    txtBillBuilding.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(12).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(13).Text = "&nbsp;") Then
                '    txtBillCity.Text = ""
                'Else
                '    txtBillCity.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(13).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(14).Text = "&nbsp;") Then
                '    txtBillState.Text = ""
                'Else
                '    txtBillState.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(14).Text.Trim)
                'End If


                'If (gvClient.SelectedRow.Cells(15).Text = "&nbsp;") Then
                '    txtBillCountry.Text = ""
                'Else
                '    txtBillCountry.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(15).Text.Trim)
                'End If

                'If (gvClient.SelectedRow.Cells(16).Text = "&nbsp;") Then
                '    txtBillPostal.Text = ""
                'Else
                '    txtBillPostal.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(16).Text.Trim)
                'End If


                'If gvClient.SelectedRow.Cells(20).Text = "" Or gvClient.SelectedRow.Cells(19).Text = "&nbsp;" Then
                '    'Dim gSalesman As String

                'Else

                '    gddlvalue = gvClient.SelectedRow.Cells(20).Text

                '    If ddlSalesmanBilling.Items.FindByValue(gddlvalue) Is Nothing Then
                '        ddlSalesmanBilling.Items.Add(gddlvalue)
                '        ddlSalesmanBilling.Text = gddlvalue
                '    Else
                '        ddlSalesmanBilling.Text = gvClient.SelectedRow.Cells(20).Text
                '    End If
                'End If


                'If (gvClient.SelectedRow.Cells(24).Text = "&nbsp;") Then
                '    txtLocation.Text = ""
                'Else
                '    txtLocation.Text = Server.HtmlDecode(gvClient.SelectedRow.Cells(24).Text.Trim)
                'End If




                'If gvClient.SelectedRow.Cells(19).Text = "" Or gvClient.SelectedRow.Cells(19).Text = "&nbsp;" Then
                '    'Dim gSalesman As String
                '    ddlCreditTerms.SelectedIndex = 0
                'Else

                '    gddlvalue = gvClient.SelectedRow.Cells(19).Text

                '    If ddlCreditTerms.Items.FindByValue(gddlvalue) Is Nothing Then
                '        ddlCreditTerms.Items.Add(gddlvalue)
                '        ddlCreditTerms.Text = gddlvalue
                '    Else
                '        ddlCreditTerms.Text = gvClient.SelectedRow.Cells(19).Text
                '    End If
                'End If

                'If ddlCreditTerms.SelectedIndex > 0 Then
                '    ddlCreditTerms_SelectedIndexChanged(sender, e)
                'End If

                'If grvBillingDetails.Rows.Count = 0 Then
                '    FirstGridViewRowBillingDetailsRecs()
                '    txtInvoiceAmount.Text = "0.00"
                '    txtDiscountAmount.Text = "0.00"
                '    txtAmountWithDiscount.Text = "0.00"
                '    txtGSTAmount.Text = "0.00"
                '    txtNetAmount.Text = "0.00"
                'End If

            End If

            gvLocation.DataBind()
            mdlPopUpClient2.Hide()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "gvClient2_SelectedIndexChanged", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub
    Protected Sub ClientAlphabet_Click(sender As Object, e As EventArgs)
        ''please check when user enter search criteria for one alphabet and then without clearing the textPoPUp client
        ''select another alphabet ---records are not selected

        'Dim lnkAlphabet As LinkButton = DirectCast(sender, LinkButton)
        'ViewState("ClientCurrentAlphabet") = lnkAlphabet.Text
        'Me.GenerateClientAlphabets()
        'gvClient.PageIndex = 0
        ''If txtPopUpClient.Text.Trim = "" Then
        ''    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        ''Else
        ''    SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        ''End If

        'If txtPopUpClient.Text.Trim = "" Then
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 And ContName Like '" + lnkAlphabet.Text + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        '    If ddlContactType.SelectedValue.ToString = "COMPANY" Then
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
        '    Else
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 And Name Like '" + lnkAlphabet.Text + "%'"
        '    End If

        'Else
        '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + lnkAlphabet.Text + "%' And upper(ContName) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%' and Upper(ContType) = '" + ddlContactType.SelectedValue.ToString + "'"
        '    If ddlContactType.SelectedValue.ToString = "COMPANY" Then
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblCompany where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
        '    Else
        '        SqlDSClient.SelectCommand = "SELECT distinct * From tblPerson where 1=1 and Name like '" + lnkAlphabet.Text + "%' And upper(Name) Like '%" + txtPopUpClient.Text.Trim.ToUpper + "%'"
        '    End If
        'End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
    End Sub

    'Protected Sub chkSelectGV_CheckedChanged(sender As Object, e As EventArgs)
    '    Try
    '        lblAlert.Text = ""
    '        Dim AmountSelected As Decimal = 0.0

    '        Dim chk1 As CheckBox = DirectCast(sender, CheckBox)
    '        Dim xrow1 As GridViewRow = CType(chk1.NamingContainer, GridViewRow)


    '        'SetRowDataServiceRecs()
    '        Dim totalRows As Long
    '        totalRows = 0

    '        'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

    '        'If tableAdd1 IsNot Nothing Then

    '        For rowIndex1 As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
    '            Dim TextBoxchkSelect1 As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
    '            Dim lblid16 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("txtToBillAmtGV"), TextBox)

    '            'Dim lblid16 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
    '            'Dim lblid16 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
    '            If (TextBoxchkSelect1.Checked = True) Then
    '                AmountSelected = AmountSelected + Convert.ToDecimal(lblid16.Text)
    '            End If
    '        Next rowIndex1
    '        'End If
    '        txtTotalServiceSelected.Text = AmountSelected.ToString("N2")
    '        updPanelInvoice.Update()
    '        mdlImportServices.Show()

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '    End Try
    'End Sub

    Protected Sub chkSelectGVII_CheckedChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            Dim AmountSelected As Decimal = 0.0

            Dim chk1 As CheckBox = DirectCast(sender, CheckBox)
            Dim xrow1 As GridViewRow = CType(chk1.NamingContainer, GridViewRow)

            'SetRowDataBillingDetailsRecsQR()
            'SetRowDataServiceRecs()
            Dim totalRows As Long
            totalRows = 0

            'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableServiceRecQR"), DataTable)

            'If tableAdd1 IsNot Nothing Then

            For rowIndex1 As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                'Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                'Dim lblid16 As TextBox = CType(xrow1.FindControl("txtOSAmountGVII"), TextBox)

                Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                Dim lblid16 As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("txtOSAmountGVII"), TextBox)

                If (TextBoxchkSelect1.Checked = True) Then
                    AmountSelected = AmountSelected + Convert.ToDecimal(lblid16.Text)
                End If
            Next rowIndex1
            'End If
            txtTotalInvoiceSelected.Text = AmountSelected.ToString("N2")
            updPanelInvoice.Update()
            'mdlQuickReceipt.Show()
            mdlImportInvoices.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "chkSelectGVII_CheckedChanged", ex.Message.ToString, "")
        End Try
    End Sub
    Protected Sub btnViewEdit_Click(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""

            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            Dim btn1 As Button = DirectCast(sender, Button)
            'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim lblid1 As TextBox = CType(xrow1.FindControl("txtAccountIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtAccountNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtBillAddress1GV"), TextBox)
            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtBillBuildingGV"), TextBox)
            Dim lblid5 As TextBox = CType(xrow1.FindControl("txtBillStreetGV"), TextBox)
            Dim lblid6 As TextBox = CType(xrow1.FindControl("txtBillCountryGV"), TextBox)
            Dim lblid7 As TextBox = CType(xrow1.FindControl("txtBillPostalGV"), TextBox)
            Dim lblid8 As TextBox = CType(xrow1.FindControl("txtOurReferenceGV"), TextBox)
            Dim lblid9 As TextBox = CType(xrow1.FindControl("txtYourReferenceGV"), TextBox)
            Dim lblid10 As TextBox = CType(xrow1.FindControl("txtPoNoGV"), TextBox)
            Dim lblid11 As TextBox = CType(xrow1.FindControl("txtCreditTermsGV"), TextBox)
            Dim lblid12 As TextBox = CType(xrow1.FindControl("txtSalesmanGV"), TextBox)
            Dim lblid13 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
            Dim lblid14 As TextBox = CType(xrow1.FindControl("txtRcnoServiceRecordGV"), TextBox)
            Dim lblid15 As TextBox = CType(xrow1.FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid16 As TextBox = CType(xrow1.FindControl("txtCompanyGroupGV"), TextBox)
            Dim lblid17 As TextBox = CType(xrow1.FindControl("txtRcnoInvoiceGV"), TextBox)
            Dim lblid18 As TextBox = CType(xrow1.FindControl("txtRcnoServicebillingdetailGV"), TextBox)
            Dim lblid19 As TextBox = CType(xrow1.FindControl("txtContactTypeGV"), TextBox)
            Dim lblid20 As TextBox = CType(xrow1.FindControl("txtInvoiceDateGV"), TextBox)

            Dim lblid21 As TextBox = CType(xrow1.FindControl("txtDiscAmountGV"), TextBox)
            Dim lblid22 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
            'Dim lblid23 As TextBox = CType(xrow1.FindControl("txtToBillAmtGV"), TextBox)
            Dim lblid24 As TextBox = CType(xrow1.FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid25 As TextBox = CType(xrow1.FindControl("txtStatusGV"), TextBox)
            Dim lblid26 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)

            Label41.Text = "SALES ORDER DETAILS : " & lblid24.Text

            Dim rowindex1 As Integer = xrow1.RowIndex
            If txtMode.Text = "NEW" Then
                txtAccountType.Text = lblid19.Text
                txtCompanyGroup.Text = lblid16.Text
                'txtInvoiceDate.Text = lblid20.Text
                txtAccountIdBilling.Text = lblid1.Text
                txtAccountName.Text = lblid2.Text
                txtBillAddress.Text = lblid3.Text
                txtBillBuilding.Text = lblid4.Text
                txtBillStreet.Text = lblid5.Text
                txtBillCountry.Text = lblid6.Text
                txtBillPostal.Text = lblid7.Text
                txtOurReference.Text = lblid8.Text
                txtYourReference.Text = lblid9.Text
                txtPONo.Text = lblid10.Text
                txtContractNo.Text = lblid26.Text
            End If

            'If rbtInvoiceType.SelectedIndex = 1 Then
            '    Me.cpnlInvoiceDetails.Collapsed = False
            '    Me.cpnlInvoiceDetails.ClientState = False
            '    updPanelInvoice.Update()
            'End If

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim sql As String
            sql = ""

            Dim command21 As MySqlCommand = New MySqlCommand

            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            'Dim command1 As MySqlCommand = New MySqlCommand
            command21.CommandType = CommandType.Text
            command21.CommandText = sql
            command21.Connection = conn

            Dim dr21 As MySqlDataReader = command21.ExecuteReader()

            Dim dt21 As New DataTable
            dt21.Load(dr21)

            If dt21.Rows.Count > 0 Then
                If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
            End If


            '''''''''''''''''''''''''''''''''''

            '''''''''''''''''''''''''''''''''''


            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"
            sql = "Select COACode, Description from tblchartofaccounts where  GLType='GST OUTPUT'"
            Dim command23 As MySqlCommand = New MySqlCommand
            command23.CommandType = CommandType.Text
            command23.CommandText = sql
            command23.Connection = conn

            Dim dr23 As MySqlDataReader = command23.ExecuteReader()

            Dim dt23 As New DataTable
            dt23.Load(dr23)

            If dt23.Rows.Count > 0 Then
                If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
            End If



            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            'conn.Close()


            'Start: Populate the grid
            txtRcnoServiceRecord.Text = lblid14.Text
            txtRcnoServiceRecordDetail.Text = lblid15.Text
            txtContractNo.Text = lblid22.Text
            txtRcnoInvoice.Text = lblid17.Text
            txtRowSelected.Text = rowindex1.ToString
            txtRcnoServiceBillingDetail.Text = lblid18.Text
            txtRcnotblServiceBillingDetail.Text = lblid18.Text

            If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text
            End If
            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                grvBillingDetails.DataSource = dtScdrLoc
                grvBillingDetails.DataBind()

                SetPreviousDataBillingDetailsRecs()
            Next i

            FirstGridViewRowBillingDetailsRecs()

            If String.IsNullOrEmpty(txtRcnoServiceBillingDetail.Text) = True Then
                txtRcnoServiceBillingDetail.Text = "0"
            End If

            Dim Query As String

            Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
            'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
            Query = "Select * from tblbillingproducts  "
            PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

            Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
            Query = "Select * from tblunitms order by UnitMs"
            PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)


            'If Convert.ToInt64(txtRcnoInvoice.Text) = 0 Then
            If Convert.ToInt64(txtRcnoServiceBillingDetail.Text) = 0 Then
                Dim dt As New DataTable

                '''''''''''''''''''''''''

                'Get Item desc, price Id

                'Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()
                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text

                'If lblid25.Text = "P" Then
                '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
                'ElseIf lblid25.Text = "O" Then
                '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
                'End If

                If String.IsNullOrEmpty(lblid26.Text) = False Then
                    If lblid25.Text = "P" Then
                        command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                    ElseIf lblid25.Text = "O" Then
                        command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                    End If
                Else
                    command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-COO'"
                End If

                command1.Connection = conn

                Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                'AddNewRowBillingDetailsRecs()

                Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                TextBoxItemType.Text = "SERVICE"
                TextBoxItemType.Enabled = False

                Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                TextBoxItemCode.Text = dt1.Rows(0)("ProductCode").ToString()

                Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                'TextBoxItemDescription.Text = ""
                TextBoxItemDescription.Text = dt1.Rows(0)("Description").ToString()


                Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                TextBoxOtherCode.Text = dt1.Rows(0)("COACode").ToString()


                Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtUOMGV"), DropDownList)
                TextBoxUOM.Text = "--SELECT--"

                Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtQtyGV"), TextBox)
                TextBoxQty.Text = "1"
                TextBoxQty.Enabled = False

                Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                TextBoxPriceWithDisc.Text = lblid13.Text

                Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                TextBoxPricePerUOM.Text = lblid13.Text

                Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))

                Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                TextBoxTotalPrice.Text = lblid13.Text

                Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtContractNoGV"), TextBox)
                TextBoxContractNo.Text = Convert.ToString(txtContractNo.Text)

                Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)

                Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                TextBoxServiceRecord.Text = Convert.ToString(lblid24.Text)


                txtTotal.Text = TextBoxTotalPrice.Text
                txtTotalWithGST.Text = TextBoxTotalPriceWithGST.Text

                txtTotalDiscAmt.Text = (0.0).ToString("N2")
                txtTotalGSTAmt.Text = Convert.ToDecimal(TextBoxGSTAmt.Text).ToString("N2")
                txtTotalWithDiscAmt.Text = txtTotal.Text

                '''''''''''''''''''''
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                'conn.Close()
            Else

                'Start: From tblBillingDetailItem

                Dim Total As Decimal
                Dim TotalWithGST As Decimal
                Dim TotalDiscAmt As Decimal
                Dim TotalGSTAmt As Decimal
                Dim TotalPriceWithDiscountAmt As Decimal


                Total = 0.0
                TotalWithGST = 0.0
                TotalDiscAmt = 0.0
                TotalGSTAmt = 0.0
                TotalPriceWithDiscountAmt = 0.0

                'Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()

                Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand
                cmdServiceBillingDetailItem.CommandType = CommandType.Text
                cmdServiceBillingDetailItem.CommandText = "SELECT * FROM tblservicebillingdetailitem where Rcnoservicebillingdetail=" & Convert.ToInt32(txtRcnoServiceBillingDetail.Text)
                cmdServiceBillingDetailItem.Connection = conn

                Dim drcmdServiceBillingDetailItem As MySqlDataReader = cmdServiceBillingDetailItem.ExecuteReader()
                Dim dtServiceBillingDetailItem As New DataTable
                dtServiceBillingDetailItem.Load(drcmdServiceBillingDetailItem)

                Dim TotDetailRecordsLoc = dtServiceBillingDetailItem.Rows.Count
                If dtServiceBillingDetailItem.Rows.Count > 0 Then

                    Dim rowIndex = 0

                    For Each row As DataRow In dtServiceBillingDetailItem.Rows
                        If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                            AddNewRowBillingDetailsRecs()
                            'AddNewRow()
                        End If

                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        TextBoxItemType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemType"))

                        Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        TextBoxItemCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode"))

                        Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                        TextBoxItemDescription.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemDescription"))

                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                        TextBoxOtherCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("OtherCode"))

                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtUOMGV"), DropDownList)
                        If String.IsNullOrEmpty(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("UOM"))) = True Then

                        Else
                            TextBoxUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("UOM"))
                        End If


                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                        TextBoxQty.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Qty"))
                        'TextBoxQty.Enabled = False

                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxPricePerUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("PricePerUOM"))


                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                        TextBoxDiscPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("DiscPerc"))

                        Dim TextBoxDiscAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                        TextBoxDiscAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("DiscAmount"))


                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("PriceWithDisc"))


                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                        TextBoxTaxType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("TaxType"))

                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                        TextBoxGSTPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTPerc"))

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTAmt"))

                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("TotalPrice"))

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("TotalPriceWithGST"))

                        Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                        TextBoxServiceRecord.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ServiceRecordNo"))

                        'Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtInvoiceTypeGV"), TextBox)
                        'TextBoxInvoiceType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("InvoiceType"))

                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                        TextBoxGLDescription.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GLDescription"))

                        Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                        TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                        'txtAmountWithDiscount.Text =  Total - TotalDiscAmt
                        TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                        TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                        'Dim Query As String

                        Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                        Query = "Select * from tblbillingproducts  "
                        PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

                        Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Query = "Select * from tblunitms order by UnitMs"
                        PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM2)


                        Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                        If TextBoxItemType1.Text = "SERVICE" Then
                            TextBoxQty1.Enabled = False
                            TextBoxQty1.Text = 1
                            TextBoxItemType1.Enabled = False
                        End If

                        rowIndex += 1

                    Next row
                    'AddNewRowBillingDetailsRecs()
                    'SetPreviousDataBillingDetailsRecs()
                    'AddNewRow()
                    'SetPreviousData()
                    txtTotal.Text = Total.ToString("N2")
                    txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                    txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")
                    txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")

                    'txtTotalDiscAmt.Text = 0.0
                    txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                    If conn.State = ConnectionState.Open Then
                        conn.Close()
                        conn.Dispose()
                    End If
                    'conn.Close()
                Else
                    FirstGridViewRowBillingDetailsRecs()
                    'FirstGridViewRowTarget()
                    'Dim Query As String
                    'Dim TextBoxTargetDesc As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select * from tblTarget"

                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
                End If


                'End: Detail Records


                'End: From tblBillingDetailItem
            End If

            AddNewRowBillingDetailsRecs()
            'grvBillingDetails.Enabled = True

            btnSaveInvoice.Enabled = False
            'If txtPostStatus.Text <> "P" Then
            '    btnSave.Enabled = True
            'End If

            If txtPostStatus.Text <> "P" Then
                grvBillingDetails.Enabled = True
                btnSave.Enabled = True
            End If

            updpnlServiceRecs.Update()

            'End: Billing Details
            updPanelSave.Update()
            'End: Populate the grid

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnViewEdit_Click", ex.Message.ToString, "")
        End Try
    End Sub

    '' GVB

    Protected Sub txtQtyGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Protected Sub txtPricePerUOMGVB_TextChanged(sender As Object, e As EventArgs)
        Try
            'Dim btn1 As TextBox = DirectCast(sender, TextBox)
            'xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

            ' '''''''''''''''''''''''''''''''''

            'lblAlert.Text = ""
            'updPnlMsg.Update()

            'Dim txt1 As TextBox = DirectCast(sender, TextBox)
            'xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            'Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGVB"), TextBox)
            'Dim lblid2 As TextBox = CType(txt1.FindControl("txtServiceDateGVB"), TextBox)
            'Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGVB"), TextBox)
            'Dim lblid4 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGVB"), TextBox)

            'Dim lblid5 As TextBox = CType(txt1.FindControl("txtItemTypeGVB"), TextBox)

            'Dim lblid6 As TextBox = CType(txt1.FindControl("txtPricePerUOMGVB"), TextBox)
            ''Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGVB"), TextBox)
            'Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGVB"), TextBox)
            'Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGVB"), TextBox)

            'Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex
            ' ''''''''''''''''''

            'Session.Remove("servicerecordForupdateservicetable")
            'Session.Remove("AmountForupdateservicetable")
            'Session.Remove("AmountForupdateRowNo")

            'If String.IsNullOrEmpty(lblid2.Text.Trim) = False Then
            '    Dim sqlstr As String
            '    sqlstr = ""

            '    sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(lblid2.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            '    Dim command As MySqlCommand = New MySqlCommand

            '    Dim conn As MySqlConnection = New MySqlConnection()
            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    conn.Open()

            '    command.CommandType = CommandType.Text
            '    command.CommandText = sqlstr
            '    command.Connection = conn

            '    Dim dr As MySqlDataReader = command.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then
            '        If dt.Rows(0)("svcLock").ToString = "Y" Then
            '            lblid3.Text = Convert.ToDecimal(lblid4.Text).ToString("N2")
            '            mdlLockedServiceRecord.Show()
            '            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ServiceLock();</Script>", False)
            '        End If


            '    Else
            '        If String.IsNullOrEmpty(lblid1.Text) = False Then
            '            'Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)

            '            Session.Add("servicerecordForupdateservicetable", lblid1.Text)
            '            Session.Add("AmountForupdateservicetable", lblid3.Text)
            '            Session.Add("AmountForupdateRowNo", rowindex1)

            '            mdlUpdateServiceRecord.Show()

            '        End If
            '        '
            '        'CalculatePrice()
            '        'updpnlBillingDetails.Update()
            '    End If

            '    conn.Close()
            '    conn.Dispose()
            '    command.Dispose()
            '    dt.Dispose()
            '    dr.Close()
            'End If


            ' ''''''''''''''''''''''''''

            'If lblid5.Text = "SERVICE" Then

            '    'lblid3.Text = 0.0
            '    'lblid8.Text = 0.0
            '    lblid9.Text = 0.0
            '    lblid10.Text = 0.0
            '    'lblid4.Text = ""
            '    'lblid5.Text = ""
            '    'lblid6.Text = ""
            '    'lblid16.Text = ""
            '    'lblid7.Text = ""

            '    Dim IsServiceRecord As Boolean
            '    IsServiceRecord = False

            '    Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

            '    connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsServiceRecord.Open()

            '    Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
            '    commandIsServiceRecord.CommandType = CommandType.Text
            '    'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
            '    commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled from tblServiceRecord where ((Status = 'O') or (Status ='P'))  and RecordNo = '" & lblid1.Text.Trim & "'"

            '    commandIsServiceRecord.Connection = connIsServiceRecord

            '    Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
            '    Dim dtIsServiceRecord As New DataTable
            '    dtIsServiceRecord.Load(drIsServiceRecord)

            '    If dtIsServiceRecord.Rows.Count > 0 Then

            '        'If Convert.ToDecimal(lblid6.Text) > Convert.ToDecimal(dtIsServiceRecord.Rows(0)("ToBeBilled").ToString) Then
            '        '    lblid6.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    'lblid8.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    lblid9.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    lblid10.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    updpnlBillingDetails.Update()

            '        '    lblAlert.Text = "TO BE BILLED AMOUNT IS " + dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    updPnlMsg.Update()

            '        '    commandIsServiceRecord.Dispose()
            '        '    connIsServiceRecord.Close()
            '        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        '    Exit Sub
            '        'End If

            '    End If

            '    commandIsServiceRecord.Dispose()
            '    connIsServiceRecord.Close()
            '    connIsServiceRecord.Dispose()
            '    dtIsServiceRecord.Dispose()
            '    drIsServiceRecord.Close()
            'End If

            ' '''''''''''''''''''''''''''''''''

            ''CalculatePrice()

            'CalculatePriceGVB()
            'updPnlBillingRecsNew.Update()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtPricePerUOMGVB_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtDiscAmountGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Protected Sub txtDiscPercGVB_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePriceGVB()
    End Sub

    Private Sub CalculatePriceGStInclusive()
        Try
            ''''''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    If TextBoxchkSelect.Checked = True Then
                        If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                        
                            Dim lblidQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtQtyGV"), TextBox)
                            Dim lblidPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                            Dim lblidTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                            Dim lblidDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                            Dim lblidDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                            Dim lblidPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)

                            Dim lblidGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                            Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                            Dim lblidGSTBase As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                            Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)


                            If chkGSTInclusive.Checked = False Then
                                lblidPricePerUOM.Text = Convert.ToString(Convert.ToDecimal(lblidNetAmount.Text).ToString("N2"))

                                lblidTotalPrice.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidQty.Text) * Convert.ToDecimal(lblidPricePerUOM.Text)).ToString("N2"))
                                lblidDiscAmount.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidTotalPrice.Text) * Convert.ToDecimal(lblidDiscPerc.Text) * 0.01).ToString("N2"))
                                lblidPriceWithDisc.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblidTotalPrice.Text)) - Convert.ToDecimal(lblidDiscAmount.Text)).ToString("N2"))

                                lblidGSTBase.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidPriceWithDisc.Text) * Convert.ToDecimal(lblidGSTRate.Text) * 0.01).ToString("N2"))
                                lblidNetAmount.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblidPriceWithDisc.Text)) + Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                            Else
                             
                                lblidNetAmount.Text = Convert.ToString(Convert.ToDecimal(lblidTotalPrice.Text).ToString("N2"))
                                lblidGSTBase.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) * Convert.ToDecimal(lblidGSTRate.Text) / (100 + Convert.ToDecimal(lblidGSTRate.Text))).ToString("N2"))

                                lblidPricePerUOM.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))

                                lblidTotalPrice.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                                lblidDiscAmount.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidTotalPrice.Text) * Convert.ToDecimal(lblidDiscPerc.Text) * 0.01).ToString("N2"))
                                lblidPriceWithDisc.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblidTotalPrice.Text)) - Convert.ToDecimal(lblidDiscAmount.Text)).ToString("N2"))
                            End If


                        End If
                    End If
                Next
                'AdjustGStAmount()
            End If

            '''''''''''''''''''''''''''''''''''


            'Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            'Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            'Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGV"), TextBox)

            'Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGV"), TextBox)
            'Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGV"), TextBox)
            'Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGV"), TextBox)

            'Dim lblid10 As DropDownList = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), DropDownList)
            ''Dim lblid11 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)

            'Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
            'Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGV"), TextBox)
            'Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            'Dim dblQty As String
            'Dim dblPricePerUOM As String
            'Dim dblTotalPrice As String

            'Dim dblDiscPerc As String
            'Dim dblDisAmount As String
            'Dim dblPriceWithDisc As String

            'Dim dblGSTPerc As String
            'Dim dblGSTAmt As String
            'Dim dblTotalPriceWithGST As String


            'If String.IsNullOrEmpty(lblid1.Text) = True Then
            '    lblid1.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid2.Text) = True Then
            '    lblid2.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid3.Text) = True Then
            '    lblid3.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid4.Text) = True Then
            '    lblid4.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid5.Text) = True Then
            '    lblid5.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid6.Text) = True Then
            '    lblid6.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid7.Text) = True Then
            '    lblid7.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid8.Text) = True Then
            '    lblid8.Text = "0.00"
            'End If

            'If String.IsNullOrEmpty(lblid9.Text) = True Then
            '    lblid9.Text = "0.00"
            'End If

            'If lblid10.Text = "SR" Then
            '    lblid7.Text = txtTaxRatePct.Text
            'Else
            '    lblid7.Text = "0.00"
            'End If

            'dblQty = (lblid1.Text)
            'dblPricePerUOM = (lblid2.Text)
            'dblTotalPrice = (lblid3.Text)

            'dblDiscPerc = (lblid4.Text)
            'dblDisAmount = (lblid5.Text)
            'dblPriceWithDisc = (lblid6.Text)

            'dblGSTPerc = (lblid7.Text)
            'dblGSTAmt = (lblid8.Text)
            'dblTotalPriceWithGST = (lblid9.Text)

            'If chkGSTInclusive.Checked = False Then
            '    lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
            '    lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            '    lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))

            '    lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
            '    lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))
            'Else
            '    lblid9.Text = Convert.ToString(Convert.ToDecimal(lblid3.Text).ToString("N2"))
            '    lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid9.Text) * Convert.ToDecimal(lblid7.Text) / (100 + Convert.ToDecimal(lblid7.Text))).ToString("N2"))


            '    lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid9.Text) - Convert.ToDecimal(lblid8.Text)).ToString("N2"))
            '    lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            '    lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))



            'End If

            CalculateTotalPrice()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION CalculatePrice", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub CalculatePriceGVB()
        Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGVB"), TextBox)
        Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGVB"), TextBox)
        Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGVB"), TextBox)

        Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGVB"), TextBox)
        Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGVB"), TextBox)
        Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGVB"), TextBox)

        Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGVB"), TextBox)
        Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGVB"), TextBox)
        Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGVB"), TextBox)

        Dim dblQty As String
        Dim dblPricePerUOM As String
        Dim dblTotalPrice As String

        Dim dblDiscPerc As String
        Dim dblDisAmount As String
        Dim dblPriceWithDisc As String

        Dim dblGSTPerc As String
        Dim dblGSTAmt As String
        Dim dblTotalPriceWithGST As String


        If String.IsNullOrEmpty(lblid1.Text) = True Then
            lblid1.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid2.Text) = True Then
            lblid2.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid3.Text) = True Then
            lblid3.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid4.Text) = True Then
            lblid4.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid5.Text) = True Then
            lblid5.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid6.Text) = True Then
            lblid6.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid7.Text) = True Then
            lblid7.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid8.Text) = True Then
            lblid8.Text = "0.00"
        End If

        If String.IsNullOrEmpty(lblid9.Text) = True Then
            lblid9.Text = "0.00"
        End If


        dblQty = (lblid1.Text)
        dblPricePerUOM = (lblid2.Text)
        dblTotalPrice = (lblid3.Text)

        dblDiscPerc = (lblid4.Text)
        dblDisAmount = (lblid5.Text)
        dblPriceWithDisc = (lblid6.Text)

        dblGSTPerc = (lblid7.Text)
        dblGSTAmt = (lblid8.Text)
        dblTotalPriceWithGST = (lblid9.Text)

        lblid3.Text = (Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
        lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
        lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))
        lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
        lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))

        CalculateTotalPrice()


    End Sub


    'Protected Sub txtTaxTypeGVB_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    Try
    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
    '        xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)

    '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(ddl1.FindControl("txtTaxTypeGVB"), DropDownList)
    '        Dim lblid2 As TextBox = CType(ddl1.FindControl("txtGSTPercGVB"), TextBox)

    '        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
    '        conn1.Open()

    '        Dim commandGST As MySqlCommand = New MySqlCommand
    '        commandGST.CommandType = CommandType.Text
    '        commandGST.CommandText = "SELECT TaxRatePct FROM tbltaxtype where TaxType='" & lblid1.Text & "'"
    '        commandGST.Connection = conn1

    '        Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
    '        Dim dtGST As New DataTable
    '        dtGST.Load(drGST)

    '        If dtGST.Rows.Count > 0 Then
    '            lblid2.Text = dtGST.Rows(0)("TaxRatePct").ToString
    '            lblid2.Text = Convert.ToDecimal(lblid2.Text).ToString("N2")
    '            CalculatePriceGVB()
    '            'If dtGST.Rows(0)("GST").ToString = "P" Then
    '            '    lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
    '            '    conn1.Close()
    '            '    Exit Sub
    '            'End If
    '        End If

    '        conn1.Close()
    '        conn1.Dispose()
    '        commandGST.Dispose()
    '        dtGST.Dispose()
    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '        InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtTaxTypeGVB_SelectedIndexChanged", ex.Message.ToString, "")
    '    End Try
    'End Sub
    ' End:GVB


    Protected Sub txtServiceRecordGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid2 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceStatusGV"), TextBox)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid6 As TextBox = CType(txt1.FindControl("txtLocationIdGV"), TextBox)
            Dim lblid7 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGV"), TextBox)
            Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)

            Dim lblid11 As DropDownList = CType(txt1.FindControl("txtItemCodeGV"), DropDownList)
            Dim lblid12 As TextBox = CType(txt1.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblid13 As TextBox = CType(txt1.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid14 As TextBox = CType(txt1.FindControl("txtGLDescriptionGV"), TextBox)
            Dim lblid15 As TextBox = CType(txt1.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid16 As TextBox = CType(txt1.FindControl("txtServiceByGV"), TextBox)

            Dim lblidGSTRate As TextBox = CType(txt1.FindControl("txtGSTPercGV"), TextBox)
            Dim lblidGSTBase As TextBox = CType(txt1.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblidNetAmount As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGV"), TextBox)
            'Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            Dim lblidGST As TextBox = CType(txt1.FindControl("txtTaxTypeGV"), TextBox)
            'CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), DropDownList)
            'Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)

            Dim lblid17 As TextBox = CType(txt1.FindControl("txtDiscPercGV"), TextBox)
            Dim lblid18 As TextBox = CType(txt1.FindControl("txtDiscAmountGV"), TextBox)


            lblidGSTRate.Text = txtTaxRatePct.Text
            lblidGST.Text = txtGST.Text
            lblid1.Text = lblid1.Text.ToUpper
            lblAlert.Text = ""
            updPnlMsg.Update()

            If lblid2.Text = "SERVICE" Then

                ''''''''''''''''''
                Dim lInvoiceNoExists As String

                lInvoiceNoExists = ""
                lInvoiceNoExists = IsInvoiceNoExistsForManual(lblid1.Text)

                If String.IsNullOrEmpty(lInvoiceNoExists.Trim) = False Then

                    ''''
                    'If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                    'Else
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lInvoiceNoExists & "'"
                    'End If

                    If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                        lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                        'Else
                        '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lInvoiceNoExists & "'"

                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                        lblid1.Text = ""
                        'mdlImportServices.Show()
                        Exit Sub
                    End If

                    ''''
                    'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    'lblid1.Text = ""
                    ''mdlImportServices.Show()
                    'Exit Sub

                End If

                ''''''''''''''''''''

                ''''''''''''''''''
                Dim lServiceRecordExists As String

                lServiceRecordExists = ""
                lServiceRecordExists = IsServiceRecordExistsForManual(lblid1.Text)

                If String.IsNullOrEmpty(lServiceRecordExists.Trim) = False Then

                    ''''
                    'If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                    'Else
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lInvoiceNoExists & "'"
                    'End If

                    'If lInvoiceNoExists.Trim = txtInvoiceNo.Text.Trim Then
                    '    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in this Invoice "
                    'Else
                    'lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' already exists in Invoice No. '" & lServiceRecordExists & "'"
                    lblAlert.Text = "SERVICE RECORD '" & lblid1.Text & "' has ZERO amount to Bill"
                    'End If

                    ''''
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                    lblid1.Text = ""
                    'mdlImportServices.Show()
                    Exit Sub

                End If

                ''''''''''''''''''''

                lblid3.Text = 0.0
                lblid8.Text = 0.0
                lblid9.Text = 0.0
                lblid10.Text = 0.0
                lblid4.Text = ""
                lblid5.Text = ""
                lblid6.Text = ""
                lblid16.Text = ""
                lblid7.Text = ""

                Dim IsServiceRecord As Boolean
                IsServiceRecord = False

                Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

                connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                connIsServiceRecord.Open()

                Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
                commandIsServiceRecord.CommandType = CommandType.Text
                'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P'))  and RecordNo = '" & lblid1.Text.Trim & "'"

                commandIsServiceRecord.Connection = connIsServiceRecord

                Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
                Dim dtIsServiceRecord As New DataTable
                dtIsServiceRecord.Load(drIsServiceRecord)

                If dtIsServiceRecord.Rows.Count > 0 Then
                    If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("RecordNo").ToString) = True Then
                        lblid1.Text = ""
                        lblAlert.Text = "SERVICE RECORD NOT FOUND"
                        updPnlMsg.Update()
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub

                    Else
                        'If Convert.ToDecimal(dtIsServiceRecord.Rows(0)("ToBeBilled").ToString) = 0.0 Then
                        '    lblid1.Text = ""
                        '    lblAlert.Text = "UNABLE TO BILL A SERVICE WHICH HAS ZERO AMOUNT TO BILL"
                        '    updPnlMsg.Update()
                        '    commandIsServiceRecord.Dispose()
                        '    connIsServiceRecord.Close()
                        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        '    Exit Sub
                        'End If

                        If String.IsNullOrEmpty(dtIsServiceRecord.Rows(0)("ContractNo").ToString.Trim) = True Then
                            lblid1.Text = ""
                            lblAlert.Text = "INVALID CONTRACT NUMBER"
                            updPnlMsg.Update()
                            commandIsServiceRecord.Dispose()
                            connIsServiceRecord.Close()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            Dim commandIsContract As MySqlCommand = New MySqlCommand
                            commandIsContract.CommandType = CommandType.Text
                            commandIsContract.CommandText = "SELECT ContractGroup from tblContract where ContractNo ='" & dtIsServiceRecord.Rows(0)("ContractNo").ToString & "'"
                            commandIsContract.Connection = connIsServiceRecord

                            Dim drIsContract As MySqlDataReader = commandIsContract.ExecuteReader()
                            Dim dtIsContract As New DataTable
                            dtIsContract.Load(drIsContract)

                            If dtIsContract.Rows.Count > 0 Then
                                If dtIsContract.Rows(0)("ContractGroup").ToString <> ddlContractGroupBilling.Text.Trim Then

                                    lblAlert.Text = "SERVICE RECORD [" & lblid1.Text & "] DOES NOT BELONG TO CONTRACT GROUP [" & ddlContractGroupBilling.Text & "]"
                                    updPnlMsg.Update()
                                    lblid1.Text = ""

                                    commandIsServiceRecord.Dispose()
                                    connIsServiceRecord.Close()
                                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                    Exit Sub
                                End If
                            Else
                                lblid1.Text = ""
                                lblAlert.Text = "INVALID CONTRACT GROUP"
                                updPnlMsg.Update()

                                commandIsServiceRecord.Dispose()
                                connIsServiceRecord.Close()
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                                Exit Sub
                            End If

                        End If

                        lblidGSTRate.Text = txtGST1.Text
                        lblidGST.Text = txtGST.Text

                        If chkGSTInclusive.Checked = False Then
                            lblid3.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            lblid8.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            lblid9.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            lblid10.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            CalculatePrice()
                        Else

                            lblidNetAmount.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
                            '''''''''''''''
                            lblidGSTBase.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) * Convert.ToDecimal(lblidGSTRate.Text) / (100 + Convert.ToDecimal(lblidGSTRate.Text))).ToString("N2"))
                            lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                            lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))
                            lblid10.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblidNetAmount.Text) - Convert.ToDecimal(lblidGSTBase.Text)).ToString("N2"))

                            lblid17.Text = "0.00"
                            lblid18.Text = "0.00"
                            CalculatePrice()
                            '''''''''''''''
                        End If

                        lblidGSTRate.Text = txtGST1.Text
                        lblidGST.Text = txtGST.Text

                        lblid4.Text = dtIsServiceRecord.Rows(0)("Status").ToString
                        lblid5.Text = dtIsServiceRecord.Rows(0)("ContractNo").ToString
                        lblid6.Text = dtIsServiceRecord.Rows(0)("LocationID").ToString
                        lblid16.Text = dtIsServiceRecord.Rows(0)("ServiceBy").ToString
                        lblid7.Text = Convert.ToDateTime(dtIsServiceRecord.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy")

                        updpnlBillingDetails.Update()

                        '''''''''''''''''''''''
                        Dim commandOtherInfo As MySqlCommand = New MySqlCommand
                        If lblid4.Text = "P" Then
                            commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                        ElseIf lblid4.Text = "O" Then
                            commandOtherInfo.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                        End If
                        commandOtherInfo.Connection = connIsServiceRecord

                        Dim dr1 As MySqlDataReader = commandOtherInfo.ExecuteReader()
                        Dim dt1 As New DataTable
                        dt1.Load(dr1)

                        lblid11.Text = dt1.Rows(0)("Description").ToString()
                        lblid12.Text = dt1.Rows(0)("ProductCode").ToString()
                        lblid13.Text = dt1.Rows(0)("COACode").ToString()
                        lblid14.Text = dt1.Rows(0)("COADescription").ToString()
                        lblid15.Text = lblid1.Text & ", " & lblid7.Text & ", " & dtIsServiceRecord.Rows(0)("Notes").ToString()

                    End If
                Else
                    lblid1.Text = ""
                    lblAlert.Text = "INVALID SERVICE RECORD"
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub

                End If

                commandIsServiceRecord.Dispose()
                connIsServiceRecord.Close()
                dtIsServiceRecord.Dispose()
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtServiceRecordGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub


    ''''''''' Start:For Contract entry
    Protected Sub txtContractNoGV_TextChanged(sender As Object, e As EventArgs)
        Try
            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid2 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)
            Dim lblid5 As TextBox = CType(txt1.FindControl("txtContractNoGV"), TextBox)

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex

            txtContractTE.Text = rowindex1


            lblid5.Text = lblid5.Text.ToUpper
            lblAlert.Text = ""
            updPnlMsg.Update()

            If String.IsNullOrEmpty(lblid5.Text) = False Then
                If lblid2.Text = "OTHERS" Then

                    Dim IsContractNo As Boolean
                    IsContractNo = False

                    Dim connIsContractNo As MySqlConnection = New MySqlConnection()

                    connIsContractNo.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                    connIsContractNo.Open()

                    Dim commandIsContractNo As MySqlCommand = New MySqlCommand
                    commandIsContractNo.CommandType = CommandType.Text
                    'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                    'commandIsContractNo.CommandText = "SELECT ContractNo from tblContract where ContractNo = '" & lblid5.Text.Trim & "' and Accountid ='" & txtAccountIdBilling.Text & "' and ((Status ='O') or (Status ='P') or (Status ='E') or (Status ='T'))"
                    commandIsContractNo.CommandText = "SELECT ContractNo from tblContract where ContractNo = '" & lblid5.Text.Trim & "' and Accountid ='" & txtAccountIdBilling.Text & "' and ((Status ='O') or (Status ='P'))"

                    commandIsContractNo.Connection = connIsContractNo

                    Dim drIsContractNo As MySqlDataReader = commandIsContractNo.ExecuteReader()
                    Dim dtIsContractNo As New DataTable
                    dtIsContractNo.Load(drIsContractNo)

                    If dtIsContractNo.Rows.Count = 0 Then

                        ''start : 30.03.20

                        Dim connIsContractNo1 As MySqlConnection = New MySqlConnection()

                        connIsContractNo1.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        connIsContractNo1.Open()

                        Dim commandIsContractNo1 As MySqlCommand = New MySqlCommand
                        commandIsContractNo1.CommandType = CommandType.Text
                        'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
                        commandIsContractNo1.CommandText = "SELECT ContractNo from tblContract where ContractNo = '" & lblid5.Text.Trim & "' and Accountid ='" & txtAccountIdBilling.Text & "' and ((Status ='E') or (Status ='T'))"

                        commandIsContractNo1.Connection = connIsContractNo1

                        Dim drIsContractNo1 As MySqlDataReader = commandIsContractNo1.ExecuteReader()
                        Dim dtIsContractNo1 As New DataTable
                        dtIsContractNo1.Load(drIsContractNo1)

                        If dtIsContractNo1.Rows.Count = 0 Then
                            ''end :30.03.20

                            lblid5.Text = ""
                            lblAlert.Text = "CONTRACT NO. NOT FOUND FOR THIS ACCOUNT ID"
                            updPnlMsg.Update()
                            connIsContractNo1.Close()
                            commandIsContractNo1.Dispose()
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            Exit Sub
                        Else
                            mdlContractTE.Show()
                        End If
                        connIsContractNo1.Close()
                        commandIsContractNo1.Dispose()
                    End If

                    commandIsContractNo.Dispose()
                    connIsContractNo.Close()
                    dtIsContractNo.Dispose()
                End If

            End If
            'txtContractTE.Text = 0
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtContractNoGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub
    ''''''''  End: For Contract entry



    Protected Sub txtQtyGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePrice()
    End Sub

    Protected Sub txtPricePerUOMGV_TextChanged(sender As Object, e As EventArgs)
        Try
            'lblAlert.Text = ""
            'updPnlMsg.Update()

            'Dim txt1 As TextBox = DirectCast(sender, TextBox)
            'xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            'Dim lblid1 As TextBox = CType(txt1.FindControl("txtServiceRecordGV"), TextBox)
            'Dim lblid2 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            'Dim lblid3 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            'Dim lblid4 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)

            'Dim lblid5 As DropDownList = CType(txt1.FindControl("txtItemTypeGV"), DropDownList)

            'Dim lblid6 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            'Dim lblid8 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            'Dim lblid9 As TextBox = CType(txt1.FindControl("txtTotalPriceGV"), TextBox)
            'Dim lblid10 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)


            ''Dim lblid1 As TextBox = CType(txt1.FindControl("txtPricePerUOMGV"), TextBox)
            ''Dim lblid4 As TextBox = CType(txt1.FindControl("txtOriginalBillAmountGV"), TextBox)
            ''Dim lblid3 As TextBox = CType(txt1.FindControl("txtServiceDateGV"), TextBox)
            ''Dim lblid4 As TextBox = CType(txt1.FindControl("txtServiceRecordNoGV"), TextBox)

            'Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex


            'Session.Remove("servicerecordForupdateservicetable")
            'Session.Remove("AmountForupdateservicetable")
            'Session.Remove("AmountForupdateRowNo")
            ' ''''''''''''''''''

            'If IsNumeric(lblid3.Text) = False Then
            '    lblAlert.Text = "INVALID NUMERIC VALUE"
            '    updPnlMsg.Update()
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If


            'If String.IsNullOrEmpty(lblid2.Text.Trim) = False Then
            '    Dim sqlstr As String
            '    sqlstr = ""

            '    sqlstr = "SELECT svcLock FROM tbllockservicerecord where '" & Convert.ToDateTime(lblid2.Text).ToString("yyyy-MM-dd") & "' between svcdatefrom and svcdateto"

            '    Dim command As MySqlCommand = New MySqlCommand

            '    Dim conn As MySqlConnection = New MySqlConnection()
            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    conn.Open()

            '    command.CommandType = CommandType.Text
            '    command.CommandText = sqlstr
            '    command.Connection = conn

            '    Dim dr As MySqlDataReader = command.ExecuteReader()
            '    Dim dt As New DataTable
            '    dt.Load(dr)

            '    If dt.Rows.Count > 0 Then
            '        If dt.Rows(0)("svcLock").ToString = "Y" Then
            '            lblid3.Text = Convert.ToDecimal(lblid4.Text).ToString("N2")
            '            mdlLockedServiceRecord.Show()
            '            'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ServiceLock();</Script>", False)
            '        End If


            '    Else
            '        If String.IsNullOrEmpty(lblid1.Text) = False Then
            '            'Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)

            '            Session.Add("servicerecordForupdateservicetable", lblid1.Text)
            '            Session.Add("AmountForupdateservicetable", lblid3.Text)
            '            Session.Add("AmountForupdateRowNo", rowindex1)
            '            mdlUpdateServiceRecord.Show()

            '        End If

            '        'CalculatePrice()
            '        'updpnlBillingDetails.Update()
            '    End If

            '    conn.Close()
            '    conn.Dispose()
            '    command.Dispose()
            '    dt.Dispose()
            '    dr.Close()
            'End If


            ' ''''''''''''''''''''''''''

            'If lblid5.Text = "SERVICE" Then


            '    'lblid8.Text = 0.0
            '    lblid9.Text = 0.0
            '    lblid10.Text = 0.0


            '    Dim IsServiceRecord As Boolean
            '    IsServiceRecord = False

            '    Dim connIsServiceRecord As MySqlConnection = New MySqlConnection()

            '    connIsServiceRecord.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    connIsServiceRecord.Open()

            '    Dim commandIsServiceRecord As MySqlCommand = New MySqlCommand
            '    commandIsServiceRecord.CommandType = CommandType.Text
            '    'commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled, Status, ContractNo, LocationID, ServiceDate, Notes, ServiceBy from tblServiceRecord where ((Status = 'O') or (Status ='P')) and AccountId ='" & txtAccountIdBilling.Text & "' and RecordNo = '" & lblid1.Text & "'"
            '    commandIsServiceRecord.CommandText = "SELECT RecordNo, (Billamount - Billedamt) as ToBeBilled from tblServiceRecord where ((Status = 'O') or (Status ='P'))  and RecordNo = '" & lblid1.Text.Trim & "'"

            '    commandIsServiceRecord.Connection = connIsServiceRecord

            '    Dim drIsServiceRecord As MySqlDataReader = commandIsServiceRecord.ExecuteReader()
            '    Dim dtIsServiceRecord As New DataTable
            '    dtIsServiceRecord.Load(drIsServiceRecord)

            '    If dtIsServiceRecord.Rows.Count > 0 Then

            '        'If Convert.ToDecimal(lblid6.Text) > Convert.ToDecimal(dtIsServiceRecord.Rows(0)("ToBeBilled").ToString) Then
            '        '    lblid6.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    lblid8.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    lblid9.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    lblid10.Text = dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    updpnlBillingDetails.Update()

            '        '    lblAlert.Text = "TO BE BILLED AMOUNT IS " + dtIsServiceRecord.Rows(0)("ToBeBilled").ToString
            '        '    updPnlMsg.Update()

            '        '    commandIsServiceRecord.Dispose()
            '        '    connIsServiceRecord.Close()
            '        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '        '    Exit Sub
            '        'End If

            '    End If

            '    commandIsServiceRecord.Dispose()
            '    connIsServiceRecord.Close()
            '    connIsServiceRecord.Dispose()
            '    dtIsServiceRecord.Dispose()
            'End If


            ' '''''''''''''''''''''''''''''''''

            'CalculatePrice()
            'updpnlBillingDetails.Update()

            ''Dim btn1 As TextBox = DirectCast(sender, TextBox)
            ''xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)

            ''Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtServiceRecordGV"), TextBox)

            ''If String.IsNullOrEmpty(lblid1.Text) = False Then
            ''    Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)

            ''    Session.Add("servicerecordForupdateservicetable", lblid1.Text)
            ''    Session.Add("AmountForupdateservicetable", lblid2.Text)

            ''    mdlUpdateServiceRecord.Show()
            ''End If

            ''CalculatePrice()

            ' ''Session.Remove("servicerecordForupdateservicetable")
            ' ''Session.Remove("AmountForupdateservicetable")
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtPricePerUOMGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtDiscAmountGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePrice()
    End Sub

    Protected Sub txtDiscPercGV_TextChanged(sender As Object, e As EventArgs)

        Dim btn1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(btn1.NamingContainer, GridViewRow)
        CalculatePrice()
    End Sub
    Private Sub CalculatePrice()
        Try
            Dim lblid1 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceGV"), TextBox)

            Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscPercGV"), TextBox)
            Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtDiscAmountGV"), TextBox)
            Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtPriceWithDiscGV"), TextBox)

            Dim lblid10 As TextBox = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), TextBox)
            'Dim lblid11 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)

            Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
            Dim lblid8 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            Dim dblQty As String
            Dim dblPricePerUOM As String
            Dim dblTotalPrice As String

            Dim dblDiscPerc As String
            Dim dblDisAmount As String
            Dim dblPriceWithDisc As String

            Dim dblGSTPerc As String
            Dim dblGSTAmt As String
            Dim dblTotalPriceWithGST As String


            If String.IsNullOrEmpty(lblid1.Text) = True Then
                lblid1.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid2.Text) = True Then
                lblid2.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid3.Text) = True Then
                lblid3.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid4.Text) = True Then
                lblid4.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid5.Text) = True Then
                lblid5.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid6.Text) = True Then
                lblid6.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid7.Text) = True Then
                lblid7.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid8.Text) = True Then
                lblid8.Text = "0.00"
            End If

            If String.IsNullOrEmpty(lblid9.Text) = True Then
                lblid9.Text = "0.00"
            End If

            'If lblid10.Text = "SR" Then
            '    lblid7.Text = txtTaxRatePct.Text
            'Else
            '    lblid7.Text = "0.00"
            'End If

            lblid10.Text = txtGST.Text
            lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

            'If lblid10.Text = "SR" Then
            '    lblid7.Text = txtTaxRatePct.Text
            'Else
            '    lblid7.Text = "0.00"
            'End If

            dblQty = (lblid1.Text)
            dblPricePerUOM = (lblid2.Text)
            dblTotalPrice = (lblid3.Text)

            dblDiscPerc = (lblid4.Text)
            dblDisAmount = (lblid5.Text)
            dblPriceWithDisc = (lblid6.Text)

            dblGSTPerc = (lblid7.Text)
            dblGSTAmt = (lblid8.Text)
            dblTotalPriceWithGST = (lblid9.Text)

            lblid3.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) * Convert.ToDecimal(lblid2.Text)).ToString("N2"))
            lblid5.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid3.Text) * Convert.ToDecimal(lblid4.Text) * 0.01).ToString("N2"))
            lblid6.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid3.Text)) - Convert.ToDecimal(lblid5.Text)).ToString("N2"))

            lblid8.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid6.Text) * Convert.ToDecimal(lblid7.Text) * 0.01).ToString("N2"))
            lblid9.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal((lblid6.Text)) + Convert.ToDecimal(lblid8.Text)).ToString("N2"))

            CalculateTotalPrice()
            'AdjustGStAmount()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION CalculatePrice", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub CalculateTotalPrice()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0

            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            txtInvoiceAmount.Text = "0.00"
            txtDiscountAmount.Text = "0.00"
            txtAmountWithDiscount.Text = "0.00"
            txtGSTAmount.Text = "0.00"
            txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                            TextBoxQty.Text = "1"
                        End If

                        If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                            TextBoxPricePerUOMGV.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                            TextBoxTotalPrice.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                            TextBoxDiscAmount.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                            TextBoxDiscPerc.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                            TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        End If

                        If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                            TextBoxGSTAmt.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        If TextBoxUOM.Items.Count = 1 Then
                            TextBoxUOM.Items.Add("UNIT")
                        Else
                            TextBoxUOM.Text = "UNIT"
                        End If

                        txtGST.Text = TextBoxTaxCode.Text
                        If txtGST.Text = "SR" Then
                            'txtGST1.Text = txtTaxRatePct.Text
                            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                            txtNetAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")

                            'txtGSTAmount.Text = "0.00"
                            'txtNetAmount.Text = txtAmountWithDiscount.Text
                        Else
                            'txtGST1.Text = "0.00"
                            txtGSTAmount.Text = "0.00"
                            txtNetAmount.Text = txtAmountWithDiscount.Text
                        End If

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        GSTGVNew = GSTGVNew + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)

                        If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                            TextBoxQtyGVB.Text = "1"
                        End If

                        If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                            TextBoxPricePerUOMGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                            TextBoxTotalPriceGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                            TextBoxDiscAmountGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                            TextBoxDiscPercGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                            TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        If TextBoxUOMGVB.SelectedIndex = 0 Then
                            TextBoxUOMGVB.Text = "UNIT"
                        End If

                        txtGST.Text = TextBoxTaxCodeGVB.Text
                        If txtGST.Text = "SR" Then
                            'txtGST1.Text = txtTaxRatePct.Text
                            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                            txtNetAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")

                            'txtGSTAmount.Text = "0.00"
                            'txtNetAmount.Text = txtAmountWithDiscount.Text
                        Else
                            'txtGST1.Text = "0.00"
                            txtGSTAmount.Text = "0.00"
                            txtNetAmount.Text = txtAmountWithDiscount.Text
                        End If

                        If TextBoxTaxCodeGVB.Text = "SR" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        totalrecords = totalrecords + 1
                    End If
                Next
            End If


            txtTotalWithDiscAmt.Text = txtAmountWithDiscount.Text
            txtTotalGSTAmt.Text = GSTGVB + GSTGV
            txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithDiscAmt.Text) + Convert.ToDecimal(txtTotalGSTAmt.Text)

            'totalrecords = totalrecords + gvbRecords

            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")

            ''''''''''''''''''''''''''
            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            'GSTDiff = GSTCalc - Convert.ToDecimal(txtGSTAmount.Text)
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If
            'End If

            ''''''''''''''''''''''''''''

            txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)
            lbltotalservices.Text = Convert.ToInt32(totalrecords)
            'AdjustGStAmount()

            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            'updPanelInvoice.Update()
            updpnlBillingDetails.Update()
            'txtTotal.Text = TotalAmt.ToString
            'txtTotalWithGST.Text = TotalAmtWithGST.ToString

            'txtTotalDiscAmt.Text = TotalDiscAmt.ToString
            'txtTotalGSTAmt.Text = TotalGSTAmt.ToString

            'txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

            'DisplayGLGrid()
            'UpdatePanel3.Update()
            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub AdjustGStAmount()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtQtyGV"), TextBox)
                        'Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        'Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)

                        'If String.IsNullOrEmpty(TextBoxQty.Text) = True Then
                        '    TextBoxQty.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGV.Text) = True Then
                        '    TextBoxPricePerUOMGV.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = True Then
                        '    TextBoxTotalPrice.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmount.Text) = True Then
                        '    TextBoxDiscAmount.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPerc.Text) = True Then
                        '    TextBoxDiscPerc.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDisc.Text) = True Then
                            TextBoxPriceWithDisc.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPrice.Text) = False Then
                        '    TextBoxTotalPrice.Text = Convert.ToDecimal(TextBoxQty.Text) * Convert.ToDecimal(TextBoxPricePerUOMGV.Text)
                        'End If

                        'If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                        '    TextBoxGSTAmt.Text = "0.00"
                        'End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        'If TextBoxUOM.Items.Count = 1 Then
                        '    TextBoxUOM.Items.Add("NO")
                        'Else
                        '    TextBoxUOM.Text = "NO"
                        'End If

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            If lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNo = i
                            End If
                        End If

                        'GSTGVNew = GSTGVNew + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        'Dim TextBoxUOMGVB As DropDownList = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtUOMGVB"), DropDownList)
                        'Dim TextBoxQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtQtyGVB"), TextBox)
                        'Dim TextBoxPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPricePerUOMGVB"), TextBox)
                        'Dim TextBoxTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceGVB"), TextBox)
                        'Dim TextBoxDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscAmountGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        'Dim TextBoxDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtDiscPercGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)
                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)

                        'If String.IsNullOrEmpty(TextBoxQtyGVB.Text) = True Then
                        '    TextBoxQtyGVB.Text = "1"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxPricePerUOMGVB.Text) = True Then
                        '    TextBoxPricePerUOMGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = True Then
                        '    TextBoxTotalPriceGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscAmountGVB.Text) = True Then
                        '    TextBoxDiscAmountGVB.Text = "0"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscPercGVB.Text) = True Then
                        '    TextBoxDiscPercGVB.Text = "0"
                        'End If

                        If String.IsNullOrEmpty(TextBoxPriceWithDiscGVB.Text) = True Then
                            TextBoxPriceWithDiscGVB.Text = "0"
                        End If

                        'If String.IsNullOrEmpty(TextBoxTotalPriceGVB.Text) = False Then
                        '    TextBoxTotalPriceGVB.Text = (Convert.ToDecimal(TextBoxQtyGVB.Text) * Convert.ToDecimal(TextBoxPricePerUOMGVB.Text)).ToString("N2")
                        'End If

                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If

                        'If TextBoxUOMGVB.SelectedIndex = 0 Then
                        '    TextBoxUOMGVB.Text = "NO"
                        'End If

                        If TextBoxTaxCodeGVB.Text = "SR" Then
                            GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                            If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                                lGSTadjustedRecNoNew = j
                            End If
                        End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If



            'totalrecords = totalrecords + gvbRecords

            ' '' end of GVB
            ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ''''''''''''''''''''''''''

            Dim GSTDiff As Decimal
            GSTDiff = 0.0

            Dim GSTCalc As Decimal
            GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            GSTCalc = GSTGVB + GSTGV
            GSTDiff = Convert.ToDecimal(txtGSTAmount.Text) - GSTCalc
            'GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            If GSTDiff <> 0.0 Then

                'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

                If lGSTadjustedRecNo > 0 Then
                    Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                    adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

                ElseIf lGSTadjustedRecNoNew > 0 Then
                    Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                    Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

                    adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                    adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
                End If

                txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
                txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            End If

            ''''''''''''''''''''''''''''


            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            updpnlBillingDetails.Update()

            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub MakeMeNullBillingDetails()

        txtInvoiceNo.Text = ""
        txtPostStatus.Text = ""
        'chkRecurringInvoice.Checked = False
        ''txtInvoiceDate.Text = ""
        'txtAccountIdBilling.Text = ""
        'txtAccountName.Text = ""
        'txtBillAddress.Text = ""
        'txtBillBuilding.Text = ""
        'txtBillCountry.Text = ""
        'txtBillStreet.Text = ""
        'txtBillPostal.Text = ""
        'txtOurReference.Text = ""
        'txtYourReference.Text = ""
        'txtPONo.Text = ""

        'txtCompanyGroup.Text = ""
        'txtAccountType.Text = ""
        'txtComments.Text = ""

        'ddlSalesmanBilling.SelectedIndex = 0
        'ddlCreditTerms.SelectedIndex = 0

        grvBillingDetails.ShowHeader = True

        'If chkRecurringInvoice.Checked = True Then
        '    'txtAccountIdSearch.Text = txtAccountIdBilling.Text
        'Else
        chkRecurringInvoice.Checked = False
        'txtInvoiceDate.Text = ""
        txtAccountIdBilling.Text = ""
        txtAccountName.Text = ""
        txtBillAddress.Text = ""
        txtBillBuilding.Text = ""
        txtBillCountry.Text = ""
        txtBillStreet.Text = ""

        txtBillCity.Text = ""
        txtBillState.Text = ""

        txtBillPostal.Text = ""
        txtOurReference.Text = ""
        txtYourReference.Text = ""
        txtPONo.Text = ""
        txtContactPerson.Text = ""
        txtCompanyGroup.Text = ""
        txtAccountType.SelectedIndex = 0
        txtComments.Text = ""
        txtDescription.Text = ""
        ddlSalesmanBilling.SelectedIndex = 0
        ddlCreditTerms.SelectedIndex = 0
        chkGSTInclusive.Checked = False
        txtLocation.Text = ""
        'End If

        txtBatchNo.Text = ""

        txtInvoiceAmount.Text = "0.00"
        txtDiscountAmount.Text = "0.00"
        txtAmountWithDiscount.Text = "0.00"
        txtGSTAmount.Text = "0.00"
        txtNetAmount.Text = "0.00"

        txtTotal.Text = "0.00"
        txtTotalWithGST.Text = "0.00"
        txtTotalGSTAmt.Text = "0.00"
        txtTotalDiscAmt.Text = "0.00"
        txtTotalWithDiscAmt.Text = "0.00"
        txtCreditDays.Text = "0"
        rbtInvoiceType.SelectedIndex = 0
        txtDueDate.Text = ""
        ddlDocType.SelectedIndex = 0
        ddlContractGroupBilling.SelectedIndex = 0

        lbltotalservices.Text = "0"
        'ddlSalesmanBilling.Items.Clear()
        'ddlSalesmanBilling.Items.Add("--SELECT--")
        'ddlSalesmanBilling.DataSourceID = "SqlDSSalesMan"
        'ddlSalesmanBilling.DataTextField = "StaffID"
        'ddlSalesmanBilling.DataValueField = "StaffID"
        'ddlSalesmanBilling.DataBind()


        'ddlSalesmanEdit.Items.Clear()
        'ddlSalesmanEdit.Items.Add("--SELECT--")
        'ddlSalesmanEdit.DataSourceID = "SqlDSSalesMan"
        'ddlSalesmanEdit.DataTextField = "StaffID"
        'ddlSalesmanEdit.DataValueField = "StaffID"
        'ddlSalesmanEdit.DataBind()


        txtAccountIdBillingQR.Text = ""
        txtAccountNameQR.Text = ""
        txtReceiptNoQR.Text = ""
        txtReceiptDateQR.Text = ""
        txtReceivedAmountQR.Text = "0.00"
        ddlPaymentModeQR.SelectedIndex = 0
        ddlBankCodeQR.SelectedIndex = 0
        txtBankIDQR.Text = ""
        txtBankNameQR.Text = ""
        txtChequeNoQR.Text = ""
        txtChequeDateQR.Text = ""
        txtBankGLCodeQR.Text = ""
        txtLedgerNameQR.Text = ""
        txtSalesmanQR.Text = ""

        txtCommentsQR.Text = ""


        'If Left(ConfigurationManager.AppSettings("DomainName").ToString(), 9) = "SINGAPORE" Then
        '    txtGST.Text = "SR"
        'Else
        '    txtGST.Text = "ZR"
        'End If

        txtGST.Text = txtDefaultTaxCode.Text

        'txtGST.Text = "SR"
        txtGST1.Text = txtTaxRatePct.Text
        lblMessageQR.Text = ""
        lblAlertQR.Text = ""
        updPnlMsgQR.Update()
        FirstGridViewRowBillingDetailsRecsQR()

        ddlCompanyGrpII.SelectedIndex = 0
        ddlContactType.SelectedIndex = 0

        txtAccountIdII.Text = ""
        txtClientNameII.Text = ""
        txtInvoiceSchedule.Text = ""

        'txtSearchValueBaseFrom.Text = "0"
        'txtSearchValueBaseTo.Text = "0"
        'txtSearchAppliedBaseFrom.Text = "0"
        'txtSearchAppliedBaseTo.Text = "0"
        'txtSearchBalanceBaseFrom.Text = "0"
        'txtSearchBalanceBaseTo.Text = "0"
        'txtover()

        'grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
        'grvInvoiceRecDetails.DataBind()

        'updpnlInvoiceRecs.Update()
        'UpdatePanel1.Update()
        FirstGridViewRowGL()

    End Sub

    Protected Sub btnAddDetail_Click(ByVal sender As Object, ByVal e As EventArgs)

        AddNewRowBillingDetailsRecs()

    End Sub

    Protected Sub btnAddDetailQR_Click(ByVal sender As Object, ByVal e As EventArgs)

        AddNewRowBillingDetailsRecsQR()

    End Sub



    Protected Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        'If txtMode.Text = "Add" Then

        lblAlert.Text = ""
        Try

            ''''''''''''''''''''''''''''''''''''''
            SetRowDataBillingDetailsRecs()

            Dim totalRows As Long
            totalRows = 0


            Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd1 IsNot Nothing Then


                For rowIndex30 As Integer = 0 To tableAdd1.Rows.Count - 1

                    Dim TextBoxItemTypeGV30 As DropDownList = CType(grvBillingDetails.Rows(rowIndex30).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lbd30 As String = TextBoxItemTypeGV30.Text

                    Dim TextBoxItemCodeGV31 As DropDownList = CType(grvBillingDetails.Rows(rowIndex30).FindControl("txtItemCodeGV"), DropDownList)
                    Dim lbd31 As String = TextBoxItemCodeGV31.Text


                    If TextBoxItemTypeGV30.SelectedIndex <> 0 Then
                        If String.IsNullOrEmpty(lbd31) = True Or TextBoxItemCodeGV31.SelectedIndex = 0 Then
                            lblAlert.Text = "PLEASE SELECT ITEM CODE FOR ITEM TYPE '" & lbd30 & "'"
                            updPnlMsg.Update()
                            Exit Sub
                        End If
                    End If
                Next rowIndex30
            End If


            '''''''''''''''''''''''''''''''''''''''

            Dim qry As String
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim rowselected As Integer = Convert.ToInt32(txtRowSelected.Text)

            Dim lblid1 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtAccountIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtClientNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtLocationIdGV"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillingFrequencyGV"), TextBox)
            Dim lblid7 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtRcnoServiceRecordGV"), TextBox)
            Dim lblid8 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtDeptGV"), TextBox)
            Dim lblid9 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtStatusGV"), TextBox)
            Dim lblid20 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtContractNoGV"), TextBox)
            Dim lblid21 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)

            If txtMode.Text = "NEW" Then

                'Dim command As MySqlCommand = New MySqlCommand
                'command.CommandType = CommandType.Text

                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If

                'If Convert.ToInt64(txtBatchNo.Text) = 0 Then

                '''''''''''''''''''''
                Dim commandExistServiceBillingDetail As MySqlCommand = New MySqlCommand
                commandExistServiceBillingDetail.CommandType = CommandType.Text

                commandExistServiceBillingDetail.CommandText = "SELECT rcno FROM tblServiceBillingDetail where RcnoServiceRecord=" & Convert.ToInt64(lblid7.Text) & " and Batchno = '" & txtBatchNo.Text & "'"
                commandExistServiceBillingDetail.Connection = conn

                Dim drExistServiceBillingDetail As MySqlDataReader = commandExistServiceBillingDetail.ExecuteReader()
                Dim dtExistServiceBillingDetail As New DataTable
                dtExistServiceBillingDetail.Load(drExistServiceBillingDetail)

                If dtExistServiceBillingDetail.Rows.Count = 0 Then

                    '''''''''''''''''''''
                    qry = "INSERT INTO tblServiceBillingDetail( AccountId, CustName, LocationId, Name, RecordNo, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, "
                    qry = qry + " ServiceDate, BillAmount, DiscountAmount,  GSTAmount, TotalWithGST, NetAmount, OurRef,YourRef,ContractNo, PoNo, RcnoServiceRecord, BillingFrequency, Salesman, ContactType, CompanyGroup,   "
                    qry = qry + " ContractGroup, Status, Address1, BatchNo,   "
                    qry = qry + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    qry = qry + " (@AccountId, @ClientName, @LocationId, @AccountName, @ServiceRecordNo, @BillAddress1, @BillBuilding, @BillStreet, @BillCountry, @BillPostal, "
                    qry = qry + " @ServiceDate, @BillAmount, @DiscountAmount,  @GSTAmount, @TotalWithGST, @NetAmount, @OurRef, @YourRef, @ContractNo, @PoNo, @RcnoServiceRecord, @BillingFrequency, @Salesman, @ContactType, @CompanyGroup,   "
                    qry = qry + " @ContractGroup, @Status,  @Address1, @BatchNo, "
                    qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@AccountId", lblid1.Text)
                    command.Parameters.AddWithValue("@ClientName", lblid2.Text.ToUpper)
                    command.Parameters.AddWithValue("@LocationId", lblid3.Text)
                    command.Parameters.AddWithValue("@AccountName", txtAccountName.Text)
                    command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                    command.Parameters.AddWithValue("@Address1", lblid21.Text)
                    command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text)
                    command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
                    command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
                    command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text)
                    command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                    command.Parameters.AddWithValue("@BillingFrequency", lblid6.Text)

                    If lblid5.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@ServiceDate", lblid5.Text)
                    'Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)
                    Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtGSTAmountGV"), TextBox)
                    'Dim lbd30 As String = TextBoxGSTAmount.Text

                    'If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(lblid23.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", 0.0)
                    '    command.Parameters.AddWithValue("@GSTAmount", 0.0)
                    '    command.Parameters.AddWithValue("@TotalWithGST", 0.0)
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(lblid23.Text))
                    'Else
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    '    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    '    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    'End If

                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))

                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper)
                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    command.Parameters.AddWithValue("@ContractNo", lblid20.Text)
                    'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                    command.Parameters.AddWithValue("@RcnoServiceRecord", lblid7.Text)

                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper)
                    command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)
                    command.Parameters.AddWithValue("@Status", lblid9.Text)
                    command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                    command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                    command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    'command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                    command.Connection = conn
                    command.ExecuteNonQuery()

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblServiceBillingDetail"

                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    txtRcnotblServiceBillingDetail.Text = commandRcno.ExecuteScalar()

                    If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                        txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text

                        '''''''''''''''''''''''''
                        qry = "Update tblServiceBillingDetail set BatchNo = '" & txtBatchNo.Text & "' where rcno = " & txtBatchNo.Text

                        command.CommandText = qry
                        command.Parameters.Clear()
                        command.Connection = conn
                        command.ExecuteNonQuery()

                        ''''''''''''''''''''''''
                    End If
                End If
            Else
                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If
                If Convert.ToInt64(txtRcnotblServiceBillingDetail.Text) > 0 Then
                    qry = "Update tblServiceBillingDetail set BillAmount = @BillAmount, DiscountAmount= @DiscountAmount,  GSTAmount =@GSTAmount,  "
                    qry = qry + "TotalWithGST = @TotalWithGST, NetAmount =@NetAmount, OurRef = @OurRef ,YourRef =@YourRef, PoNo =@PoNo, Salesman =@Salesman,    "
                    qry = qry + " LastModifiedBy =@LastModifiedBy,LastModifiedOn = @LastModifiedOn "
                    qry = qry + " where rcno =@rcno; "

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@rcno", txtRcnotblServiceBillingDetail.Text)
                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text)
                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                End If
            End If


            '''' Detail

            'Dim rowselected As Integer
            'rowselected = 0

            'Dim conn As MySqlConnection = New MySqlConnection()


            'Start: Delete existing Records

            If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                txtRcnotblServiceBillingDetail.Text = "0"
            End If

            If txtRcnotblServiceBillingDetail.Text <> "0" Then '04.01.17

                Dim commandtblServiceBillingDetailItem As MySqlCommand = New MySqlCommand

                commandtblServiceBillingDetailItem.CommandType = CommandType.Text
                'Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
                Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where RcnoServiceBillingDetail = '" & Convert.ToInt32(txtRcnotblServiceBillingDetail.Text) & "'"

                commandtblServiceBillingDetailItem.CommandText = qrycommandtblServiceBillingDetailItem
                commandtblServiceBillingDetailItem.Parameters.Clear()
                commandtblServiceBillingDetailItem.Connection = conn
                commandtblServiceBillingDetailItem.ExecuteNonQuery()

                'End: Delete Existing Records


                SetRowDataServiceRecs()
                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

                If tableAdd IsNot Nothing Then

                    For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                        'string txSpareId = row.ItemArray[0] as string;
                        Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                        Dim lbd10 As String = TextBoxQty.Text

                        Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCodeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                        Dim TextBoxItemDescriptionGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxUOMGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                        Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                        Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                        Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                        If String.IsNullOrEmpty(lbd10) = False Then
                            If (Convert.ToInt64(lbd10) > 0) Then

                                ''Start:Detail
                                Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                                commandSalesDetail.CommandType = CommandType.Text
                                Dim qryDetail As String = "INSERT INTO tblServiceBillingDetailItem(RcnoServiceBillingDetail,Itemtype, ItemCode, Itemdescription, UOM, Qty,  "
                                qryDetail = qryDetail + " PricePerUOM, TotalPrice,DiscPerc, DiscAmount, PriceWithDisc, GSTPerc, GSTAmt, TotalPriceWithGST, TaxType, ARCode, GSTCode, OtherCode, GLDescription,  RcnoServiceRecord, BatchNo,  CompanyGroup, ContractNo, ServiceStatus, ContractGroup, ServiceRecordNo, ServiceDate, SalsOrderType, BillSchedule,  "
                                qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                                qryDetail = qryDetail + "(@RcnoServiceBillingDetail, @Itemtype, @ItemCode, @Itemdescription, @UOM, @Qty,"
                                qryDetail = qryDetail + " @PricePerUOM, @TotalPrice, @DiscPerc, @DiscAmount, @PriceWithDisc, @GSTPerc, @GSTAmt, @TotalPriceWithGST, @TaxType, @ARCode, @GSTCode,  @OtherCode,@GLDescription, @RcnoServiceRecord, @BatchNo, @CompanyGroup, @ContractNo,  @ServiceStatus, @ContractGroup, @ServiceRecordNo, @ServiceDate, @SalsOrderType, @BillSchedule,"
                                qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                                command.CommandText = qryDetail
                                command.Parameters.Clear()

                                command.Parameters.AddWithValue("@RcnoServiceBillingDetail", Convert.ToInt64(txtRcnotblServiceBillingDetail.Text))
                                command.Parameters.AddWithValue("@Itemtype", TextBoxItemTypeGV.Text)
                                command.Parameters.AddWithValue("@ItemCode", TextBoxItemCodeGV.Text)
                                command.Parameters.AddWithValue("@Itemdescription", TextBoxItemDescriptionGV.Text)

                                If TextBoxUOMGV.Text <> "-1" Then
                                    command.Parameters.AddWithValue("@UOM", TextBoxUOMGV.Text)

                                Else
                                    command.Parameters.AddWithValue("@UOM", "")
                                End If

                                command.Parameters.AddWithValue("@Qty", TextBoxQty.Text)
                                command.Parameters.AddWithValue("@PricePerUOM", TextBoxPricePerUOMGV.Text)
                                'command.Parameters.AddWithValue("@BillAmount", 0.0)
                                command.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(TextBoxTotalPrice.Text))
                                command.Parameters.AddWithValue("@DiscPerc", Convert.ToDecimal(TextBoxDiscPerc.Text))
                                command.Parameters.AddWithValue("@DiscAmount", Convert.ToDecimal(TextBoxDiscAmount.Text))
                                command.Parameters.AddWithValue("@PriceWithDisc", Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text))
                                command.Parameters.AddWithValue("@GSTPerc", Convert.ToDecimal(TextBoxGSTPerc.Text))
                                command.Parameters.AddWithValue("@GSTAmt", Convert.ToDecimal(TextBoxGSTAmt.Text))
                                command.Parameters.AddWithValue("@TotalPriceWithGST", Convert.ToDecimal(TextBoxTotalPriceWithGST.Text))
                                command.Parameters.AddWithValue("@TaxType", TextBoxTaxType.Text)
                                command.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(lblid7.Text))
                                command.Parameters.AddWithValue("@ARCode", "")
                                command.Parameters.AddWithValue("@GSTCode", "")
                                command.Parameters.AddWithValue("@OtherCode", TextBoxOtherCode.Text)
                                command.Parameters.AddWithValue("@GLDescription", TextBoxGLDescription.Text)
                                command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                                command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                                'command.Parameters.AddWithValue("@ContractNo", TextBoxContractNo.Text)
                                command.Parameters.AddWithValue("@ServiceStatus", TextBoxServiceStatus.Text)
                                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                                command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)
                                command.Parameters.AddWithValue("@BillSchedule", txtInvoiceSchedule.Text)

                                command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                                command.Parameters.AddWithValue("@SalsOrderType", TextBoxItemTypeGV.Text)
                                If lblid5.Text.Trim = "" Then
                                    command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                                Else
                                    command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                                End If
                                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                                command.Connection = conn
                                command.ExecuteNonQuery()
                                'conn.Close()
                            End If

                        End If
                    Next rowIndex
                End If

                Dim lblid10 As CheckBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("chkSelectGV"), CheckBox)
                Dim lblid11 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)
                Dim lblid12 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtDiscAmountGV"), TextBox)
                Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtGSTAmountGV"), TextBox)
                Dim lblid14 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtNetAmountGV"), TextBox)
                Dim lblid15 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtRcnoServicebillingdetailGV"), TextBox)


                Dim lblidAccountName50 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtAccountNameGV"), TextBox)
                Dim lblidBillAddress151 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillAddress1GV"), TextBox)
                Dim lblidBillBuilding52 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillBuildingGV"), TextBox)
                Dim lblidBillStreet53 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillStreetGV"), TextBox)
                Dim lblidBillCountry54 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillCountryGV"), TextBox)
                Dim lblidBillPostal55 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillPostalGV"), TextBox)
                Dim lblidOurReference56 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtOurReferenceGV"), TextBox)
                Dim lblidYourReference57 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtYourReferenceGV"), TextBox)
                Dim lblidPoNo58 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtPoNoGV"), TextBox)
                Dim lblidCreditTerms59 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtCreditTermsGV"), TextBox)
                Dim lblidSalesman60 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtSalesmanGV"), TextBox)


                lblid10.Checked = True
                lblid11.Text = Convert.ToDecimal(txtTotal.Text).ToString("N2")
                lblid12.Text = Convert.ToDecimal(txtTotalDiscAmt.Text).ToString("N2")
                lblid13.Text = Convert.ToDecimal(txtTotalGSTAmt.Text).ToString("N2")
                lblid14.Text = Convert.ToDecimal(txtTotalWithGST.Text).ToString("N2")
                lblid15.Text = Convert.ToInt64(txtRcnotblServiceBillingDetail.Text)

                '08.03.17
                lblidAccountName50.Text = (txtAccountName.Text).ToString
                lblidBillAddress151.Text = (txtBillAddress.Text).ToString
                lblidBillBuilding52.Text = (txtBillBuilding.Text).ToString
                lblidBillStreet53.Text = (txtBillStreet.Text).ToString
                lblidBillCountry54.Text = (txtBillCountry.Text).ToString
                lblidBillPostal55.Text = (txtBillPostal.Text).ToString
                lblidOurReference56.Text = (txtOurReference.Text).ToString
                lblidYourReference57.Text = (txtYourReference.Text).ToString
                lblidPoNo58.Text = (txtPONo.Text).ToString
                lblidCreditTerms59.Text = (ddlCreditTerms.Text).ToString
                lblidSalesman60.Text = (ddlSalesmanBilling.Text).ToString
                '08.03.17

                'FirstGridViewRowBillingDetailsRecs()

                ''Start: Update Invoice Amounts

                'Dim TotalInvoiceAmount As Decimal = 0
                'Dim TotalDiscountAmount As Decimal = 0
                'Dim TotalGSTAmount As Decimal = 0
                'Dim TotalNetAmount As Decimal = 0

                'Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

                'If (table.Rows.Count > 0) Then

                '    For i As Integer = 0 To (table.Rows.Count) - 1

                '        Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)

                '        If (TextBoxchkSelect.Checked = True) Then

                '            Dim TextBoxInvoiceAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtToBillAmtGV"), TextBox)
                '            Dim TextBoxDiscountAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtDiscAmountGV"), TextBox)
                '            Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtGSTAmountGV"), TextBox)
                '            Dim TextBoxNetAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(7).FindControl("txtNetAmountGV"), TextBox)

                '            If String.IsNullOrEmpty(TextBoxInvoiceAmount.Text) = True Then
                '                TextBoxInvoiceAmount.Text = "0.00"
                '            End If

                '            If String.IsNullOrEmpty(TextBoxDiscountAmount.Text) = True Then
                '                TextBoxDiscountAmount.Text = "0.00"
                '            End If

                '            If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                '                TextBoxGSTAmount.Text = "0.00"
                '            End If

                '            If String.IsNullOrEmpty(TextBoxNetAmount.Text) = True Then
                '                TextBoxNetAmount.Text = "0.00"
                '            End If

                '            TotalInvoiceAmount = TotalInvoiceAmount + Convert.ToDecimal(TextBoxInvoiceAmount.Text)
                '            TotalDiscountAmount = TotalDiscountAmount + Convert.ToDecimal(TextBoxDiscountAmount.Text)

                '            TotalGSTAmount = TotalGSTAmount + Convert.ToDecimal(TextBoxGSTAmount.Text)
                '            TotalNetAmount = TotalNetAmount + Convert.ToDecimal(TextBoxNetAmount.Text)
                '        End If
                '    Next i

                'End If

                'txtInvoiceAmount.Text = TotalInvoiceAmount.ToString("N2")
                'txtDiscountAmount.Text = TotalDiscountAmount.ToString("N2")
                'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                'txtGSTAmount.Text = TotalGSTAmount.ToString("N2")
                'txtNetAmount.Text = TotalNetAmount.ToString("N2")

                ''txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

                '

                ''End: Update Invoice Amounts


            End If '04.01.17

            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If

            If txtMode.Text = "NEW" Then
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtContractNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtInvoiceNo.Text, "", txtRcno.Text)
            Else
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtContractNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtInvoiceNo.Text, "", txtRcno.Text)
            End If

            'conn.Close()

            'DisplayGLGrid()

            'btnSaveInvoice_Click(sender, e)


            'If txtMode.Text = "NEW" Then
            '    lblMessage.Text = "ADD: RECORD SUCCESSFULLY ADDED"
            'Else
            '    lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
            'End If


            'DisableControls()
            FirstGridViewRowBillingDetailsRecs()
            lblAlert.Text = ""
            'txtMode.Text = "View"

            btnSave.Enabled = False
            btnSaveInvoice.Enabled = True
            btnPost.Enabled = True


            updPnlMsg.Update()
            updpnlServiceRecs.Update()

            command.Dispose()

            txtTotal.Text = "0.00"
            txtTotalWithGST.Text = "0.00"
            txtTotalGSTAmt.Text = "0.00"
            txtTotalDiscAmt.Text = "0.00"
            txtTotalWithDiscAmt.Text = "0.00"
            Label41.Text = "SALES ORDER DETAILS"


            txtRcnotblServiceBillingDetail.Text = "0"
            'txtMode.Text = "EDIT"

            'cpnlInvoiceDetails.Collapsed = True
            'cpnlInvoiceDetails.ClientState = True
            Label41.Text = "SALES ORDER DETAILS"

            'cpnlInvoiceDetails.Enabled = False
            'cpnlInvoiceDetails.ClientState = False
            updPanelInvoice.Update()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnSave_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub DisplayGLGrid()
        Try

            ''''''''''''''''' Start: Display GL Grid

            FirstGridViewRowGL()



            'Start: GL Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvGL.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableGL") = dtScdrLoc
                grvGL.DataSource = dtScdrLoc
                grvGL.DataBind()


                SetPreviousDataGL()
            Next i

            FirstGridViewRowGL()

            Dim rowIndex3 = 0

            ''AR Values

            AddNewRowGL()


            ''AR values

            Dim TextBoxGLCodeAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCodeAR.Text = txtARCode.Text

            Dim TextBoxGLDescriptionAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescriptionAR.Text = txtARDescription.Text

            Dim TextBoxDebitAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
            TextBoxDebitAmountAR.Text = Convert.ToDecimal(txtNetAmount.Text).ToString("N2")

            Dim TextBoxCreditAmountAR As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
            TextBoxCreditAmountAR.Text = (0.0).ToString("N2")


            ''GST values

            rowIndex3 += 1
            AddNewRowGL()
            Dim TextBoxGLCodeGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCodeGST.Text = txtGSTOutputCode.Text

            Dim TextBoxGLDescriptionGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescriptionGST.Text = txtGSTOutputDescription.Text

            Dim TextBoxDebitAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
            TextBoxDebitAmountGST.Text = (0.0).ToString("N2")

            Dim TextBoxCreditAmountGST As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
            TextBoxCreditAmountGST.Text = Convert.ToDecimal(txtGSTAmount.Text).ToString("N2")
            ''GST Values



            rowIndex3 += 1
            AddNewRowGL()
            Dim conn As MySqlConnection = New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim cmdGL As MySqlCommand = New MySqlCommand
            cmdGL.CommandType = CommandType.Text
            'cmdGL.CommandText = "SELECT OtherCode, GLDescription, PriceWithDisc   FROM tblsalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "' and InvoiceNo ='" & txtInvoiceNo.Text & "' order by OtherCode"
            cmdGL.CommandText = "SELECT LedgerCode, LedgerName, ValueBase   FROM tblSalesOrderDetail where SalesOrderNumber ='" & txtInvoiceNo.Text.Trim & "' order by LedgerCode"

            'cmdGL.CommandText = "SELECT * FROM tblAR where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            cmdGL.Connection = conn

            Dim drcmdGL As MySqlDataReader = cmdGL.ExecuteReader()
            Dim dtGL As New DataTable
            dtGL.Load(drcmdGL)

            'FirstGridViewRowGL()


            Dim TotDetailRecordsLoc = dtGL.Rows.Count
            If dtGL.Rows.Count > 0 Then

                lGLCode = ""
                lGLDescription = ""
                lCreditAmount = 0.0


                lGLCode = dtGL.Rows(0)("LedgerCode").ToString()
                lGLDescription = dtGL.Rows(0)("LedgerName").ToString()
                lCreditAmount = 0.0

                Dim rowIndex4 = 0

                For Each row As DataRow In dtGL.Rows

                    If lGLCode = row("LedgerCode") Then
                        lCreditAmount = lCreditAmount + row("ValueBase")
                    Else


                        If (TotDetailRecordsLoc > (rowIndex4 + 1)) Then
                            AddNewRowGL()
                        End If

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        TextBoxGLCode.Text = lGLCode

                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                        TextBoxGLDescription.Text = lGLDescription

                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
                        TextBoxDebitAmount.Text = (0.0).ToString("N2")

                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
                        TextBoxCreditAmount.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

                        lGLCode = row("LedgerCode")
                        lGLDescription = row("LedgerName")
                        lCreditAmount = row("ValueBase")

                        rowIndex3 += 1
                        rowIndex4 += 1
                    End If
                Next row

            End If


            'AddNewRowGL()

            Dim TextBoxGLCode1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLCodeGV"), TextBox)
            TextBoxGLCode1.Text = lGLCode

            Dim TextBoxGLDescription1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
            TextBoxGLDescription1.Text = lGLDescription

            Dim TextBoxDebitAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtDebitAmountGV"), TextBox)
            TextBoxDebitAmount1.Text = (0.0).ToString("N2")

            Dim TextBoxCreditAmount1 As TextBox = CType(grvGL.Rows(rowIndex3).Cells(0).FindControl("txtCreditAmountGV"), TextBox)
            TextBoxCreditAmount1.Text = Convert.ToDecimal(lCreditAmount).ToString("N2")

            SetRowDataGL()
            Dim dtScdrLoc1 As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
            Dim drCurrentRowLoc1 As DataRow = Nothing

            dtScdrLoc1.Rows.Remove(dtScdrLoc1.Rows(rowIndex3 + 1))
            drCurrentRowLoc1 = dtScdrLoc1.NewRow()
            ViewState("CurrentTableGL") = dtScdrLoc1
            grvGL.DataSource = dtScdrLoc1
            grvGL.DataBind()
            SetPreviousDataGL()
            conn.Close()
            conn.Dispose()
            cmdGL.Dispose()
            dtGL.Dispose()
            dtScdrLoc.Dispose()
            dtScdrLoc1.Dispose()
            drcmdGL.Close()

            ''''''''''''''''' End: Display GL Grid
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION DisplayGrid", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub PopulateGLCodes()
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            Dim sql As String
            sql = ""

            Dim command21 As MySqlCommand = New MySqlCommand

            sql = "Select COACode, Description from tblchartofaccounts where  GLtype='TRADE DEBTOR'"
            'Dim command1 As MySqlCommand = New MySqlCommand
            command21.CommandType = CommandType.Text
            command21.CommandText = sql
            command21.Connection = conn

            Dim dr21 As MySqlDataReader = command21.ExecuteReader()

            Dim dt21 As New DataTable
            dt21.Load(dr21)

            If dt21.Rows.Count > 0 Then
                If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
            End If

            '''''''''''''''''''''''''''''''''''
            'sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"
            sql = "Select COACode, Description from tblchartofaccounts where GLType='GST OUTPUT'"
            Dim command23 As MySqlCommand = New MySqlCommand
            command23.CommandType = CommandType.Text
            command23.CommandText = sql
            command23.Connection = conn

            Dim dr23 As MySqlDataReader = command23.ExecuteReader()

            Dim dt23 As New DataTable
            dt23.Load(dr23)

            If dt23.Rows.Count > 0 Then
                If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
            End If



            conn.Close()
            conn.Dispose()

            command21.Dispose()
            command23.Dispose()
            dt21.Dispose()
            dt23.Dispose()
            dr21.Close()
            dr23.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PopulateGLCodes", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub InsertIntoTblSales()

        Dim rowselected As Integer
        rowselected = 0

        Dim ToBillAmt As Decimal
        Dim DiscAmount As Decimal
        Dim GSTAmount As Decimal
        Dim NetAmount As Decimal
        'Dim ToBillAmt As Decimal

        ToBillAmt = 0.0
        DiscAmount = 0.0
        GSTAmount = 0.0
        NetAmount = 0.0

        Try

            Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""

            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''tblSales

            If txtMode.Text = "NEW" Then

                qry = "INSERT INTO tblSalesOrder(DocType, SalesOrderNumber, CustAttention, CustName, AccountId, BillAddress1, BillBuilding, BillStreet, BillCity, BillState, BillPostal, BillCountry,  "
                qry = qry + "  ServiceRecordNo, SalesOrderDate, OurRef,YourRef, PoNo, RcnoServiceRecord,   Salesman,  Terms, TermsDay, "
                qry = qry + "  ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, "
                qry = qry + "  DiscountAmount, GSTAmount, NetAmount, Comments, ContactType, CompanyGroup, GLPeriod, AmountWithDiscount, BatchNo, RecurringSalesOrder, SalesOrderType,  "
                qry = qry + "  StaffCode, CustAddress1, custAddBuilding, CustAddStreet, CustAddCity, CustAddState, CustAddCountry, CustAddPostal, DueDate, ContractGroup, LedgerCode, LedgerName, GST, GSTRate, Description, Location, GStInclusive, "
                qry = qry + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                qry = qry + "(@DocType, @SalesOrderNumber, @CustAttention, @ClientName, @AccountId, @BillAddress1, @BillBuilding, @BillStreet, @BillCity, @BillState, @BillPostal, @BillCountry,"
                qry = qry + " @ServiceRecordNo, @SalesOrderDate, @ourRef, @YourRef,  @PoNo, @RcnoServiceRecord,  @Salesman,  @Terms, @TermsDay, "
                qry = qry + " @ValueBase, @ValueOriginal, @GSTBase, @GSTOriginal, @AppliedBase, @AppliedOriginal, @BalanceBase, @BalanceOriginal, "
                qry = qry + " @DiscountAmount, @GSTAmount, @NetAmount, @Comments, @ContactType, @CompanyGroup, @GLPeriod, @AmountWithDiscount, @BatchNo, @RecurringSalesOrder, @SalesOrderType, "
                qry = qry + " @StaffCode, @CustAddress1, @custAddBuilding, @CustAddStreet, @CustAddCity, @CustAddState, @CustAddCountry,@CustAddPostal, @DueDate, @ContractGroup, @LedgerCode, @LedgerName, @GST, @GSTRate, @Description, @Location, @GStInclusive, "
                qry = qry + "@CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                command.CommandText = qry

                command.Parameters.Clear()

                command.Parameters.AddWithValue("@DocType", "ARSO")
                command.Parameters.AddWithValue("@CustAttention", txtContactPerson.Text)
                command.Parameters.AddWithValue("@ClientName", txtAccountName.Text.ToUpper)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text.ToUpper)
                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper)
                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper)

                command.Parameters.AddWithValue("@BillCity", txtBillCity.Text.ToUpper)
                command.Parameters.AddWithValue("@BillState", txtBillState.Text.ToUpper)

                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text)
                If txtInvoiceDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@SalesOrderDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@SalesOrderDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper)
                command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper)
                command.Parameters.AddWithValue("@Comments", txtComments.Text.ToUpper)

                command.Parameters.AddWithValue("@ServiceRecordNo", txtRecordNo.Text)
                'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                command.Parameters.AddWithValue("@RcnoServiceRecord", 0)
                command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper)

                command.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                command.Parameters.AddWithValue("@GLPeriod", txtBillingPeriod.Text)
                command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                End If


                If ddlCreditTerms.Text = "-1" Then
                    command.Parameters.AddWithValue("@Terms", "")
                Else
                    command.Parameters.AddWithValue("@Terms", ddlCreditTerms.Text)
                End If

                If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                    command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text)
                Else
                    command.Parameters.AddWithValue("@TermsDay", 0)
                End If
                If chkRecurringInvoice.Checked = True Then
                    command.Parameters.AddWithValue("@RecurringSalesOrder", "Y")
                Else
                    command.Parameters.AddWithValue("@RecurringSalesOrder", "N")
                End If

                If rbtInvoiceType.SelectedIndex = 0 Then
                    command.Parameters.AddWithValue("@SalesOrderType", "M")
                Else
                    command.Parameters.AddWithValue("@SalesOrderType", "S")
                End If

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@StaffCode", "")
                Else
                    command.Parameters.AddWithValue("@StaffCode", ddlSalesmanBilling.Text)
                End If

                If txtDueDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@DueDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtDueDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text)
                command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuilding.Text.ToUpper)
                command.Parameters.AddWithValue("@CustAddStreet", txtBillStreet.Text.ToUpper)

                command.Parameters.AddWithValue("@CustAddCity", txtBillCity.Text.ToUpper)
                command.Parameters.AddWithValue("@CustAddState", txtBillState.Text.ToUpper)

                command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text.ToUpper)
                command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text.ToUpper)
                command.Parameters.AddWithValue("@ContractGroup", ddlContractGroupBilling.Text)

                command.Parameters.AddWithValue("@LedgerCode", txtARCode.Text)
                command.Parameters.AddWithValue("@LedgerName", txtARDescription.Text)

                'command.Parameters.AddWithValue("@GST", "SR")
                command.Parameters.AddWithValue("@GST", txtGST.Text)
                command.Parameters.AddWithValue("@GSTRate", Convert.ToDecimal(txtGST1.Text))
                command.Parameters.AddWithValue("@Description", txtDescription.Text.ToUpper)
                command.Parameters.AddWithValue("@Location", txtLocation.Text.ToUpper)

                command.Parameters.AddWithValue("@GSTInclusive", chkGSTInclusive.Checked)

                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                command.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                If chkManualInvoice.Checked = False Then
                    'GenerateInvoiceNo()
                    GenerateSalesOrderNo()
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
                    lblAlert.Text = "SALES ORDER NUMBER CANNOT BE BLANK"
                    updPnlMsg.Update()
                    Exit Sub
                End If
                command.Parameters.AddWithValue("@SalesOrderNumber", txtInvoiceNo.Text)

                command.Connection = conn
                command.ExecuteNonQuery()

                Dim sqlLastId As String
                sqlLastId = "SELECT last_insert_id() from tblSalesOrder"

                Dim commandRcno As MySqlCommand = New MySqlCommand
                commandRcno.CommandType = CommandType.Text
                commandRcno.CommandText = sqlLastId
                commandRcno.Parameters.Clear()
                commandRcno.Connection = conn
                txtRcno.Text = commandRcno.ExecuteScalar()
                updPanelInvoice.Update()
            Else

                qry = "Update tblSalesOrder set SalesOrderNumber = @SalesOrderNumber, CustAttention = @CustAttention, CustName =@ClientName, AccountId =@AccountId, BillAddress1 =@BillAddress1, BillBuilding =@BillBuilding,   "
                qry = qry + " BillStreet = @BillStreet, BillCity=@BillCity, BillState=@BillState,  BillPostal= @BillPostal, BillCountry= @BillCountry, ServiceRecordNo = @ServiceRecordNo,  SalesOrderDate =@SalesOrderDate,   "
                qry = qry + " OurRef = @ourRef, YourRef =@YourRef, PoNo = @PoNo,   Salesman = @Salesman,  Terms =@Terms, TermsDay =@TermsDay, "
                qry = qry + " ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, Comments = @Comments, ContactType = @ContactType, CompanyGroup = @CompanyGroup,  GLPeriod = @GLPeriod, AmountWithDiscount = @AmountWithDiscount, RecurringSalesOrder = @RecurringSalesOrder, "
                qry = qry + " StaffCode = @StaffCode, CustAddress1 = @CustAddress1,   CustAddStreet = @CustAddStreet, CustAddBuilding=@CustAddBuilding, CustAddCity=@CustAddCity, CustAddState=@CustAddState, CustAddCountry = @CustAddCountry, CustAddPostal=@CustAddPostal,  DueDate =@DueDate,  ContractGroup =@ContractGroup, LedgerCode=@LedgerCode, LedgerName =@LedgerName,  Description =@Description, gst=@GST, GSTRate=@GSTRate,  "
                qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
                qry = qry + " where Rcno = @Rcno;"

                command.CommandText = qry
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))
                command.Parameters.AddWithValue("@SalesOrderNumber", txtInvoiceNo.Text)
                command.Parameters.AddWithValue("@CustAttention", txtContactPerson.Text)

                command.Parameters.AddWithValue("@ClientName", txtAccountName.Text.ToUpper)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text.ToUpper)
                command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text.ToUpper)
                command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text.ToUpper)

                command.Parameters.AddWithValue("@BillCity", txtBillCity.Text.ToUpper)
                command.Parameters.AddWithValue("@BillState", txtBillState.Text.ToUpper)

                command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text)

                If txtInvoiceDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@SalesOrderDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@SalesOrderDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@OurRef", txtOurReference.Text.ToUpper)
                command.Parameters.AddWithValue("@YourRef", txtYourReference.Text.ToUpper)
                command.Parameters.AddWithValue("@Comments", txtComments.Text.ToUpper)

                command.Parameters.AddWithValue("@ServiceRecordNo", txtRecordNo.Text)
                command.Parameters.AddWithValue("@PoNo", txtPONo.Text.ToUpper)
                command.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                command.Parameters.AddWithValue("@GLPeriod", txtBillingPeriod.Text)

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                End If


                If ddlCreditTerms.Text = "-1" Then
                    command.Parameters.AddWithValue("@Terms", "")
                Else
                    command.Parameters.AddWithValue("@Terms", ddlCreditTerms.Text)
                End If

                If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                    command.Parameters.AddWithValue("@TermsDay", txtCreditDays.Text)
                Else
                    command.Parameters.AddWithValue("@TermsDay", 0)
                End If

                If chkRecurringInvoice.Checked = True Then
                    command.Parameters.AddWithValue("@RecurringSalesOrder", "Y")
                Else
                    command.Parameters.AddWithValue("@RecurringSalesOrder", "N")
                End If

                If ddlSalesmanBilling.Text = "-1" Then
                    command.Parameters.AddWithValue("@StaffCode", "")
                Else
                    command.Parameters.AddWithValue("@StaffCode", ddlSalesmanBilling.Text)
                End If

                If txtDueDate.Text.Trim = "" Then
                    command.Parameters.AddWithValue("@DueDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtDueDate.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@CustAddress1", txtBillAddress.Text.ToUpper)
                command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuilding.Text.ToUpper)
                command.Parameters.AddWithValue("@CustAddStreet", txtBillStreet.Text.ToUpper)

                command.Parameters.AddWithValue("@CustAddCity", txtBillCity.Text.ToUpper)
                command.Parameters.AddWithValue("@CustAddState", txtBillState.Text.ToUpper)

                command.Parameters.AddWithValue("@CustAddPostal", txtBillPostal.Text)
                command.Parameters.AddWithValue("@CustAddCountry", txtBillCountry.Text)
                command.Parameters.AddWithValue("@ContractGroup", ddlContractGroupBilling.Text)

                command.Parameters.AddWithValue("@LedgerCode", txtARCode.Text)
                command.Parameters.AddWithValue("@LedgerName", txtARDescription.Text.ToUpper)
                command.Parameters.AddWithValue("@Description", txtDescription.Text.ToUpper)
                command.Parameters.AddWithValue("@GST", txtGST.Text)
                command.Parameters.AddWithValue("@GSTRate", Convert.ToDecimal(txtGST1.Text))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                command.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))

                command.Connection = conn
                command.ExecuteNonQuery()
            End If


            ''''''''tblSales

            'Dim commandtblSalesDetail As MySqlCommand = New MySqlCommand

            'commandtblSalesDetail.CommandType = CommandType.Text
            ''Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
            'Dim qrycommandtblSalesDetail As String = "DELETE from tblSalesdetail where invoiceNumber = '" & txtInvoiceNo.Text & "'"

            'commandtblSalesDetail.CommandText = qrycommandtblSalesDetail
            'commandtblSalesDetail.Parameters.Clear()
            'commandtblSalesDetail.Connection = conn
            'commandtblSalesDetail.ExecuteNonQuery()



            ' GVB----------------------------

            Dim gvbRecords, i As Long
            gvbRecords = grvBillingDetailsNew.Rows.Count()

            For i = 0 To gvbRecords - 1


                Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemTypeGVB"), TextBox)
                Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtOtherCodeGVB"), TextBox)
                Dim lblid14 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoInvoiceGVB"), TextBox)

                If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                    Dim lblidItemCodeGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemCodeGVB"), DropDownList)
                    Dim lblidServiceRecordGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceRecordGVB"), TextBox)
                    Dim lblItemDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtItemDescriptionGVB"), TextBox)
                    Dim lblDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDescriptionGVB"), TextBox)
                    Dim lblGLDescriptionGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGLDescriptionGVB"), TextBox)

                    'Dim lblid6 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGV"), TextBox)
                    Dim lblidRcnoServiceRecordGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtRcnoServiceRecordGVB"), TextBox)

                    If String.IsNullOrEmpty(lblidRcnoServiceRecordGVB.Text) = True Then
                        lblidRcnoServiceRecordGVB.Text = 0
                    End If

                    'Dim lblid8 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDeptGV"), TextBox)
                    Dim lblidServiceStatusGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceStatusGVB"), TextBox)

                    Dim lblidContractNoGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtContractNoGVB"), TextBox)
                    'Dim lblid12 As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceAddressGV"), TextBox)
                    'Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)

                    Dim lblidUnitMsGVB As DropDownList = CType(grvBillingDetailsNew.Rows(i).FindControl("txtUOMGVB"), DropDownList)
                    Dim lblidQtyGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtQtyGVB"), TextBox)
                    Dim lblidPricePerUOMGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtPricePerUOMGVB"), TextBox)
                    Dim lblidTotalPriceGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTotalPriceGVB"), TextBox)
                    Dim lblidDiscPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDiscPercGVB"), TextBox)
                    Dim lblidDiscAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtDiscAmountGVB"), TextBox)
                    Dim lblidPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtPriceWithDiscGVB"), TextBox)

                    Dim lblidGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTaxTypeGVB"), TextBox)
                    Dim lblidGSTRate As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTPercGVB"), TextBox)
                    Dim lblidGSTBaseGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTAmtGVB"), TextBox)
                    'Dim lblidGSTAmt As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtGSTAmtGV"), TextBox)
                    Dim lblidNetAmountGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtTotalPriceWithGSTGVB"), TextBox)

                    'Dim lblidServiceStatus As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceStatusGV"), TextBox)
                    Dim lblidLocationIdGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtLocationIdGVB"), TextBox)
                    Dim lblidServiceLocationGroupGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceLocationGroupGVB"), TextBox)


                    Dim lblidBillingFrequencyGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtBillingFrequencyGVB"), TextBox)
                    Dim lblidServiceByGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceByGVB"), TextBox)
                    Dim lblidServiceDateGVB As TextBox = CType(grvBillingDetailsNew.Rows(i).FindControl("txtServiceDateGVB"), TextBox)


                    Dim lContractGroup As String
                    lContractGroup = ""

                    If String.IsNullOrEmpty(lblidContractNoGVB.Text) = False Then
                        Dim commandCG As MySqlCommand = New MySqlCommand
                        commandCG.CommandType = CommandType.Text

                        commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & lblidContractNoGVB.Text & "'"
                        commandCG.Connection = conn

                        Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                        Dim dtCG As New DataTable
                        dtCG.Load(drCG)


                        lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                        commandCG.Dispose()
                        dtCG.Dispose()
                    End If

                    Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                    commandSalesDetail.CommandType = CommandType.Text

                    'Dim qryDetail As String = "INSERT INTO tblSalesDetail(InvoiceNumber, Sequence, SubCode, LedgerCode, LedgerName, SubLedgerCode, SONUMBER, RefType, Gst, "
                    'qryDetail = qryDetail + " GstRate, ExchangeRate, Currency, Quantity, UnitMs, UnitOriginal, UnitBase,  DiscP, TaxBase, GstOriginal,"
                    'qryDetail = qryDetail + " GstBase, ValueOriginal, ValueBase, AppliedOriginal, AppliedBase, Description, Comments, GroupId, "
                    'qryDetail = qryDetail + " DetailID, GrpDetName, SoCode, ItemCode, AvgCost, CostValue, COSTCODE, ServiceStatus, DiscAmount, TotalPrice, LocationId, ServiceLocationGroup, RcnoServiceRecord, ServiceBy, ServiceDate, BillingFrequency, InvoiceTYpe, ItemDescription, ContractGroup,  "
                    'qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    'qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                    'qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                    'qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                    'qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, "
                    'qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"


                    Dim qryDetail As String = "UPDATE tblSalesOrderDetail SET SalesOrderNumber=@SalesOrderNumber, Sequence=@Sequence, SubCode=@SubCode, LedgerCode=@LedgerCode, LedgerName=@LedgerName, SubLedgerCode=@SubLedgerCode, SONUMBER=SONUMBER, RefType=@RefType, Gst=@Gst, "
                    qryDetail = qryDetail + " GstRate=@GstRate, ExchangeRate=@ExchangeRate, Currency=@Currency, Quantity=@Quantity, UnitMs=@UnitMs, UnitOriginal=@UnitOriginal, UnitBase=@UnitBase,  DiscP=@DiscP, TaxBase=@TaxBase, GstOriginal=GstOriginal,"
                    qryDetail = qryDetail + " GstBase=@GstBase, ValueOriginal=@ValueOriginal, ValueBase=@ValueBase, AppliedOriginal=@AppliedOriginal, AppliedBase=@AppliedBase, Description=@Description, Comments=@Comments, GroupId=GroupId, "
                    qryDetail = qryDetail + " DetailID=@DetailID, GrpDetName=@GrpDetName, SoCode=@SoCode, ItemCode=@ItemCode, AvgCost=AvgCost, CostValue=@CostValue, COSTCODE=@COSTCODE, ServiceStatus=@ServiceStatus, DiscAmount=@DiscAmount, TotalPrice=@TotalPrice,  "
                    qryDetail = qryDetail + " LocationId=@LocationId, ServiceLocationGroup=@ServiceLocationGroup, RcnoServiceRecord=@RcnoServiceRecord, ServiceBy=@ServiceBy, ServiceDate=@ServiceDate, BillingFrequency=@BillingFrequency, SalesOrderTYpe=@SalesOrderTYpe, ItemDescription=@ItemDescription, ContractGroup=@ContractGroup, Location=@Location, "
                    qryDetail = qryDetail + " LastModifiedBy=@LastModifiedBy,LastModifiedOn=@LastModifiedOn "
                    qryDetail = qryDetail + " where Rcno = " & lblid14.Text
                    'qryDetail = qryDetail + "(@InvoiceNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                    'qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                    'qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                    'qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @InvoiceType, @ItemDescription, @ContractGroup, "
                    'qryDetail = qryDetail + "  @LastModifiedBy, @LastModifiedOn "



                    commandSalesDetail.CommandText = qryDetail
                    commandSalesDetail.Parameters.Clear()

                    commandSalesDetail.Parameters.AddWithValue("@SalesOrderNumber", txtInvoiceNo.Text)
                    commandSalesDetail.Parameters.AddWithValue("@Sequence", 0)
                    commandSalesDetail.Parameters.AddWithValue("@SubCode", lblidItemTypeGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@LedgerCode", lblidOtherCodeGVB.Text)
                    'commandSalesDetail.Parameters.AddWithValue("@LedgerName", lLedgerName.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@LedgerName", lblGLDescriptionGVB.Text.ToUpper)

                    commandSalesDetail.Parameters.AddWithValue("@SubLedgerCode", "")
                    commandSalesDetail.Parameters.AddWithValue("@SONUMBER", "")

                    'If (lblidServiceRecordGVB.SelectedIndex) = 0 Then
                    '    'If String.IsNullOrEmpty(lblidServiceRecord.Text) = "--SELECT--" Then
                    '    commandSalesDetail.Parameters.AddWithValue("@RefType", "")
                    'Else
                    commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecordGVB.Text)
                    'End If

                    commandSalesDetail.Parameters.AddWithValue("@Gst", lblidGSTGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@GstRate", lblidGSTRate.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ExchangeRate", 1.0)
                    commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")
                    commandSalesDetail.Parameters.AddWithValue("@Quantity", Convert.ToDecimal(lblidQtyGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@UnitMs", lblidUnitMsGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(lblidPricePerUOMGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(lblidPricePerUOMGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@DiscP", Convert.ToDecimal(lblidDiscPercGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@TaxBase", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@GstOriginal", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@GstBase", Convert.ToDecimal(lblidGSTBaseGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(lblidPriceWithDiscGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(lblidPriceWithDiscGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(lblidNetAmountGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(lblidNetAmountGVB.Text))
                    commandSalesDetail.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblidTotalPriceGVB.Text))

                    commandSalesDetail.Parameters.AddWithValue("@ItemCode", lblItemDescriptionGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@ItemDescription", lblidItemCodeGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@Description", lblDescriptionGVB.Text.ToUpper)
                    commandSalesDetail.Parameters.AddWithValue("@Comments", "")
                    commandSalesDetail.Parameters.AddWithValue("@GroupId", "")
                    commandSalesDetail.Parameters.AddWithValue("@DetailID", "")
                    commandSalesDetail.Parameters.AddWithValue("@GrpDetName", "")

                    commandSalesDetail.Parameters.AddWithValue("@SoCode", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@AvgCost", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@CostValue", 0.0)
                    commandSalesDetail.Parameters.AddWithValue("@COSTCODE", lblidContractNoGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ServiceStatus", lblidServiceStatusGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@DiscAmount", lblidDiscAmountGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@PriceWithDisc", lblidPriceWithDiscGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@LocationId", lblidLocationIdGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ServiceLocationGroup", lblidServiceLocationGroupGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@RcnoServiceRecord", lblidRcnoServiceRecordGVB.Text)

                    commandSalesDetail.Parameters.AddWithValue("@ServiceBy", lblidServiceByGVB.Text)

                    If String.IsNullOrEmpty(lblidServiceDateGVB.Text.Trim) = True Then
                        commandSalesDetail.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        commandSalesDetail.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblidServiceDateGVB.Text).ToString("yyyy-MM-dd"))
                    End If

                    'commandSalesDetail.Parameters.AddWithValue("@ServiceDate", lblidServiceDate.Text)
                    commandSalesDetail.Parameters.AddWithValue("@BillingFrequency", lblidBillingFrequencyGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@SalesOrderType", lblidItemTypeGVB.Text)
                    commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup)
                    commandSalesDetail.Parameters.AddWithValue("@Location", txtLocation.Text)

                    commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    commandSalesDetail.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                    commandSalesDetail.Connection = conn
                    commandSalesDetail.ExecuteNonQuery()

                    commandSalesDetail.Dispose()
                End If


            Next

            'Exit Sub

            'GVB -----------------------------

            ''''''''''''''''''
            SetRowDataBillingDetailsRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    If TextBoxchkSelect.Checked = True Then
                        If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                            Dim lblidItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                            Dim lblidServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceRecordGV"), TextBox)
                            Dim lblItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                            Dim lblDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDescriptionGV"), TextBox)
                            Dim lblGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)

                            'Dim lblid6 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                            Dim lblidRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtRcnoServiceRecordGV"), TextBox)

                            If String.IsNullOrEmpty(lblidRcnoServiceRecord.Text) = True Then
                                lblidRcnoServiceRecord.Text = 0
                            End If

                            'Dim lblid8 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDeptGV"), TextBox)
                            Dim lblidServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                            Dim lblidContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                            'Dim lblid12 As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceAddressGV"), TextBox)
                            'Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)

                            Dim lblidUnitMs As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                            Dim lblidQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtQtyGV"), TextBox)
                            Dim lblidPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                            Dim lblidTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                            Dim lblidDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                            Dim lblidDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                            Dim lblidPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)

                            Dim lblidGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                            Dim lblidGSTRate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                            Dim lblidGSTBase As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                            'Dim lblidGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                            Dim lblidNetAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)

                            'Dim lblidServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)
                            Dim lblidLocationId As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtLocationIdGV"), TextBox)
                            Dim lblidServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceLocationGroupGV"), TextBox)


                            Dim lblidBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtBillingFrequencyGV"), TextBox)
                            Dim lblidServiceBy As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceByGV"), TextBox)
                            Dim lblidServiceDate As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceDateGV"), TextBox)

                            Dim lContractGroup As String
                            lContractGroup = ""

                            If String.IsNullOrEmpty(lblidContractNo.Text) = False Then
                                Dim commandCG As MySqlCommand = New MySqlCommand
                                commandCG.CommandType = CommandType.Text

                                commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & lblidContractNo.Text & "'"
                                commandCG.Connection = conn

                                Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                                Dim dtCG As New DataTable
                                dtCG.Load(drCG)


                                'lContractGroup = dtCG.Rows(0)("ContractGroup").ToString

                                If dtCG.Rows.Count > 0 Then
                                    lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                                Else
                                    lContractGroup = ""
                                End If

                                commandCG.Dispose()
                                dtCG.Dispose()
                            End If

                            Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                            commandSalesDetail.CommandType = CommandType.Text

                            Dim qryDetail As String = "INSERT INTO tblSalesOrderDetail(SalesOrderNumber, Sequence, SubCode, LedgerCode, LedgerName, SubLedgerCode, SONUMBER, RefType, Gst, "
                            qryDetail = qryDetail + " GstRate, ExchangeRate, Currency, Quantity, UnitMs, UnitOriginal, UnitBase,  DiscP, TaxBase, GstOriginal,"
                            qryDetail = qryDetail + " GstBase, ValueOriginal, ValueBase, AppliedOriginal, AppliedBase, Description, Comments, GroupId, "
                            qryDetail = qryDetail + " DetailID, GrpDetName, SoCode, ItemCode, AvgCost, CostValue, COSTCODE, ServiceStatus, DiscAmount, TotalPrice, LocationId, ServiceLocationGroup, RcnoServiceRecord, ServiceBy, ServiceDate, BillingFrequency, SalesOrderType, ItemDescription, ContractGroup, Location,   "
                            qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                            qryDetail = qryDetail + "(@SalesOrderNumber, @Sequence, @SubCode, @LedgerCode, @LedgerName, @SubLedgerCode, @SONUMBER, @RefType, @Gst,"
                            qryDetail = qryDetail + " @GstRate, @ExchangeRate, @Currency, @Quantity, @UnitMs, @UnitOriginal, @UnitBase,  @DiscP, @TaxBase, @GstOriginal, "
                            qryDetail = qryDetail + " @GstBase, @ValueOriginal, @ValueBase, @AppliedOriginal, @AppliedBase, @Description, @Comments, @GroupId, "
                            qryDetail = qryDetail + " @DetailID, @GrpDetName, @SoCode, @ItemCode, @AvgCost, @CostValue, @COSTCODE, @ServiceStatus, @DiscAmount, @TotalPrice, @LocationId, @ServiceLocationGroup, @RcnoServiceRecord, @ServiceBy, @ServiceDate, @BillingFrequency, @SalesOrderType, @ItemDescription, @ContractGroup, @Location, "
                            qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                            commandSalesDetail.CommandText = qryDetail
                            commandSalesDetail.Parameters.Clear()

                            commandSalesDetail.Parameters.AddWithValue("@SalesOrderNumber", txtInvoiceNo.Text)
                            commandSalesDetail.Parameters.AddWithValue("@Sequence", 0)

                            commandSalesDetail.Parameters.AddWithValue("@SubCode", lblidItemType.Text)

                            commandSalesDetail.Parameters.AddWithValue("@LedgerCode", lblidOtherCode.Text)
                            'commandSalesDetail.Parameters.AddWithValue("@LedgerName", lLedgerName.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@LedgerName", lblGLDescription.Text.ToUpper)

                            commandSalesDetail.Parameters.AddWithValue("@SubLedgerCode", "")
                            commandSalesDetail.Parameters.AddWithValue("@SONUMBER", "")

                            commandSalesDetail.Parameters.AddWithValue("@RefType", lblidServiceRecord.Text)

                            commandSalesDetail.Parameters.AddWithValue("@Gst", lblidGST.Text)
                            commandSalesDetail.Parameters.AddWithValue("@GstRate", lblidGSTRate.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ExchangeRate", 1.0)
                            commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")
                            commandSalesDetail.Parameters.AddWithValue("@Quantity", Convert.ToDecimal(lblidQty.Text))
                            commandSalesDetail.Parameters.AddWithValue("@UnitMs", lblidUnitMs.Text)
                            commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(lblidPricePerUOM.Text))
                            commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(lblidPricePerUOM.Text))
                            commandSalesDetail.Parameters.AddWithValue("@DiscP", Convert.ToDecimal(lblidDiscPerc.Text))
                            commandSalesDetail.Parameters.AddWithValue("@TaxBase", Convert.ToDecimal(lblidGSTBase.Text))
                            commandSalesDetail.Parameters.AddWithValue("@GstOriginal", Convert.ToDecimal(lblidGSTBase.Text))
                            commandSalesDetail.Parameters.AddWithValue("@GstBase", Convert.ToDecimal(lblidGSTBase.Text))
                            commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(lblidPriceWithDisc.Text))
                            commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(lblidPriceWithDisc.Text))
                            commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(lblidNetAmount.Text))
                            commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(lblidNetAmount.Text))
                            commandSalesDetail.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(lblidTotalPrice.Text))

                            commandSalesDetail.Parameters.AddWithValue("@ItemCode", lblItemDescription.Text.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@ItemDescription", lblidItemCode.Text.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@Description", lblDescription.Text.ToUpper)
                            commandSalesDetail.Parameters.AddWithValue("@Comments", "")
                            commandSalesDetail.Parameters.AddWithValue("@GroupId", "")
                            commandSalesDetail.Parameters.AddWithValue("@DetailID", "")
                            commandSalesDetail.Parameters.AddWithValue("@GrpDetName", "")
                            commandSalesDetail.Parameters.AddWithValue("@SoCode", 0.0)
                            commandSalesDetail.Parameters.AddWithValue("@AvgCost", 0.0)
                            commandSalesDetail.Parameters.AddWithValue("@CostValue", 0.0)
                            commandSalesDetail.Parameters.AddWithValue("@COSTCODE", lblidContractNo.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ServiceStatus", lblidServiceStatus.Text)

                            commandSalesDetail.Parameters.AddWithValue("@DiscAmount", lblidDiscAmount.Text)
                            commandSalesDetail.Parameters.AddWithValue("@PriceWithDisc", lblidPriceWithDisc.Text)
                            commandSalesDetail.Parameters.AddWithValue("@LocationId", lblidLocationId.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ServiceLocationGroup", lblidServiceLocationGroup.Text)

                            commandSalesDetail.Parameters.AddWithValue("@RcnoServiceRecord", lblidRcnoServiceRecord.Text)

                            commandSalesDetail.Parameters.AddWithValue("@ServiceBy", lblidServiceBy.Text)

                            If String.IsNullOrEmpty(lblidServiceDate.Text.Trim) = True Then
                                commandSalesDetail.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                            Else
                                commandSalesDetail.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblidServiceDate.Text).ToString("yyyy-MM-dd"))
                            End If

                            'commandSalesDetail.Parameters.AddWithValue("@ServiceDate", lblidServiceDate.Text)
                            commandSalesDetail.Parameters.AddWithValue("@BillingFrequency", lblidBillingFrequency.Text)
                            commandSalesDetail.Parameters.AddWithValue("@SalesOrderType", lblidItemType.Text)
                            commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup)
                            commandSalesDetail.Parameters.AddWithValue("@Location", txtLocation.Text)

                            commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            commandSalesDetail.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
                            commandSalesDetail.Connection = conn
                            commandSalesDetail.ExecuteNonQuery()

                            commandSalesDetail.Dispose()

                            ToBillAmt = ToBillAmt + Convert.ToDecimal(lblidTotalPrice.Text)
                            DiscAmount = DiscAmount + Convert.ToDecimal(lblidDiscAmount.Text)
                            GSTAmount = GSTAmount + Convert.ToDecimal(lblidGSTBase.Text)
                            NetAmount = NetAmount + Convert.ToDecimal(lblidNetAmount.Text)

                        End If

                    End If
                Next rowIndex

                DisplayGLGrid()
                UpdatePanel3.Update()
            End If


            ' Start:Update Service Address in tblSalesOrder

            Dim commandUpdateServiceAddress As MySqlCommand = New MySqlCommand
            commandUpdateServiceAddress.CommandType = CommandType.StoredProcedure
            commandUpdateServiceAddress.CommandText = "UpdateTblSalesOrderServiceAddress"
            commandUpdateServiceAddress.Parameters.Clear()
            commandUpdateServiceAddress.Parameters.AddWithValue("@pr_SalesOrderNumber", txtInvoiceNo.Text.Trim)
            commandUpdateServiceAddress.Connection = conn
            commandUpdateServiceAddress.ExecuteScalar()

            ' End:Update Service Address in tblSales
            conn.Close()
            conn.Dispose()
            command.Dispose()

            InsertNewLogDetail()

        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION InsertIntoTblSalesOrder", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub InsertNewLog()
        Try
            '' Start: Insert NEW Log table

            'Dim conn As MySqlConnection = New MySqlConnection()
            'Dim command As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = "SELECT EnableLogforInvoice FROM tblservicerecordmastersetup where rcno=1"
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
            '    If dt.Rows(0)("EnableLogforInvoice").ToString = "1" Then
            '        Dim connLog As MySqlConnection = New MySqlConnection()

            '        connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
            '        If connLog.State = ConnectionState.Open Then
            '            connLog.Close()
            '            connLog.Dispose()
            '        End If
            '        connLog.Open()

            '        Dim commandInsertLog As MySqlCommand = New MySqlCommand
            '        commandInsertLog.CommandType = CommandType.StoredProcedure
            '        commandInsertLog.CommandText = "InsertLog_sitadatadb"

            '        commandInsertLog.Parameters.Clear()

            '        commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Invoice")
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtInvoiceNo.Text.Trim)

            '        commandInsertLog.Connection = connLog
            '        commandInsertLog.ExecuteScalar()

            '        connLog.Close()
            '        commandInsertLog.Dispose()

            '    End If
            'End If

            '' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub InsertNewLogDetail()
        'Try
        '    ' Start: Insert NEW Log table

        '    Dim conn As MySqlConnection = New MySqlConnection()
        '    Dim command As MySqlCommand = New MySqlCommand

        '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        '    conn.Open()

        '    command.CommandType = CommandType.Text
        '    command.CommandText = "SELECT EnableLogforInvoice FROM tblservicerecordmastersetup where rcno=1"
        '    command.Connection = conn

        '    Dim dr As MySqlDataReader = command.ExecuteReader()
        '    Dim dt As New DataTable
        '    dt.Load(dr)

        '    If dt.Rows.Count > 0 Then
        '        'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
        '        If dt.Rows(0)("EnableLogforInvoice").ToString = "1" Then


        '            Dim connLog As MySqlConnection = New MySqlConnection()

        '            connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
        '            If connLog.State = ConnectionState.Open Then
        '                connLog.Close()
        '                connLog.Dispose()
        '            End If
        '            connLog.Open()

        '            Dim commandInsertLog As MySqlCommand = New MySqlCommand
        '            commandInsertLog.CommandType = CommandType.StoredProcedure
        '            commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

        '            commandInsertLog.Parameters.Clear()

        '            commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Invoice")
        '            commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtInvoiceNo.Text.Trim)
        '            commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", "")

        '            commandInsertLog.Connection = connLog
        '            commandInsertLog.ExecuteScalar()

        '            connLog.Close()
        '            commandInsertLog.Dispose()
        '        End If
        '    End If

        '    ' End: Insert NEW Log table
        'Catch ex As Exception
        '    lblAlert.Text = ex.Message.ToString
        '    InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
        '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        'End Try
    End Sub


    Private Sub InsertNewLogReceipt()
        Try
            '' Start: Insert NEW Log table

            'Dim conn As MySqlConnection = New MySqlConnection()
            'Dim command As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = "SELECT EnableLogforReceipt FROM tblservicerecordmastersetup where rcno=1"
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
            '    If dt.Rows(0)("EnableLogforReceipt").ToString = "1" Then


            '        Dim connLog As MySqlConnection = New MySqlConnection()

            '        connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
            '        If connLog.State = ConnectionState.Open Then
            '            connLog.Close()
            '            connLog.Dispose()
            '        End If
            '        connLog.Open()

            '        Dim commandInsertLog As MySqlCommand = New MySqlCommand
            '        commandInsertLog.CommandType = CommandType.StoredProcedure
            '        commandInsertLog.CommandText = "InsertLog_sitadatadb"

            '        commandInsertLog.Parameters.Clear()

            '        commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Receipt")
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtReceiptNoQR.Text.Trim)

            '        commandInsertLog.Connection = connLog
            '        commandInsertLog.ExecuteScalar()

            '        connLog.Close()
            '        commandInsertLog.Dispose()
            '    End If
            'End If

            '' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub InsertNewLogReceiptDetail()
        Try
            '' Start: Insert NEW Log table

            'Dim conn As MySqlConnection = New MySqlConnection()
            'Dim command As MySqlCommand = New MySqlCommand

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()

            'command.CommandType = CommandType.Text
            'command.CommandText = "SELECT EnableLogforReceipt FROM tblservicerecordmastersetup where rcno=1"
            'command.Connection = conn

            'Dim dr As MySqlDataReader = command.ExecuteReader()
            'Dim dt As New DataTable
            'dt.Load(dr)

            'If dt.Rows.Count > 0 Then
            '    'If Convert.ToBoolean(dt.Rows(0)("EnableLogforCustomer")) = False Then
            '    If dt.Rows(0)("EnableLogforReceipt").ToString = "1" Then

            '        Dim connLog As MySqlConnection = New MySqlConnection()

            '        connLog.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataLogConnectionString").ConnectionString
            '        If connLog.State = ConnectionState.Open Then
            '            connLog.Close()
            '            connLog.Dispose()
            '        End If
            '        connLog.Open()

            '        Dim commandInsertLog As MySqlCommand = New MySqlCommand
            '        commandInsertLog.CommandType = CommandType.StoredProcedure
            '        commandInsertLog.CommandText = "InsertLogDetail_sitadatadb"

            '        commandInsertLog.Parameters.Clear()

            '        commandInsertLog.Parameters.AddWithValue("@pr_ModuleType", "Receipt")
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValue", txtReceiptNoQR.Text.Trim)
            '        commandInsertLog.Parameters.AddWithValue("@pr_KeyValueDetail", "")

            '        commandInsertLog.Connection = connLog
            '        commandInsertLog.ExecuteScalar()

            '        connLog.Close()
            '        commandInsertLog.Dispose()

            '    End If
            'End If

            '' End: Insert NEW Log table
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION InsertNewLog", ex.Message.ToString, txtInvoiceNo.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

   
    Private Function FindAccountId() As Boolean

        Dim IsAccountId As Boolean
        IsAccountId = False

        Dim connIsAccountId As MySqlConnection = New MySqlConnection()

        connIsAccountId.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connIsAccountId.Open()

        Dim commandIsAccountId As MySqlCommand = New MySqlCommand
        commandIsAccountId.CommandType = CommandType.Text

        If txtAccountType.Text = "COMPANY" Or txtAccountType.Text = "CORPORATE" Then
            commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblCompany where AccountId ='" & txtAccountIdBilling.Text & "'"
        ElseIf txtAccountType.Text = "PERSON" Or txtAccountType.Text = "RESIDENTIAL" Then
            commandIsAccountId.CommandText = "SELECT count(*) as CountAccountId from tblPerson where AccountId ='" & txtAccountIdBilling.Text & "'"
        End If

        commandIsAccountId.Connection = connIsAccountId

        Dim drIsAccountId As MySqlDataReader = commandIsAccountId.ExecuteReader()
        Dim dtIsAccountId As New DataTable
        dtIsAccountId.Load(drIsAccountId)

        If dtIsAccountId.Rows.Count > 0 Then
            If dtIsAccountId.Rows(0)("CountAccountId").ToString > 0 Then
                IsAccountId = True
            End If


        End If
        commandIsAccountId.Dispose()
        connIsAccountId.Close()
        connIsAccountId.Dispose()
        dtIsAccountId.Dispose()
        drIsAccountId.Close()
        Return IsAccountId
    End Function
    Protected Sub btnSaveInvoice_Click(sender As Object, e As EventArgs) Handles btnSaveInvoice.Click
        lblAlert.Text = ""
        updPnlMsg.Update()

        Try
            'btnSaveInvoice.Enabled = False
            'UpdatePanel3.Update()

            'System.Threading.Thread.Sleep(2000)


            If chkManualInvoice.Checked = True Then
                If String.IsNullOrEmpty(txtInvoiceNo.Text) = True Then
                    lblAlert.Text = "PLEASE ENTER SALES ORDER NO."
                    updPnlMsg.Update()
                    txtInvoiceNo.Focus()
                    btnSaveInvoice.Enabled = True
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub
                End If
            End If


            If String.IsNullOrEmpty(txtInvoiceDate.Text) = True Then
                lblAlert.Text = "PLEASE ENTER SALES ORDER DATE"
                updPnlMsg.Update()
                txtInvoiceDate.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            Dim IsLock = FindSOPeriod(txtBillingPeriod.Text)
            'If IsLock = "Y" Then
            '    lblAlert.Text = "PERIOD IS LOCKED"
            '    updPnlMsg.Update()
            '    txtInvoiceDate.Focus()
            '    btnSaveInvoice.Enabled = True
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If

            If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
                lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
                updPnlMsg.Update()
                txtAccountIdBilling.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If



            '''''''''''''''''''''

            Dim IsAccountIdExist As Boolean = FindAccountId()

            If IsAccountIdExist = False Then
                lblAlert.Text = "INVALID ACCOUNT ID"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = True Then
                lblAlert.Text = "INVALID COMPANY GROUP"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(txtBillAddress.Text.Trim) = True Then
                lblAlert.Text = "PLEASE ENTER BILLING ADDRESS (1ST LINE)"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If



            If String.IsNullOrEmpty(txtBillCountry.Text.Trim) = True Then
                lblAlert.Text = "PLEASE ENTER BILL COUNTRY"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If
            '''''''''''''''''''''

                    If (ddlCreditTerms.SelectedIndex) = 0 Then
                        lblAlert.Text = "PLEASE SELECT CREDIT TERMS"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If

                    If (ddlSalesmanBilling.SelectedIndex) = 0 Then
                        lblAlert.Text = "PLEASE SELECT SALESMAN"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If


                    If IsNumeric(txtCreditDays.Text) = False Then
                        lblAlert.Text = "CREDIT DAYS SHOULD BE NUMERIC ONLY"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If



                    If txtDuplicateServiceRecord.Text = "Y" Then
                        lblAlert.Text = "DUPLICATE SERVICE RECORD HAS BEEN SELECTED"
                        updPnlMsg.Update()
                lblAlert.Focus()
                btnSaveInvoice.Enabled = True
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        Exit Sub
                    End If



            If Len(txtDescription.Text.Trim) > 500 Then
                lblAlert.Text = "DESCRIPTION SHOULD BE MAXIMUM 500 CHARS. ONLY"
                updPnlMsg.Update()
                txtDescription.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If Len(txtComments.Text.Trim) > 2000 Then
                lblAlert.Text = "COMMENTS SHOULD BE MAXIMUM 2000 CHARS. ONLY"
                updPnlMsg.Update()
                txtComments.Focus()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(txtTotalGSTAmt.Text.Trim) = True Then
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If String.IsNullOrEmpty(txtTotalWithGST.Text.Trim) = True Then
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If Convert.ToDecimal(txtNetAmount.Text.Trim) < 0.0 Then
                lblAlert.Text = "SALES ORDER AMOUNT CANNOT BE NEGATIVE"
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            '''''''''''''''''''''''''''''
            If txtMode.Text = "NEW" Then
                Dim HasDetailRec As Integer = 0
                SetRowDataBillingDetailsRecs()
                Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

                If tableAdd IsNot Nothing Then

                    For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1

                        Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                        Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                        If TextBoxchkSelect.Checked = True Then
                            If (lblidItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(lblidOtherCode.Text) = False Then
                                'Dim lblidItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                                HasDetailRec = 1
                                GoTo HasDetail
                            End If

                        End If
                    Next rowIndex
                End If

                If HasDetailRec = 0 Then
                    lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS SELECTED"
                    updPnlMsg.Update()
                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                    Exit Sub

                End If
            End If

HasDetail:

            '''''''''''''''''''''''''''''
            If Convert.ToDecimal(txtTotalGSTAmt.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtGSTAmount.Text.Trim).ToString("N2") Then
                AdjustGStAmount()
            End If



            If Convert.ToDecimal(txtTotalGSTAmt.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtGSTAmount.Text.Trim).ToString("N2") Then
                lblAlert.Text = "GST AMOUNTS DO NOT MATCH"
                updPnlMsg.Update()
                btnSaveInvoice.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If Convert.ToDecimal(txtTotalWithGST.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtNetAmount.Text.Trim).ToString("N2") Then
                'If txtNetAmount.Text <> txtTotalWithGST.Text Then
                lblAlert.Text = "HEADER TOTAL AND DETAIL TOTAL DO NOT MATCH.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub

            End If
            'If Convert.ToDecimal(txtReceiptAmt.Text) <> Convert.ToDecimal(txtReceivedAmount.Text) Then
            '    lblAlert.Text = "RECEIPT AMOUNT AND SUM OF APPLIED SALES ORDERS SHOULD BE EQUAL"
            '    updPnlMsg.Update()
            '    btnSave.Enabled = True
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If


            '''''''''''''''''''''''''''
            SetRowDataBillingDetailsRecs()

            Dim totalRows, totalRows2, totalRows3 As Long
            totalRows = 0
            totalRows2 = 0
            totalRows3 = 0

            Dim totalRows1 As Long
            totalRows1 = 0
            totalRows1 = grvBillingDetailsNew.Rows.Count

            Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd1 IsNot Nothing Then

                If tableAdd1.Rows.Count > 0 Then
                    Dim lblidOtherCode1 As TextBox = CType(grvBillingDetails.Rows(0).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblidItemType1 As DropDownList = CType(grvBillingDetails.Rows(0).FindControl("txtItemTypeGV"), DropDownList)

                    If String.IsNullOrEmpty(lblidOtherCode1.Text) = True And lblidItemType1.Text = "-1" And totalRows1 = 0 Then
                        totalRows = totalRows + 1
                        lblAlert.Text = "PLEASE ENTER RECORDS FOR SALES ORDER DETAILS"
                        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                        'btnShowInvoices.Enabled = False
                        updPnlMsg.Update()
                        btnSaveInvoice.Enabled = True
                        Exit Sub
                    End If
                End If

                For rowIndex1 As Integer = 0 To tableAdd1.Rows.Count - 1
                    Dim lblidOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtOtherCodeGV"), TextBox)
                    Dim lblidItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtItemTypeGV"), DropDownList)
                    Dim lblidServiceRecordNo As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtServiceRecordGV"), TextBox)
                    Dim lblidTaxTypeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex1).FindControl("txtTaxTypeGV"), TextBox)
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectRecGV"), CheckBox)

                    If TextBoxchkSelect.Checked = True Then
                        If lblidItemType.Text = "SERVICE" And String.IsNullOrEmpty(lblidServiceRecordNo.Text.Trim) = True Then
                            lblAlert.Text = "PLEASE ENTER SERVICE RECORD NO. FOR ALL SERVICE ITEM TYPE"
                            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                            updPnlMsg.Update()
                            btnSaveInvoice.Enabled = True
                            Exit Sub
                        End If

                        If String.IsNullOrEmpty(lblidOtherCode.Text) = True And lblidItemType.Text <> "-1" Then
                            totalRows = totalRows + 1
                        End If

                        If ((String.IsNullOrEmpty(lblidTaxTypeGV.Text) = True)) And lblidItemType.Text <> "-1" Then
                            totalRows2 = totalRows2 + 1
                        End If

                        If ((lblidTaxTypeGV.Text) <> (txtGST.Text)) Then
                            totalRows3 = totalRows3 + 1
                        End If
                        ''''''''''''''''''''''''''''''''''''''''''''

                        If String.IsNullOrEmpty(lblidServiceRecordNo.Text.Trim) = False Then
                            Dim lInvoiceNoExists As String

                            lInvoiceNoExists = ""
                            lInvoiceNoExists = IsServiceRecordExists(lblidServiceRecordNo.Text.Trim)

                            If String.IsNullOrEmpty(lInvoiceNoExists.Trim) = False Then
                                lblAlert.Text = "SERVICE RECORD '" & lblidServiceRecordNo.Text.Trim & "' already exists in OPEN Invoice No. '" & lInvoiceNoExists & "'"
                                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                                Exit Sub
                            End If
                        End If
                        ''''''''''''''''''''''''''''''''''''''''''''''''
                    End If

                Next rowIndex1
            End If


            If totalRows > 0 Then
                lblAlert.Text = "PLEASE SELECT GL CODE "
                lblAlert.Focus()
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSaveInvoice.Enabled = True
                Exit Sub
            End If

            If totalRows2 > 0 Then
                lblAlert.Text = "PLEASE SELECT GST CODE "
                lblAlert.Focus()
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSaveInvoice.Enabled = True
                Exit Sub
            End If

            If totalRows3 > 0 Then
                lblAlert.Text = "HEADER AND DETAIL TAX CODE DO NOT MATCH "
                lblAlert.Focus()
                updPnlMsg.Update()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                btnSaveInvoice.Enabled = True
                Exit Sub
            End If

            InsertIntoTblSales()

            SqlDSSalesDetail.SelectCommand = "select SalesOrderNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, SalesOrderType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode from tblSalesOrderDetail where SalesOrderNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()

            CalculateTotal()

            If txtMode.Text = "NEW" Then
                lblMessage.Text = "ADD:  RECORD SUCCESSFULLY ADDED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "ADD", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

                HeaderDetailTotalSalesOrder("AddSave")

                'InsertNewLogDetail()
                If txtPostUponSave.Text = "1" Then
                    IsSuccess = PostInvoice()

                    If IsSuccess = True Then

                        lblAlert.Text = ""
                        updPnlSearch.Update()
                        updPnlMsg.Update()

                        'updpnlServiceRecs.Update()

                        txtRcnoSelected.Text = txtRcno.Text
                        btnQuickSearch_Click(sender, e)

                        lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                        updPnlMsg.Update()

                        btnReverse.Enabled = True
                        btnReverse.ForeColor = System.Drawing.Color.Black


                        btnEdit.Enabled = False
                        btnEdit.ForeColor = System.Drawing.Color.Gray

                        btnDelete.Enabled = False
                        btnDelete.ForeColor = System.Drawing.Color.Gray

                        btnPost.Enabled = False
                        btnPost.ForeColor = System.Drawing.Color.Gray

                        'InsertNewLog()
                    End If

                Else
                    mdlPopupConfirmSavePost.Show()
                End If

            Else
                lblMessage.Text = "EDIT: RECORD SUCCESSFULLY UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "EDIT", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)
                HeaderDetailTotalSalesOrder("EditSave")
                InsertNewLogDetail()
            End If


            lblAlert.Text = ""

            'GridView1.DataSourceID = ""
            grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
            grvBillingDetailsNew.DataBind()


            If String.IsNullOrEmpty(txt.Text.Trim) = True Then
                txt.Text = "SELECT PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, "
                txt.Text = txt.Text & " BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, "
                txt.Text = txt.Text & " AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, "
                txt.Text = txt.Text & " GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringSalesOrder, "
                txt.Text = txt.Text & " ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddBuilding, "
                txt.Text = txt.Text & " CustAddStreet, CustAddCity, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule, Printcounter, Description, EmailSentStatus, EmailsentDate,  Location, ServiceAddress  "
                txt.Text = txt.Text & " FROM tblSalesOrder WHERE 1=1 and SalesOrderNumber = '" & txtInvoiceNo.Text & "'"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    txt.Text = txt.Text & " and Location = '" & txtLocation.Text & "'"
                End If

            End If

            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()

            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            'conn.Close()
            'txtBatchNo.Text = "0"
            btnImportService.Enabled = False

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black


            btnPost.Enabled = True
            btnPost.ForeColor = System.Drawing.Color.Black

            DisableControls()
            'FirstGridViewRowServiceRecs()
            'btnSaveInvoice.Enabled = False

            txtMode.Text = "View"

            grvBillingDetails.Visible = False
            FirstGridViewRowBillingDetailsRecs()
            updPnlMsg.Update()
            updPnlSearch.Update()
            updPanelInvoice.Update()
            tableAdd1.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnSaveInvoice_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub HeaderDetailTotalSalesOrder(Action As String)
        '''''''''''''''''''''''''''''''''''''''''''
        'Dim lStatusIsHeaderDetailEqual As String
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandHeaderDetailTotal As MySqlCommand = New MySqlCommand

            commandHeaderDetailTotal.CommandType = CommandType.StoredProcedure
            commandHeaderDetailTotal.CommandText = "HeaderDetailTotalSalesOrder"
            'commandIsExists.Connection = conn
            commandHeaderDetailTotal.Parameters.Clear()

            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_Module", "SO")
            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_DocumentNo", txtInvoiceNo.Text.Trim)
            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_Action", Action.Trim)
            commandHeaderDetailTotal.Parameters.AddWithValue("@pr_UserID", Session("UserID"))
            'commandHeaderDetailTotal.Parameters.AddWithValue("@pr_DtStamp", Convert.ToDateTime(txtCreatedOn.Text))

            'commandIsHeaderDetailEqual.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            'commandIsHeaderDetailEqual.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandHeaderDetailTotal.Connection = conn
            commandHeaderDetailTotal.ExecuteScalar()

            'lStatusIsHeaderDetailEqual = commandIsHeaderDetailEqual.Parameters("@pr_status").Value

            commandHeaderDetailTotal.Dispose()
            conn.Close()
            conn.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "HeaderDetailTotal", ex.Message.ToString, "")
        End Try

        ''''''''''''''''''''''''''''''''''''''''''
    End Sub
    Protected Sub SaveServiceBillingDetail()
        '''''''''''''''''''''''''''''''''''''''
        Try
            Dim qry As String
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim rowselected As Integer = Convert.ToInt32(txtRowSelected.Text)

            Dim lblid1 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtAccountIdGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtClientNameGV"), TextBox)
            Dim lblid3 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtLocationIdGV"), TextBox)
            Dim lblid4 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceRecordNoGV"), TextBox)
            Dim lblid5 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid6 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtBillingFrequencyGV"), TextBox)
            Dim lblid7 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtRcnoServiceRecordGV"), TextBox)
            Dim lblid8 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtDeptGV"), TextBox)
            Dim lblid9 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtStatusGV"), TextBox)
            Dim lblid20 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtContractNoGV"), TextBox)
            Dim lblid21 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceAddressGV"), TextBox)
            'Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtServiceDateGV"), TextBox)
            Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)

            If txtMode.Text = "NEW" Then

                'Dim command As MySqlCommand = New MySqlCommand
                'command.CommandType = CommandType.Text

                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If

                'If Convert.ToInt64(txtBatchNo.Text) = 0 Then

                '''''''''''''''''''''
                Dim commandExistServiceBillingDetail As MySqlCommand = New MySqlCommand
                commandExistServiceBillingDetail.CommandType = CommandType.Text
                'command1.CommandText = Sql
                commandExistServiceBillingDetail.CommandText = "SELECT * FROM tblServiceBillingDetail where RcnoServiceRecord=" & Convert.ToInt64(lblid7.Text) & " and Batchno = '" & txtBatchNo.Text & "'"
                commandExistServiceBillingDetail.Connection = conn

                Dim drExistServiceBillingDetail As MySqlDataReader = commandExistServiceBillingDetail.ExecuteReader()
                Dim dtExistServiceBillingDetail As New DataTable
                dtExistServiceBillingDetail.Load(drExistServiceBillingDetail)

                If dtExistServiceBillingDetail.Rows.Count = 0 Then

                    '''''''''''''''''''''
                    qry = "INSERT INTO tblServiceBillingDetail( AccountId, CustName, LocationId, Name, RecordNo, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, "
                    qry = qry + " ServiceDate, BillAmount, DiscountAmount,  GSTAmount, TotalWithGST, NetAmount, OurRef,YourRef,ContractNo, PoNo, RcnoServiceRecord, BillingFrequency, Salesman, ContactType, CompanyGroup,   "
                    qry = qry + " ContractGroup, Status, Address1,   "
                    qry = qry + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                    qry = qry + " (@AccountId, @ClientName, @LocationId, @AccountName, @ServiceRecordNo, @BillAddress1, @BillBuilding, @BillStreet, @BillCountry, @BillPostal, "
                    qry = qry + " @ServiceDate, @BillAmount, @DiscountAmount,  @GSTAmount, @TotalWithGST, @NetAmount, @OurRef, @YourRef, @ContractNo, @PoNo, @RcnoServiceRecord, @BillingFrequency, @Salesman, @ContactType, @CompanyGroup,   "
                    qry = qry + " @ContractGroup, @Status,  @Address1,  "
                    qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@AccountId", lblid1.Text)
                    command.Parameters.AddWithValue("@ClientName", lblid2.Text)
                    command.Parameters.AddWithValue("@LocationId", lblid3.Text)
                    command.Parameters.AddWithValue("@AccountName", txtAccountName.Text)
                    command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)
                    command.Parameters.AddWithValue("@Address1", lblid21.Text)
                    command.Parameters.AddWithValue("@BillAddress1", txtBillAddress.Text)
                    command.Parameters.AddWithValue("@BillBuilding", txtBillBuilding.Text)
                    command.Parameters.AddWithValue("@BillStreet", txtBillStreet.Text)
                    command.Parameters.AddWithValue("@BillCountry", txtBillCountry.Text)
                    command.Parameters.AddWithValue("@BillPostal", txtBillPostal.Text)
                    command.Parameters.AddWithValue("@BillingFrequency", lblid6.Text)

                    If lblid5.Text.Trim = "" Then
                        command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                    Else
                        command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                    End If

                    'command.Parameters.AddWithValue("@ServiceDate", lblid5.Text)
                    'Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtToBillAmtGV"), TextBox)
                    Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(rowselected).FindControl("txtGSTAmountGV"), TextBox)
                    'Dim lbd30 As String = TextBoxGSTAmount.Text

                    'If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(lblid23.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", 0.0)
                    '    command.Parameters.AddWithValue("@GSTAmount", 0.0)
                    '    command.Parameters.AddWithValue("@TotalWithGST", 0.0)
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(lblid23.Text))
                    'Else
                    '    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    '    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    '    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    '    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    '    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    'End If


                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))

                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text)
                    'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                    command.Parameters.AddWithValue("@ContractNo", lblid20.Text)
                    'command.Parameters.AddWithValue("@RcnoServiceRecord", txtRcnoServiceRecord.Text)
                    command.Parameters.AddWithValue("@RcnoServiceRecord", lblid7.Text)

                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text)
                    command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)
                    command.Parameters.AddWithValue("@Status", lblid9.Text)
                    command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                    command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()

                    Dim sqlLastId As String
                    sqlLastId = "SELECT last_insert_id() from tblServiceBillingDetail"

                    Dim commandRcno As MySqlCommand = New MySqlCommand
                    commandRcno.CommandType = CommandType.Text
                    commandRcno.CommandText = sqlLastId
                    commandRcno.Parameters.Clear()
                    commandRcno.Connection = conn
                    txtRcnotblServiceBillingDetail.Text = commandRcno.ExecuteScalar()

                    If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                        txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text

                        qry = "Update tblServiceBillingDetail set BatchNo = '" & txtBatchNo.Text & "' where rcno = " & txtBatchNo.Text

                        command.CommandText = qry
                        command.Parameters.Clear()
                        command.Connection = conn
                        command.ExecuteNonQuery()

                    End If
                End If
            Else
                If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
                    txtRcnotblServiceBillingDetail.Text = 0
                End If
                If Convert.ToInt64(txtRcnotblServiceBillingDetail.Text) > 0 Then
                    qry = "Update tblServiceBillingDetail set BillAmount = @BillAmount, DiscountAmount= @DiscountAmount,  GSTAmount =@GSTAmount,  "
                    qry = qry + "TotalWithGST = @TotalWithGST, NetAmount =@NetAmount, OurRef = @OurRef ,YourRef =@YourRef, PoNo =@PoNo, Salesman =@Salesman,    "
                    qry = qry + " LastModifiedBy =@LastModifiedBy,LastModifiedOn = @LastModifiedOn; "

                    command.CommandText = qry
                    command.Parameters.Clear()

                    command.Parameters.AddWithValue("@BillAmount", Convert.ToDecimal(txtTotal.Text))
                    command.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtTotalDiscAmt.Text))
                    command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                    command.Parameters.AddWithValue("@TotalWithGST", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtTotalWithGST.Text))
                    command.Parameters.AddWithValue("@OurRef", txtOurReference.Text)
                    command.Parameters.AddWithValue("@YourRef", txtYourReference.Text)
                    command.Parameters.AddWithValue("@PoNo", txtPONo.Text)

                    If ddlSalesmanBilling.Text = "-1" Then
                        command.Parameters.AddWithValue("@Salesman", "")
                    Else
                        command.Parameters.AddWithValue("@Salesman", ddlSalesmanBilling.Text)
                    End If

                    command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                    command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                    command.Connection = conn
                    command.ExecuteNonQuery()
                End If
            End If


            '''' Detail

            'Dim rowselected As Integer
            'rowselected = 0

            'Dim conn As MySqlConnection = New MySqlConnection()


            'Start: Delete existing Records

            'If String.IsNullOrEmpty(txtRcnotblServiceBillingDetail.Text) = True Then
            '    txtRcnotblServiceBillingDetail.Text = "0"
            'End If

            'If txtRcnotblServiceBillingDetail.Text <> "0" Then '04.01.17

            Dim commandtblServiceBillingDetailItem As MySqlCommand = New MySqlCommand

            commandtblServiceBillingDetailItem.CommandType = CommandType.Text
            'Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
            Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where RcnoServiceBillingDetail = '" & Convert.ToInt32(txtRcnotblServiceBillingDetail.Text) & "'"

            commandtblServiceBillingDetailItem.CommandText = qrycommandtblServiceBillingDetailItem
            commandtblServiceBillingDetailItem.Parameters.Clear()
            commandtblServiceBillingDetailItem.Connection = conn
            commandtblServiceBillingDetailItem.ExecuteNonQuery()

            'End: Delete Existing Records


            SetRowDataServiceRecs()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)

            If tableAdd IsNot Nothing Then

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                    Dim lbd10 As String = TextBoxQty.Text



                    Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemTypeGV"), DropDownList)
                    Dim TextBoxItemCodeGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemCodeGV"), DropDownList)
                    Dim TextBoxItemDescriptionGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtItemDescriptionGV"), TextBox)
                    Dim TextBoxUOMGV As DropDownList = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtUOMGV"), DropDownList)
                    Dim TextBoxPricePerUOMGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                    Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                    Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                    Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtGLDescriptionGV"), TextBox)
                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtContractNoGV"), TextBox)
                    Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).FindControl("txtServiceStatusGV"), TextBox)

                    If String.IsNullOrEmpty(lbd10) = False Then
                        If (Convert.ToInt64(lbd10) > 0) Then

                            ''Start:Detail
                            Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                            commandSalesDetail.CommandType = CommandType.Text
                            Dim qryDetail As String = "INSERT INTO tblServiceBillingDetailItem(RcnoServiceBillingDetail,Itemtype, ItemCode, Itemdescription, UOM, Qty,  "
                            qryDetail = qryDetail + " PricePerUOM, TotalPrice,DiscPerc, DiscAmount, PriceWithDisc, GSTPerc, GSTAmt, TotalPriceWithGST, TaxType, ARCode, GSTCode, OtherCode, GLDescription,  RcnoServiceRecord, BatchNo,  CompanyGroup, ContractNo, ServiceStatus, ContractGroup, ServiceRecordNo, ServiceDate,"
                            qryDetail = qryDetail + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                            qryDetail = qryDetail + "(@RcnoServiceBillingDetail, @Itemtype, @ItemCode, @Itemdescription, @UOM, @Qty,"
                            qryDetail = qryDetail + " @PricePerUOM, @TotalPrice, @DiscPerc, @DiscAmount, @PriceWithDisc, @GSTPerc, @GSTAmt, @TotalPriceWithGST, @TaxType, @ARCode, @GSTCode,  @OtherCode,@GLDescription, @RcnoServiceRecord, @BatchNo, @CompanyGroup, @ContractNo,  @ServiceStatus, @ContractGroup, @ServiceRecordNo, @ServiceDate,"
                            qryDetail = qryDetail + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                            command.CommandText = qryDetail
                            command.Parameters.Clear()

                            command.Parameters.AddWithValue("@RcnoServiceBillingDetail", Convert.ToInt64(txtRcnotblServiceBillingDetail.Text))
                            command.Parameters.AddWithValue("@Itemtype", TextBoxItemTypeGV.Text)
                            command.Parameters.AddWithValue("@ItemCode", TextBoxItemCodeGV.Text)
                            command.Parameters.AddWithValue("@Itemdescription", TextBoxItemDescriptionGV.Text)

                            If TextBoxUOMGV.Text <> "-1" Then
                                command.Parameters.AddWithValue("@UOM", TextBoxUOMGV.Text)

                            Else
                                command.Parameters.AddWithValue("@UOM", "")
                            End If

                            command.Parameters.AddWithValue("@Qty", TextBoxQty.Text)
                            command.Parameters.AddWithValue("@PricePerUOM", TextBoxPricePerUOMGV.Text)
                            'command.Parameters.AddWithValue("@BillAmount", 0.0)
                            command.Parameters.AddWithValue("@TotalPrice", Convert.ToDecimal(TextBoxTotalPrice.Text))
                            command.Parameters.AddWithValue("@DiscPerc", Convert.ToDecimal(TextBoxDiscPerc.Text))
                            command.Parameters.AddWithValue("@DiscAmount", Convert.ToDecimal(TextBoxDiscAmount.Text))
                            command.Parameters.AddWithValue("@PriceWithDisc", Convert.ToDecimal(TextBoxTotalPriceWithDisc.Text))
                            command.Parameters.AddWithValue("@GSTPerc", Convert.ToDecimal(TextBoxGSTPerc.Text))
                            command.Parameters.AddWithValue("@GSTAmt", Convert.ToDecimal(TextBoxGSTAmt.Text))
                            command.Parameters.AddWithValue("@TotalPriceWithGST", Convert.ToDecimal(TextBoxTotalPriceWithGST.Text))
                            command.Parameters.AddWithValue("@TaxType", TextBoxTaxType.Text)
                            command.Parameters.AddWithValue("@RcnoServiceRecord", Convert.ToInt64(lblid7.Text))
                            command.Parameters.AddWithValue("@ARCode", "")
                            command.Parameters.AddWithValue("@GSTCode", "")
                            command.Parameters.AddWithValue("@OtherCode", TextBoxOtherCode.Text)
                            command.Parameters.AddWithValue("@GLDescription", TextBoxGLDescription.Text)
                            command.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)

                            'command.Parameters.AddWithValue("@ContractNo", txtContractNo.Text)
                            command.Parameters.AddWithValue("@ContractNo", TextBoxContractNo.Text)
                            command.Parameters.AddWithValue("@ServiceStatus", TextBoxServiceStatus.Text)
                            command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                            command.Parameters.AddWithValue("@ContractGroup", lblid8.Text)

                            command.Parameters.AddWithValue("@ServiceRecordNo", lblid4.Text)

                            If lblid5.Text.Trim = "" Then
                                command.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                            Else
                                command.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lblid5.Text).ToString("yyyy-MM-dd"))
                            End If
                            command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                            'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                            command.Connection = conn
                            command.ExecuteNonQuery()
                            'conn.Close()
                        End If

                    End If
                Next rowIndex
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION SaveServiceBillingDetail", ex.Message.ToString, "")
        End Try
    End Sub
    'Protected Sub txtTaxTypeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    Try
    '        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
    '        xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)


    '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '        Dim lblid1 As DropDownList = CType(ddl1.FindControl("txtTaxTypeGV"), DropDownList)
    '        Dim lblid2 As TextBox = CType(ddl1.FindControl("txtGSTPercGV"), TextBox)


    '        'lTargetDesciption = lblid1.Text

    '        'Dim rowindex1 As Integer = ddl1.RowIndex

    '        Dim conn1 As MySqlConnection = New MySqlConnection(constr)
    '        conn1.Open()

    '        Dim commandGST As MySqlCommand = New MySqlCommand
    '        commandGST.CommandType = CommandType.Text
    '        commandGST.CommandText = "SELECT TaxRatePct FROM tbltaxtype where TaxType='" & lblid1.Text & "'"
    '        commandGST.Connection = conn1

    '        Dim drGST As MySqlDataReader = commandGST.ExecuteReader()
    '        Dim dtGST As New DataTable
    '        dtGST.Load(drGST)

    '        If dtGST.Rows.Count > 0 Then
    '            lblid2.Text = dtGST.Rows(0)("TaxRatePct").ToString

    '            CalculatePrice()
    '            'If dtGST.Rows(0)("GST").ToString = "P" Then
    '            '    lblAlert.Text = "SCHEUDLE HAS ALREADY BEEN GENERATED"
    '            '    conn1.Close()
    '            '    Exit Sub
    '            'End If
    '        End If

    '        conn1.Close()
    '        conn1.Dispose()
    '        commandGST.Dispose()
    '        dtGST.Dispose()

    '    Catch ex As Exception
    '        Dim exstr As String
    '        exstr = ex.Message.ToString
    '        lblAlert.Text = exstr
    '        'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
    '        InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION txtTaxTypeGV_SelectedIndexChanged", ex.Message.ToString, "")
    '    End Try
    'End Sub


    
    Public Function HighlightDuplicate(ByVal gridview As GridView) As Boolean
        HasDuplicateServiceRecord = False
        For currentRow As Integer = 0 To gridview.Rows.Count - 2
            Dim rowToCompare As GridViewRow = gridview.Rows(currentRow)

            For otherRow As Integer = currentRow + 1 To gridview.Rows.Count - 1
                Dim row As GridViewRow = gridview.Rows(otherRow)
                Dim duplicateRow As Boolean = False
                Dim TextBoxTargetDescGV As TextBox = CType(grvBillingDetails.Rows(currentRow).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                Dim TextBoxTargetDescGV1 As TextBox = CType(grvBillingDetails.Rows(otherRow).Cells(0).FindControl("txtServiceRecordGV"), TextBox)



                If ((TextBoxTargetDescGV.Text) = (TextBoxTargetDescGV1.Text)) Then

                    If String.IsNullOrEmpty(TextBoxTargetDescGV.Text) = True And String.IsNullOrEmpty(TextBoxTargetDescGV1.Text) = True Then
                        GoTo nextrec
                    End If

                        If TextBoxTargetDescGV.Text = "-1" And TextBoxTargetDescGV1.Text = "-1" Then
                            GoTo nextrec
                        End If

                        duplicateRow = True

                        TextBoxTargetDescGV.BackColor = Drawing.Color.LightCoral
                        TextBoxTargetDescGV1.BackColor = Drawing.Color.LightCoral

                        HasDuplicateServiceRecord = True
                        Return HasDuplicateServiceRecord

                    Else
                        TextBoxTargetDescGV.BackColor = Drawing.Color.White
                        TextBoxTargetDescGV1.BackColor = Drawing.Color.White
                        duplicateRow = False
                        HasDuplicateServiceRecord = False
                    End If

nextrec:
            Next otherRow
        Next currentRow

        Return HasDuplicateServiceRecord
    End Function

    'Protected Sub txtServiceRecordGV_SelectedIndexChanged(sender As Object, e As EventArgs)
    '    lblAlert.Text = ""
    '    updPnlMsg.Update()

    '    Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

    '    Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
    '    Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtServiceRecordGV"), DropDownList)
    '    Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceStatusGV"), TextBox)
    '    Dim lblid3 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
    '    Dim lblid4 As DropDownList = CType(xrow1.FindControl("txtItemCodeGV"), DropDownList)

    '    Dim lblid5 As DropDownList = CType(xrow1.FindControl("txtUOMGV"), DropDownList)
    '    Dim lblid6 As TextBox = CType(xrow1.FindControl("txtQtyGV"), TextBox)
    '    Dim lblid7 As TextBox = CType(xrow1.FindControl("txtPricePerUOMGV"), TextBox)

    '    Dim lblid8 As TextBox = CType(xrow1.FindControl("txtTotalPriceGV"), TextBox)
    '    Dim lblid9 As TextBox = CType(xrow1.FindControl("txtDiscPercGV"), TextBox)
    '    Dim lblid10 As TextBox = CType(xrow1.FindControl("txtDiscAmountGV"), TextBox)

    '    Dim lblid11 As TextBox = CType(xrow1.FindControl("txtPriceWithDiscGV"), TextBox)
    '    Dim lblid12 As DropDownList = CType(xrow1.FindControl("txtTaxTypeGV"), DropDownList)
    '    Dim lblid13 As TextBox = CType(xrow1.FindControl("txtGSTPercGV"), TextBox)

    '    Dim lblid14 As TextBox = CType(xrow1.FindControl("txtGSTAmtGV"), TextBox)
    '    Dim lblid15 As TextBox = CType(xrow1.FindControl("txtTotalPriceWithGSTGV"), TextBox)
    '    Dim lblid16 As TextBox = CType(xrow1.FindControl("txtLocationIdGV"), TextBox)

    '    Dim lblid17 As TextBox = CType(xrow1.FindControl("txtServiceLocationGroupGV"), TextBox)
    '    Dim lblid18 As TextBox = CType(xrow1.FindControl("txtBillingFrequencyGV"), TextBox)
    '    Dim lblid19 As TextBox = CType(xrow1.FindControl("txtServiceByGV"), TextBox)
    '    Dim lblid20 As TextBox = CType(xrow1.FindControl("txtItemDescriptionGV"), TextBox)

    '    Dim lblid21 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)
    '    Dim lblid22 As TextBox = CType(xrow1.FindControl("txtServiceDateGV"), TextBox)

    '    Dim lblid23 As TextBox = CType(xrow1.FindControl("txtRcnoInvoiceGV"), TextBox)
    '    Dim lblid24 As TextBox = CType(xrow1.FindControl("txtRcnoServiceRecordGV"), TextBox)



    '    Dim rowindex1 As Integer = xrow1.RowIndex

    '    '''''''''''''''''Duplicate

    '    HasDuplicateServiceRecord = HighlightDuplicate(grvBillingDetails)

    '    txtDuplicateServiceRecord.Text = "N"
    '    txtRecordAdded.Text = "N"

    '    If HasDuplicateServiceRecord = True Then
    '        txtDuplicateServiceRecord.Text = "Y"
    '        lblAlert.Text = "Duplicate Service Record has been selected"
    '        updPnlMsg.Update()
    '        Exit Sub
    '    End If
    '    ''''''''''''''''Duplicate

    '    Dim conn As MySqlConnection = New MySqlConnection()

    '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
    '    'Dim conn As MySqlConnection = New MySqlConnection(constr)
    '    conn.Open()

    '    Dim command1 As MySqlCommand = New MySqlCommand
    '    command1.CommandType = CommandType.Text
    '    command1.CommandText = "SELECT Rcno, Status, ContractNo, Description, ServiceDate, BillAmount, BilledAmt, TotalCreditAmount, LocationID, ServiceLocationGroup, Notes, ServiceBy FROM tblservicerecord where RecordNo =@RecordNo"
    '    command1.Parameters.AddWithValue("@RecordNo", lblid1.Text.Trim)
    '    command1.Connection = conn

    '    Dim dr As MySqlDataReader = command1.ExecuteReader()
    '    Dim dt As New DataTable
    '    dt.Load(dr)

    '    If dt.Rows.Count > 0 Then
    '        lblid2.Text = dt.Rows(0)("Status").ToString()
    '        lblid3.Text = dt.Rows(0)("ContractNo").ToString()
    '        lblid20.Text = lblid1.Text & ", " & Convert.ToDateTime(dt.Rows(0)("ServiceDate")).ToString("dd/MM/yyyy") & ", " & dt.Rows(0)("Notes").ToString()

    '    End If

    '    Dim command2 As MySqlCommand = New MySqlCommand
    '    command2.CommandType = CommandType.Text

    '    'If lblid25.Text = "P" Then
    '    '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
    '    'ElseIf lblid25.Text = "O" Then
    '    '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
    '    'End If

    '    If String.IsNullOrEmpty(lblid3.Text) = False Then
    '        If lblid2.Text = "P" Then
    '            command2.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
    '        ElseIf lblid2.Text = "O" Then
    '            command2.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
    '        End If
    '    Else
    '        command2.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-COO'"
    '    End If

    '    command2.Connection = conn

    '    Dim dr1 As MySqlDataReader = command2.ExecuteReader()
    '    Dim dt1 As New DataTable
    '    dt1.Load(dr1)

    '    lblid4.Text = dt1.Rows(0)("ProductCode").ToString()
    '    lblid5.Text = "NO"

    '    lblid6.Text = "1"
    '    lblid7.Text = dt.Rows(0)("BillAmount").ToString() - dt.Rows(0)("BilledAmt").ToString() - dt.Rows(0)("TotalCreditAmount").ToString()
    '    lblid8.Text = dt.Rows(0)("BillAmount").ToString() - dt.Rows(0)("BilledAmt").ToString() - dt.Rows(0)("TotalCreditAmount").ToString()
    '    lblid9.Text = "0.00"
    '    lblid10.Text = "0.00"

    '    lblid11.Text = dt.Rows(0)("BillAmount").ToString() - dt.Rows(0)("BilledAmt").ToString() - dt.Rows(0)("TotalCreditAmount").ToString()
    '    'lblid12.Text As DropDownList = CType(xrow1.FindControl("txtTaxTypeGV"), DropDownList)
    '    'lblid13.Text As TextBox = CType(xrow1.FindControl("txtGSTPercGV"), TextBox)

    '    lblid14.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid11.Text) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2"))
    '    lblid15.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid11.Text) + Convert.ToDecimal(lblid14.Text)).ToString("N2"))
    '    lblid16.Text = dt.Rows(0)("LocationID").ToString()

    '    lblid17.Text = dt.Rows(0)("ServiceLocationGroup").ToString()
    '    lblid24.Text = dt.Rows(0)("Rcno").ToString()

    '    lblid19.Text = dt.Rows(0)("ServiceBy").ToString()
    '    lblid22.Text = dt.Rows(0)("ServiceDate").ToString()


    '    'lblid20.Text

    '    lblid21.Text = dt1.Rows(0)("COACode").ToString()
    '    'lblid22.Text = dt1.Rows(0)("COADescription").ToString()
    '    'lblid24.Text = dt1.Rows(0)("Rcno").ToString()



    '    Dim command3 As MySqlCommand = New MySqlCommand
    '    command3.CommandType = CommandType.Text
    '    command3.CommandText = "SELECT BillingFrequency FROM tblContract where ContractNo =@ContractNo"
    '    command3.Parameters.AddWithValue("@ContractNo", lblid3.Text.Trim)
    '    command3.Connection = conn

    '    Dim dr3 As MySqlDataReader = command3.ExecuteReader()
    '    Dim dt3 As New DataTable
    '    dt3.Load(dr3)

    '    If dt3.Rows.Count > 0 Then
    '        lblid18.Text = dt3.Rows(0)("BillingFrequency").ToString()
    '    End If

    '    CalculateTotalPrice()



    '    ''''''''''''''''''''''''
    '    'If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
    '    '    btnAddDetail_Click(sender, e)
    '    '    txtRecordAdded.Text = "Y"
    '    'End If

    '    ''''''''''''''''''''''''''''


    'End Sub

    
    Protected Sub txtItemTypeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
            Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)
           

            If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
                lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
                lblid1.SelectedIndex = 0
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                updPnlMsg.Update()
                Exit Sub
            End If

            If ddlContractGroupBilling.SelectedIndex = 0 Then
                lblAlert.Text = "PLEASE SELECT CONTRCT GROUP"
                lblid1.SelectedIndex = 0
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                updPnlMsg.Update()
                Exit Sub
            End If


            Dim rowindex1 As Integer = xrow1.RowIndex
            Dim ItemCode As String
            ItemCode = ""

            ''''''''''''''''''''''''
            If lblid1.Text = "STOCK" Then
                ItemCode = "IN-SLS"
            ElseIf lblid1.Text = "SERVICE" Then
                ItemCode = "IN-SRV"
            End If

            Dim lblid2 As TextBox = CType(xrow1.FindControl("txtServiceRecordGV"), TextBox)
            Dim lblid3 As TextBox = CType(xrow1.FindControl("txtContractNoGV"), TextBox)
            Dim lblid11 As TextBox = CType(xrow1.FindControl("txtServiceStatusGV"), TextBox)

            Dim lblidItemDescription As TextBox = CType(xrow1.FindControl("txtItemDescriptionGV"), TextBox)
            Dim lblidItemCode As DropDownList = CType(xrow1.FindControl("txtItemCodeGV"), DropDownList)

            Dim lblid4 As TextBox = CType(xrow1.FindControl("txtQtyGV"), TextBox)
            Dim lblid5 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid6 As TextBox = CType(xrow1.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid7 As TextBox = CType(xrow1.FindControl("txtGSTPercGV"), TextBox)
            Dim lblid8 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)
            'Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtServiceDateGV"), TextBox)  ''''??????
            Dim lblid9 As TextBox = CType(xrow1.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid10 As TextBox = CType(xrow1.FindControl("txtGLDescriptionGV"), TextBox)

            Dim lblid12 As ImageButton = CType(xrow1.FindControl("BtnContractGV"), ImageButton)

            If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
                'If txtDuplicateServiceRecord.Text = "N" Then
                btnAddDetail_Click(sender, e)

                lblid6.Text = txtGST.Text
                'lblid7.Text = txtTaxRatePct.Text
                lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")
            
            Else
                If lblid1.Text = "STOCK" Or lblid1.Text = "OTHERS" Then
                    'lblidItemCode.Enabled = False
                    lblid2.Enabled = False
                    lblid2.Text = ""
                    lblid3.Enabled = True
                    lblid3.Text = ""
                    lblid11.Enabled = False
                    lblid11.Text = ""
                    lblid12.Enabled = True
                ElseIf lblid1.Text = "SERVICE" Then
                    lblidItemCode.Enabled = True
                    lblid2.Enabled = True
                    lblid12.Enabled = False
                    lblid6.Text = txtGST.Text
                    'lblid7.Text = txtTaxRatePct.Text
                    lblid7.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")
                End If
            End If

          

            'CalculateTotalPrice()

          
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION txtItemTypeGV_SelectedIndexChanged", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub txtItemCodeGV_SelectedIndexChanged(sender As Object, e As EventArgs)
        Try
            'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

            'Dim xgrvBillingDetails As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)

            Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)
            xgrvBillingDetails = CType(ddl1.NamingContainer, GridViewRow)

            Dim lblid1 As DropDownList = CType(xgrvBillingDetails.FindControl("txtItemCodeGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtItemDescriptionGV"), TextBox)
            'Dim lblid1 As DropDownList = CType(xgrvBillingDetails.FindControl("txtDescriptionGV"), DropDownList)
            'Dim lblid2 As TextBox = CType(xgrvBillingDetails.FindControl("txtItemCodeGV"), TextBox)

            Dim lblid3 As TextBox = CType(xgrvBillingDetails.FindControl("txtPricePerUOMGV"), TextBox)
            Dim lblid4 As TextBox = CType(xgrvBillingDetails.FindControl("txtQtyGV"), TextBox)
            Dim lblid5 As TextBox = CType(xgrvBillingDetails.FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid6 As TextBox = CType(xgrvBillingDetails.FindControl("txtTaxTypeGV"), TextBox)
            Dim lblid7 As TextBox = CType(xgrvBillingDetails.FindControl("txtGSTPercGV"), TextBox)
            Dim lblid8 As DropDownList = CType(xgrvBillingDetails.FindControl("txtItemTypeGV"), DropDownList)
            'Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtServiceDateGV"), TextBox)  ''''??????
            Dim lblid9 As TextBox = CType(xgrvBillingDetails.FindControl("txtDescriptionGV"), TextBox)
            Dim lblid10 As TextBox = CType(xgrvBillingDetails.FindControl("txtGLDescriptionGV"), TextBox)
            'lTargetDesciption = lblid1.Text

            Dim rowindex1 As Integer = xgrvBillingDetails.RowIndex

            'Get Item desc, price Id

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            'command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and  ProductCode = '" & lblid1.Text & "'"
            command1.CommandText = "SELECT * FROM tblbillingproducts where   Description = '" & lblid1.Text & "'"
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                lblid2.Text = dt.Rows(0)("ProductCode").ToString

                If lblid8.Text = "STOCK" Then
                    lblid3.Text = dt.Rows(0)("Price").ToString
                End If
                lblid4.Text = 1
                lblid5.Text = dt.Rows(0)("COACode").ToString
                lblid6.Text = dt.Rows(0)("TaxType").ToString
                lblid7.Text = Convert.ToDecimal(dt.Rows(0)("TaxRate").ToString).ToString("N2")
                lblid10.Text = dt.Rows(0)("COADescription").ToString

                CalculatePrice()
            End If

            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            'If rowindex1 = grvBillingDetails.Rows.Count - 1 Then
            '    btnAddDetail_Click(sender, e)
            '    'txtRecordAdded.Text = "Y"
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION txtItemCodeGV_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub grvBillingDetails_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles grvBillingDetails.RowCommand

        'If (e.CommandName = "Delete") Then
        '    ' Retrieve the row index stored in the CommandArgument property.
        '    Dim index As Integer = Convert.ToInt32(e.CommandArgument)

        '    ' Retrieve the row that contains the button 
        '    ' from the Rows collection.
        '    Dim row As GridViewRow = grvBillingDetails.Rows(index)

        '    'Dim button As ImageButton = TryCast(Control, ImageButton)
        '    'If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
        '    '    'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
        '    '    button.OnClientClick = "Confirm()"
        '    'End If

        '    'Button.OnClientClick = "Confirm()"
        '    ' Add code here to add the item to the shopping cart.
        '    'Dim btn As Button = CType(sender, Button)

        '    'Get the row that contains this button
        '    Dim btn As Button
        '    'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        '    Dim xrow1 As GridViewRow = CType(btn.NamingContainer, GridViewRow)
        '    btn.OnClientClick = "Confirm()"
        'End If

    End Sub

    Protected Sub grvBillingDetails_RowDeleting(sender As Object, e As GridViewDeleteEventArgs) Handles grvBillingDetails.RowDeleting
        Try

            'If txtRecordDeleted.Text = "Y" Then
            '    txtRecordDeleted.Text = "N"
            '    Exit Sub
            'End If

            lblAlert.Text = ""
            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then

                SetRowDataBillingDetailsRecs()
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)

             

                If dt.Rows.Count > 0 Then
                    dt.Rows.Remove(dt.Rows(rowIndex))
                    drCurrentRow = dt.NewRow()
                    ViewState("CurrentTableBillingDetailsRec") = dt
                    grvBillingDetails.DataSource = dt
                    grvBillingDetails.DataBind()

                    'SetPreviousData()
                    SetPreviousDataBillingDetailsRecs()

                    If dt.Rows.Count = 0 Then
                        FirstGridViewRowBillingDetailsRecs()
                    End If

                    If txtRecordAdded.Text = "N" Then
                        btnAddDetail_Click(sender, e)
                    End If

                    txtRecordDeleted.Text = "Y"
                    ''''''''''''''''''''''

                End If

                CalculateTotalPrice()

            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "grvBillingDetails_RowDeleting", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub grvBillingDetails_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvBillingDetails.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                'Delete()

                For Each cell As DataControlFieldCell In e.Row.Cells
                    ' check all cells in one row
                    For Each control As Control In cell.Controls

                        Dim button As ImageButton = TryCast(control, ImageButton)
                        If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                            'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                            button.OnClientClick = "Confirm()"
                        End If
                    Next control


                Next cell

            End If



        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub gvLocation_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvLocation.SelectedIndexChanged
        'Dim lblid1 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("ddlLocationIdGV"), TextBox)
        'Dim lblid2 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceNameGV"), TextBox)
        'Dim lblid3 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtServiceAddressGV"), TextBox)
        'Dim lblid4 As TextBox = CType(grvServiceLocation.Rows(0).FindControl("txtZoneGV"), TextBox)

        txtIsPopup.Text = ""

        If gvLocation.SelectedRow.Cells(1).Text = "&nbsp;" Then
            txtLocationId.Text = " "
        Else
            txtLocationId.Text = gvLocation.SelectedRow.Cells(1).Text
            'lblid1.Text = txtLocationId.Text
        End If

        If gvLocation.SelectedRow.Cells(2).Text = "&nbsp;" Then
            txtClientName.Text = " "
        Else
            txtClientName.Text = Server.HtmlDecode(gvLocation.SelectedRow.Cells(2).Text)
            'lblid2.Text = txtServiceName.Text
        End If
        txtIsPopup.Text = "Location"
        mdlImportServices.Show()
    End Sub

    Protected Sub btnSearch1Status_Click(sender As Object, e As ImageClickEventArgs) Handles btnSearch1Status.Click
        mdlPopupStatusSearch.Show()
    End Sub

    Protected Sub btnStatusSearch_Click(sender As Object, e As EventArgs) Handles btnStatusSearch.Click
        Try
            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch.Items
                If item.Selected Then
                    YrStrList.Add(item.Value)
                End If
            Next

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())

            txtSearch1Status.Text = YrStr
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            lblAlert.Text = exstr
            'Dim message As String = "alert('" + exstr + "')"
            'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        End Try
    End Sub

    Protected Sub txtAccountId_TextChanged(sender As Object, e As EventArgs) Handles txtAccountId.TextChanged
        If Len(txtAccountId.Text) > 2 Then
            txtAccountId.AutoPostBack = True
            btnClient_Click(sender, New ImageClickEventArgs(0, 0))
        Else
            txtAccountId.AutoPostBack = False
        End If
    End Sub

    Protected Sub btnQuickReset_Click(sender As Object, e As EventArgs) Handles btnQuickReset.Click
        Try
          
            txtInvoicenoSearch.Text = ""
            txtAccountIdSearch.Text = ""
            'txtBillingPeriodSearch.Text = ""
            txtClientNameSearch.Text = ""
            ddlCompanyGrpSearch.SelectedIndex = 0
            'txtBillSchedule.Text = ""
            txtSearch1Status.Text = "O,P"
            'ddlCompanyGrpSearch.SelectedIndex = 0
            ddlBranch.SelectedIndex = 0
            txtCommentsSearch.Text = ""
            txtInvoiceDateFromSearch.Text = ""
            txtInvoiceDateToSearch.Text = ""

            'btnQuickSearch_Click(sender, e)


        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
        'btnSearch1Status_Click(sender, e)
    End Sub




    Private Sub FirstGridViewRowGL()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("GLCode", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))
            dt.Columns.Add(New DataColumn("DebitAmount", GetType(String)))
            dt.Columns.Add(New DataColumn("CreditAmount", GetType(String)))

            dr = dt.NewRow()

            dr("GLCode") = String.Empty
            dr("GLDescription") = String.Empty
            dr("DebitAmount") = String.Empty
            dr("CreditAmount") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableGL") = dt

            grvGL.DataSource = dt
            grvGL.DataBind()

            'Dim btnAdd As Button = CType(grvServiceRecDetails.FooterRow.Cells(1).FindControl("btnViewEdit"), Button)
            'Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub




    Private Sub AddNewRowGL()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)
                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableGL") = dtCurrentTable

                    grvGL.DataSource = dtCurrentTable
                    grvGL.DataBind()


                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub AddNewRowWithDetailRecGL()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String
            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If TotDetailRecords > 0 Then
                    For i As Integer = 1 To (dtCurrentTable.Rows.Count)

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text

                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableGL") = dtCurrentTable

                    grvBillingDetails.DataSource = dtCurrentTable
                    grvBillingDetails.DataBind()
                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetPreviousDataGL()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        TextBoxGLCode.Text = dt.Rows(i)("GLCode").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        TextBoxDebitAmount.Text = dt.Rows(i)("DebitAmount").ToString()
                        TextBoxCreditAmount.Text = dt.Rows(i)("CreditAmount").ToString()


                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Private Sub SetRowDataGL()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableGL") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableGL"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxGLCode As TextBox = CType(grvGL.Rows(rowIndex).Cells(0).FindControl("txtGLCodeGV"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvGL.Rows(rowIndex).Cells(1).FindControl("txtGLDescriptionGV"), TextBox)
                        Dim TextBoxDebitAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(2).FindControl("txtDebitAmountGV"), TextBox)
                        Dim TextBoxCreditAmount As TextBox = CType(grvGL.Rows(rowIndex).Cells(3).FindControl("txtCreditAmountGV"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("GLCode") = TextBoxGLCode.Text
                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text
                        dtCurrentTable.Rows(i - 1)("DebitAmount") = TextBoxDebitAmount.Text
                        dtCurrentTable.Rows(i - 1)("CreditAmount") = TextBoxCreditAmount.Text


                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableGL") = dtCurrentTable
                    dtCurrentTable.Dispose()

                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataGL()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try

    End Sub

    Protected Sub grvServiceRecDetails_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvServiceRecDetails.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then

            'Dim status1 As TextBox = CType(e.Row.FindControl("txtStatusGV"), TextBox)
            ''status1.ForeColor = Color.Red


            'If status1.Text = "P" Then
            '    e.Row.ForeColor = Color.Red
            '    'e.Row.Cells(7).Text = "IN"
            '    'e.Row.Cells(2).BackColor = Color.Blue
            '    'status1.ForeColor = Color.Red
            '    'e.Row.Cells(7).ForeColor = Color.Red
            'End If

            'For Each cell As DataControlFieldCell In e.Row.Cells
            '    ' check all cells in one row
            '    For Each control As Control In cell.Controls

            '        Dim abc As TextBox = TryCast(e.Row.FindControl("txtStatusGV"), TextBox)

            '        If abc.Text = "P" Then
            '            e.Row.Cells(7).ForeColor = Drawing.Color.Blue

            '        End If
            '    Next control
            'Next cell
        End If
    End Sub



    Protected Sub btnPost_Click(sender As Object, e As EventArgs) Handles btnPost.Click
        lblAlert.Text = ""
        lblMessage.Text = ""

        Try
            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                lblAlert.Text = "PLEASE SELECT A REORD"
                Exit Sub

            End If

            If String.IsNullOrEmpty(txtCreditDays.Text) = True Then
                txtCreditDays.Text = "0"
            End If

            Dim IsLock = FindSOPeriod(txtBillingPeriod.Text)
            'If IsLock = "Y" Then
            '    lblAlert.Text = "PERIOD IS LOCKED"
            '    updPnlMsg.Update()
            '    txtInvoiceDate.Focus()
            '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '    Exit Sub
            'End If

            mdlPopupConfirmPost.Show()

            Exit Sub

            'Dim confirmValue As String
            'confirmValue = ""



            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            ''''''''''''''' Insert tblAR

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            'conn.Open()


            ' ''''''''''''''
            'Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            'commandUpdateInvoice.CommandType = CommandType.Text
            'Dim sqlUpdateInvoice As String = "Update tblsales set PostStatus = 'P'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            'commandUpdateInvoice.CommandText = sqlUpdateInvoice
            'commandUpdateInvoice.Parameters.Clear()
            'commandUpdateInvoice.Connection = conn
            'commandUpdateInvoice.ExecuteNonQuery()


            ' '''''''''''''''
            'Dim command1 As MySqlCommand = New MySqlCommand
            'command1.CommandType = CommandType.Text

            'Dim qry1 As String = "DELETE from tblAR where VoucherNumber = '" & txtInvoiceNo.Text & "'"

            'command1.CommandText = qry1
            ''command1.Parameters.Clear()
            'command1.Connection = conn
            'command1.ExecuteNonQuery()

            'Dim qryAR As String
            'Dim commandAR As MySqlCommand = New MySqlCommand
            'commandAR.CommandType = CommandType.Text

            'If Convert.ToDecimal(txtNetAmount.Text) > 0.0 Then
            '    qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, DueDate, GLtype, BillingPeriod, InvoiceType, SalesMan, "
            '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName, @DueDate, @GLtype, @BillingPeriod, @InvoiceType, @SalesMan,"
            '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '    commandAR.CommandText = qryAR
            '    commandAR.Parameters.Clear()
            '    commandAR.Parameters.AddWithValue("@VoucherNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)

            '    commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '    If txtInvoiceDate.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '    Else
            '        commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
            '    End If
            '    commandAR.Parameters.AddWithValue("@BillingPeriod", txtBillingPeriod.Text)

            '    commandAR.Parameters.AddWithValue("@ContractNo", "")
            '    commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@GLCode", txtARCode.Text)
            '    commandAR.Parameters.AddWithValue("@GLDescription", txtARDescription.Text)
            '    commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtNetAmount.Text))
            '    commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
            '    commandAR.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            '    commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '    commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
            '    commandAR.Parameters.AddWithValue("@DueDate", Convert.ToDateTime(txtInvoiceDate.Text).AddDays(Convert.ToInt64(txtCreditDays.Text)).ToString("yyyy-MM-dd"))
            '    commandAR.Parameters.AddWithValue("@GLType", "Debtor")
            '    commandAR.Parameters.AddWithValue("@InvoiceType", "Service")
            '    If ddlSalesmanBilling.SelectedIndex > 0 Then
            '        commandAR.Parameters.AddWithValue("@SalesMan", ddlSalesmanBilling.Text)
            '    Else
            '        commandAR.Parameters.AddWithValue("@SalesMan", "")
            '    End If
            '    'commandAR.Parameters.AddWithValue("@ItemType", "")
            '    commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '    commandAR.Connection = conn
            '    commandAR.ExecuteNonQuery()
            'End If

            'If Convert.ToDecimal(txtGSTAmount.Text) > 0.0 Then
            '    qryAR = "INSERT INTO tblAR( VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup,  ContractNo, ModuleName, BillingPeriod, InvoiceType, SalesMan, GLType, "
            '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ModuleName, @BillingPeriod, @InvoiceType, @SalesMan, @GLType,"
            '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '    commandAR.CommandText = qryAR
            '    commandAR.Parameters.Clear()

            '    commandAR.Parameters.AddWithValue("@VoucherNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
            '    commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '    If txtInvoiceDate.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '    Else
            '        commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
            '    End If

            '    commandAR.Parameters.AddWithValue("@BillingPeriod", txtBillingPeriod.Text)
            '    commandAR.Parameters.AddWithValue("@ContractNo", "")
            '    commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            '    commandAR.Parameters.AddWithValue("@GLCode", txtGSTOutputCode.Text)
            '    commandAR.Parameters.AddWithValue("@GLDescription", txtGSTOutputDescription.Text)
            '    commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
            '    commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(txtGSTAmount.Text))
            '    commandAR.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            '    commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '    commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
            '    commandAR.Parameters.AddWithValue("@InvoiceType", "Service")
            '    commandAR.Parameters.AddWithValue("@GLType", "GSTOut")

            '    If ddlSalesmanBilling.SelectedIndex > 0 Then
            '        commandAR.Parameters.AddWithValue("@SalesMan", ddlSalesmanBilling.Text)
            '    Else
            '        commandAR.Parameters.AddWithValue("@SalesMan", "")
            '    End If
            '    commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '    commandAR.Connection = conn
            '    commandAR.ExecuteNonQuery()
            'End If


            ''Start:Loop thru' Credit values


            'Dim commandValues As MySqlCommand = New MySqlCommand

            'commandValues.CommandType = CommandType.Text
            ''commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            'commandValues.CommandText = "SELECT *  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
            'commandValues.Connection = conn

            'Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            'Dim dtValues As New DataTable
            'dtValues.Load(drValues)

            'For Each row As DataRow In dtValues.Rows

            '    If Convert.ToDecimal(row("ValueBase")) > 0.0 Then
            '        'qryAR = "INSERT INTO tblAR( VoucherNumber,  AccountId, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ServiceStatus, RcnoServiceRecord, ContractGroup, ModuleName, ItemCode, ServiceRecordNo, "
            '        qryAR = "INSERT INTO tblAR(  VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount,  "
            '        qryAR = qryAR + " CreditAmount, BatchNo, CompanyGroup, ContractNo, ServiceStatus, RcnoServiceRecord, ContractGroup,  BillingPeriod, "
            '        qryAR = qryAR + " ModuleName, ItemCode, ServiceRecordNo, ServiceDate, InvoiceType, SalesMan, ItemType, GSTType, GSTrate,  "
            '        qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '        'qryAR = qryAR + " (@VoucherNumber, @AccountId, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ServiceStatus, @RcnoServiceRecord, @ContractGroup, @ModuleName, @ItemCode, @ServiceRecordNo, "
            '        qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount,  "
            '        qryAR = qryAR + " @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ServiceStatus, @RcnoServiceRecord, @ContractGroup, @BillingPeriod, "
            '        qryAR = qryAR + " @ModuleName, @ItemCode, @ServiceRecordNo, @ServiceDate, @InvoiceType, @SalesMan, @ItemType,  @GSTType, @GSTrate,"
            '        qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '        commandAR.CommandText = qryAR
            '        commandAR.Parameters.Clear()

            '        commandAR.Parameters.AddWithValue("@VoucherNumber", txtInvoiceNo.Text)
            '        commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
            '        commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '        If txtInvoiceDate.Text.Trim = "" Then
            '            commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '        Else
            '            commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtInvoiceDate.Text).ToString("yyyy-MM-dd"))
            '        End If

            '        commandAR.Parameters.AddWithValue("@BillingPeriod", txtBillingPeriod.Text)
            '        commandAR.Parameters.AddWithValue("@ContractNo", row("CostCode"))
            '        commandAR.Parameters.AddWithValue("@RcnoServiceRecord", 0)
            '        commandAR.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            '        commandAR.Parameters.AddWithValue("@GLCode", row("LedgerCode"))
            '        commandAR.Parameters.AddWithValue("@GLDescription", row("LedgerName"))
            '        commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)
            '        commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(row("ValueBase")))
            '        commandAR.Parameters.AddWithValue("@BatchNo", txtBatchNo.Text)
            '        commandAR.Parameters.AddWithValue("@ServiceStatus", row("ServiceStatus"))
            '        commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '        commandAR.Parameters.AddWithValue("@ContractGroup", "")
            '        commandAR.Parameters.AddWithValue("@ModuleName", "Invoice")
            '        commandAR.Parameters.AddWithValue("@ItemCode", row("ItemCode"))
            '        commandAR.Parameters.AddWithValue("@ServiceRecordNo", row("RefType"))

            '        'If txtInvoiceDate.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
            '        'Else
            '        '    commandAR.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(row("ServiceDate")).ToString("yyyy-MM-dd"))
            '        'End If
            '        commandAR.Parameters.AddWithValue("@InvoiceType", "Service")

            '        If ddlSalesmanBilling.SelectedIndex > 0 Then
            '            commandAR.Parameters.AddWithValue("@SalesMan", ddlSalesmanBilling.Text)
            '        Else
            '            commandAR.Parameters.AddWithValue("@SalesMan", "")
            '        End If

            '        commandAR.Parameters.AddWithValue("@ItemType", row("SubCode"))
            '        commandAR.Parameters.AddWithValue("@GSTType", row("GST"))
            '        commandAR.Parameters.AddWithValue("@GSTRate", row("GSTRate"))

            '        commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '        commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatprocedure.Text))

            '        commandAR.Connection = conn
            '        commandAR.ExecuteNonQuery()

            '    End If
            '    'Start: Update tblServiceRecord
            '    If row("ItemCode") = "IN-DEF" Or row("ItemCode") = "IN-SRV" Then
            '        Dim command4 As MySqlCommand = New MySqlCommand
            '        command4.CommandType = CommandType.Text

            '        If row("RefType") <> "--SELECT--" Then
            '            UpdateServiceRecord(row("RefType"), 0, "Edit")
            '        End If

            '        'UpdateServiceRecord(row("RefType"), 0, "Edit")

            '        'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '" & txtInvoiceNo.Text & "' where Rcno= @Rcno "
            '        ''Dim qry4 As String = "Update tblservicerecord Set BillYN = 'Y' where Rcno= @Rcno "

            '        'command4.CommandText = qry4
            '        'command4.Parameters.Clear()

            '        'command4.Parameters.AddWithValue("@Rcno", row("RcnoServiceRecord"))
            '        'command4.Connection = conn
            '        'command4.ExecuteNonQuery()

            '    End If

            'Next row

            ''End: Loop thru' Credit Values




            'SQLDSInvoice.SelectCommand = txt.Text
            'SQLDSInvoice.DataBind()
            ''GridView1.DataBind()






            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)


            'MakeMeNullBillingDetails()
            'MakeMeNull()
            'DisableControls()
            'FirstGridViewRowGL()



            ''''''''''''''' Insert tblAR

            lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"

            'End If
            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()
            
            updpnlServiceRecs.Update()
            
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnPost_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Private Sub UpdateServiceRecord(ServiceRecordNo As String, PriceWithDisc As Decimal, ContractNo As String, EditDelete As String)
        Try
            'Dim query As String
            Dim command As MySqlCommand = New MySqlCommand
            Dim TotalBillamt As Decimal
            Dim TotalBilledamt As Decimal
            Dim TotalCNAmt As Decimal
            Dim Billed As String

            Dim MaxContractdate As Date

            TotalBillamt = 0.0
            TotalBilledamt = 0.0
            TotalCNAmt = 0.0

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''''''''''''''''''''''''
            Dim commandBillAmount As MySqlCommand = New MySqlCommand
            commandBillAmount.CommandType = CommandType.Text
            commandBillAmount.CommandText = "SELECT BillAmount, BilledAmt, TotalCreditAmount FROM tblservicerecord  where RecordNo = '" & ServiceRecordNo & "'"
            'commandBilledAmt.CommandText = "SELECT sum(PriceWithDisc) as TotalBilledAmount FROM tblSalesDetail  where RefType= '" & ServiceRecordNo & "'"

            commandBillAmount.Connection = conn

            Dim dr1 As MySqlDataReader = commandBillAmount.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                TotalBillamt = dt1.Rows(0)("BillAmount").ToString
            End If

            Dim commandBilledAmt As MySqlCommand = New MySqlCommand
            commandBilledAmt.CommandType = CommandType.Text
            'commandBilledAmt.CommandText = "SELECT BillAmount, BilledAmt, TotalCreditAmount FROM tblservicerecord  where Rcno=" & RcnoServiceRecord
            commandBilledAmt.CommandText = "SELECT ifnull(sum(A.ValueBase),0) as TotalBilledAmount FROM tblSalesOrderDetail A, tblSalesOrder B  where A.SalesOrderNumber = B.SalesOrderNumber and B.PostStatus = 'P' and A.RefType= '" & ServiceRecordNo & "'"

            commandBilledAmt.Connection = conn

            Dim dr As MySqlDataReader = commandBilledAmt.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                TotalBilledamt = dt.Rows(0)("TotalBilledAmount").ToString
            End If


            'Dim commandCNAmt As MySqlCommand = New MySqlCommand
            'commandCNAmt.CommandType = CommandType.Text
            ''commandBilledAmt.CommandText = "SELECT BillAmount, BilledAmt, TotalCreditAmount FROM tblservicerecord  where Rcno=" & RcnoServiceRecord
            'commandCNAmt.CommandText = "SELECT sum(CNValue) as TotalCNAmount FROM tblcndet  where RefType= '" & ServiceRecordNo & "'"

            'commandCNAmt.Connection = conn

            'Dim drCNAmt As MySqlDataReader = commandCNAmt.ExecuteReader()
            'Dim dtCNAmt As New DataTable
            'dtCNAmt.Load(drCNAmt)

            'If String.IsNullOrEmpty(dtCNAmt.Rows(0)("TotalCNAmount").ToString) = False Then
            '    TotalCNAmt = dtCNAmt.Rows(0)("TotalCNAmount").ToString
            'End If
            ''''''''''''''''''''''''''''''''''''''

            'If Convert.ToDecimal(TotalBillamt) = Convert.ToDecimal(TotalBilledamt) - Convert.ToDecimal(TotalCNAmt) Then
            If Convert.ToDecimal(TotalBillamt) = Convert.ToDecimal(TotalBilledamt) Then
                Billed = "Y"
            Else
                Billed = "N"
            End If

            command.CommandType = CommandType.Text
            Dim query As String
            query = ""

            If EditDelete = "Edit" Then
                query = "Update tblservicerecord Set BillYN = '" & Billed & "', BilledAmt = " & Convert.ToDecimal(TotalBilledamt) & ", BillNo = '" & txtInvoiceNo.Text & "' where RecordNo= '" & ServiceRecordNo & "'"
            ElseIf EditDelete = "Delete" Then
                query = "Update tblservicerecord Set BillYN = 'N', BilledAmt = " & Convert.ToDecimal(TotalBilledamt) & ", BillNo = '' where RecordNo= '" & ServiceRecordNo & "'"
            ElseIf EditDelete = "UnPost" Then
                query = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(TotalBilledamt) - PriceWithDisc & ", BillNo = '' where RecordNo= '" & ServiceRecordNo & "'"
            End If

            command.CommandText = query
            'command.Parameters.Clear()

            'command.Parameters.AddWithValue("@Rcno", RcnoServiceRecord)
            command.Connection = conn
            command.ExecuteNonQuery()


            ''''''''''''''''''''''''''
            '''''''''''''''''''''''''''''''''''''
            Dim commandMaxContractDate As MySqlCommand = New MySqlCommand
            commandMaxContractDate.CommandType = CommandType.Text
            commandMaxContractDate.CommandText = "SELECT a.SalesOrderDate, b.ValueBase from tblSalesOrder a, b.tblSalesOrderDetail b where a.SalesOrderNumber = b.SalesOrderNumber and a.PostStatus = 'P' and b.CostCode = '" & ContractNo & "' order by a.SalesOrderDate desc limit 1"
            'commandBilledAmt.CommandText = "SELECT sum(PriceWithDisc) as TotalBilledAmount FROM tblSalesDetail  where RefType= '" & ServiceRecordNo & "'"

            commandMaxContractDate.Connection = conn

            Dim drMaxContractDate As MySqlDataReader = commandMaxContractDate.ExecuteReader()
            Dim dtMaxContractDate As New DataTable
            dtMaxContractDate.Load(drMaxContractDate)

            If dtMaxContractDate.Rows.Count > 0 Then
                command.CommandType = CommandType.Text
               
                MaxContractdate = dtMaxContractDate.Rows(0)("SalesOrderDate")
                query = "Update tblContract Set LastBillDate = @LastBilldate, LastBillAmount=@LastBillAmount where ContractNo = @ContractNo "
                command.CommandText = query
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@LastBilldate", Convert.ToDateTime(dtMaxContractDate.Rows(0)("SalesOrderDate")).ToString("yyyy-MM-dd"))
                command.Parameters.AddWithValue("@LastBillAmount", dtMaxContractDate.Rows(0)("ValueBase"))
                command.Parameters.AddWithValue("@ContractNo", ContractNo)
                command.Connection = conn
                command.ExecuteNonQuery()
            Else
                query = "Update tblContract Set LastBillDate = @LastBilldate where ContractNo = @ContractNo "
                command.CommandText = query
                command.Parameters.Clear()

                command.Parameters.AddWithValue("@LastBilldate", DBNull.Value)
                command.Parameters.AddWithValue("@ContractNo", ContractNo)
                command.Connection = conn
                command.ExecuteNonQuery()
            End If

            ''''''''''''''''''''''''
            command.Dispose()
            conn.Close()
            conn.Dispose()
            commandBillAmount.Dispose()
            commandBilledAmt.Dispose()
            dt.Dispose()
            dt1.Dispose()
            dtMaxContractDate.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION UpdateServiceRecord", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub
    Protected Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        txtMode.Text = ""
        'txtMode.Text = "View"
        MakeMeNullBillingDetails()
        MakeMeNull()
        DisableControls()

        ''   txt.Text = "select * from tblasset where rcno<>0;"
        ''SqlDataSource1.SelectCommand = "SELECT * FROM tblcompany WHERE  Inactive=0 order by AccountId desc limit 100;"
        ''SqlDataSource1.DataBind()
        'SQLDSContract.DataBind()
        'GridView1.DataBind()
    End Sub

    Protected Sub btnReceipts_Click(sender As Object, e As EventArgs) Handles btnReceipts.Click

        If chkQReceiptAccess.Checked = True And chkReceiptAccess.Checked = True Then
            If Convert.ToDecimal(txtBalanceBase.Text) > 0.0 Then

                '''''''''''''''''''''''
                txtAccountIdBillingQR.Text = txtAccountIdBilling.Text
                txtAccountNameQR.Text = txtAccountName.Text
                'txtReceiptDateQR.Text = txtInvoiceDate.Text
                txtReceivedAmountQR.Text = txtBalanceBase.Text

                If String.IsNullOrEmpty(txtReceiptDateQR.Text) = False Then
                    txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
                End If
                updPnlQR.Update()

                If String.IsNullOrEmpty(txtCompanyGroup.Text) = True Then
                    ddlCompanyGrpII.SelectedIndex = 0
                    ddlCompanyGrpII.Enabled = True
                Else
                    'ddlCompanyGrpII.Text = txtCompanyGroup.Text
                    'ddlCompanyGrpII.Enabled = False

                End If

                If String.IsNullOrEmpty(txtAccountType.Text) = True Then
                    ddlContactType.SelectedIndex = 0
                    ddlContactType.Enabled = True
                Else
                    ddlContactType.Text = txtAccountType.Text
                    ddlContactType.Enabled = False
                End If


                txtAccountIdII.Text = txtAccountIdBilling.Text
                txtClientNameII.Text = txtAccountName.Text


                txtAccountIdII.Enabled = False
                txtClientNameII.Enabled = False

                updpnlInvoiceRecs.Update()
                updpnlImportInovice.Update()


                '''''''''''''''''
                Dim sqlQRRcpt As String = ""
                sqlQRRcpt = "SELECT a.PostStatus, a.BankStatus, a.GlStatus, a.ReceiptNumber, a.ReceiptDate, a.AccountId, a.AppliedBase, a.GSTAmount, a.BaseAmount, "
                sqlQRRcpt = sqlQRRcpt + " a.ReceiptFrom, a.ReceiptDate, a.NetAmount, GlPeriod, a.CompanyGroup, a.ContactType, a.Cheque, a.ChequeDate, a.BankId, "
                sqlQRRcpt = sqlQRRcpt + " a.LedgerCode, a.LedgerName, a.Comments, a.PaymentType, a.Salesman, a.CreatedBy, a.CreatedOn, a.LastModifiedBy, a.LastModifiedOn, a.Rcno, a.Location "
                sqlQRRcpt = sqlQRRcpt + " FROM tblrecv a, tblRecvDet b where ( a.PostStatus = 'P')  "
                sqlQRRcpt = sqlQRRcpt + " and a.ReceiptNumber = b.ReceiptNumber"
                sqlQRRcpt = sqlQRRcpt + " and b.Reftype = '" & txtInvoiceNo.Text.Trim & "'"
                'sqlQRRcpt = sqlQRRcpt & " and a.Location = '" & txtLocation.Text & "'"
                sqlQRRcpt = sqlQRRcpt + " ORDER BY a.Rcno DESC, a.ReceiptFrom"


                SQLDSReceipt.SelectCommand = sqlQRRcpt

                '''''''''''''''''''''''

                '''''''''''''''''''''''''' populate QR grid

                'Start: Billing Details

                Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                Dim drCurrentRowLoc As DataRow = Nothing

                For i As Integer = 0 To grvBillingDetailsQR.Rows.Count - 1
                    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                    drCurrentRowLoc = dtScdrLoc.NewRow()
                    ViewState("CurrentTableBillingDetailsRecQR") = dtScdrLoc
                    grvBillingDetailsQR.DataSource = dtScdrLoc
                    grvBillingDetailsQR.DataBind()

                    SetPreviousDataBillingDetailsRecsQR()
                Next i

                FirstGridViewRowBillingDetailsRecsQR()

                'Start: From tblBillingDetailItem

                txtReceiptAmt.Text = "0.00"

                Dim rowselected As Integer
                rowselected = 0

                AddNewRowBillingDetailsRecsQR()
                Dim qry As String
                qry = ""

                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text
                'Header
                rowselected = rowselected + 1


                Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)
                TextBoxItemTypeGV.Text = "ARIN"


                Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
                TextBoxtxtInvoiceNoGV.Text = Convert.ToString(txtInvoiceNo.Text)

                Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
                TextBoxInvoiceDate.Text = Convert.ToDateTime(txtInvoiceDate.Text).ToString("dd/MM/yyyy")


                Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
                TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(txtNetInvoiceAmount.Text)).ToString("N2")

                Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtTotalReceiptAmount.Text)).ToString("N2")
                TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")

                Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)
                TextBoxTotalCNAmt.Text = (Convert.ToDecimal(txtTotalCNAmount.Text)).ToString("N2")


                Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)
                TextBoxOtherCode.Text = txtARCode.Text

                Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)
                TextBoxGLDescription.Text = txtARDescription.Text

                Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
                TextBoxReceiptAmt.Text = txtBalanceBase.Text

                txtReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
                txtReceivedAmountQR.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
                UpdatePanel4.Update()

                btnSave.Enabled = True
                updpnlBillingDetailsQR.Update()
                updPanelSave.Update()
                updpnlInvoiceRecs.Update()
                btnSaveQR.Enabled = True
                'mdlQuickReceipt.Show()
                txtReceivedAmountQR.Focus()

                '''''''''''''''''''''''''' populate QR grid
                mdlQuickReceipt.Show()


                ''''''''''''''''''''''''''
            ElseIf Convert.ToDecimal(txtBalanceBase.Text) = 0.0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            ElseIf Convert.ToDecimal(txtBalanceBase.Text) < 0.0 And Val(txtTotalReceipts.Text) > 0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            End If
        ElseIf chkQReceiptAccess.Checked = False And chkReceiptAccess.Checked = True Then

            If Convert.ToDecimal(txtBalanceBase.Text) = 0.0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            End If

            If Convert.ToDecimal(txtBalanceBase.Text) < 0.0 And Val(txtTotalReceipts.Text) > 0 Then
                Session("receiptfrom") = "invoice"

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    Session("invoiceno") = txtInvoiceNo.Text
                End If

                If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                    'Session("contractno") = txtContractNo.Text
                    'txt.Text = SQLDSContract.SelectCommand
                    Session("gridsqlinv") = txt.Text
                    Session("strcondition") = txtCondition.Text
                    Session("rcnoinv") = txtRcno.Text
                    Session("AccountId") = txtAccountIdBilling.Text
                    Session("AccountName") = txtAccountName.Text
                    Session("ContactType") = ddlContactType.Text
                    Session("CompanyGroup") = txtCompanyGroup.Text
                    Session("Salesman") = ddlSalesmanBilling.Text
                    Session("fromtext") = txtFrom2.Text
                    '''''''''''''''''''''''''''''
                End If

                Response.Redirect("Receipts.aspx")
            End If

        End If


        'If chkQReceiptAccess.Checked = True And chkReceiptAccess.Checked = True Then
        '    'If Convert.ToDecimal(txtTotalReceiptAmount.Text) > 0 Then
        '    If Convert.ToInt32(txtTotReceipts.Text) > 0 Then
        '        Session("receiptfrom") = "invoice"

        '        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '            Session("invoiceno") = txtInvoiceNo.Text
        '        End If

        '        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '            'Session("contractno") = txtContractNo.Text
        '            'txt.Text = SQLDSContract.SelectCommand
        '            Session("gridsqlinv") = txt.Text
        '            Session("strcondition") = txtCondition.Text
        '            Session("rcnoinv") = txtRcno.Text
        '            Session("AccountId") = txtAccountIdBilling.Text
        '            Session("AccountName") = txtAccountName.Text
        '            Session("ContactType") = ddlContactType.Text
        '            Session("CompanyGroup") = txtCompanyGroup.Text
        '            Session("Salesman") = ddlSalesmanBilling.Text
        '            'Session("Scheduler") = ddlScheduler.Text
        '            'Session("Team") = txtTeam.Text
        '            'Session("InCharge") = txtTeamIncharge.Text
        '            'Session("ServiceBy") = txtServiceBy.Text
        '            'Session("ScheduleType") = ddlScheduleType.Text
        '            '''''''''''''''''''''''''''''
        '        End If

        '        Response.Redirect("Receipts.aspx")


        '        'ElseIf Convert.ToDecimal(txtTotalReceiptAmount.Text) = 0 Then
        '    ElseIf Convert.ToInt32(txtTotReceipts.Text) = 0 Then

        '        txtAccountIdBillingQR.Text = txtAccountIdBilling.Text
        '        txtAccountNameQR.Text = txtAccountName.Text
        '        'txtReceiptDateQR.Text = txtInvoiceDate.Text
        '        txtReceivedAmountQR.Text = txtBalanceBase.Text

        '        If String.IsNullOrEmpty(txtReceiptDateQR.Text) = False Then
        '            txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
        '        End If
        '        updPnlQR.Update()

        '        If String.IsNullOrEmpty(txtCompanyGroup.Text) = True Then
        '            ddlCompanyGrpII.SelectedIndex = 0
        '            ddlCompanyGrpII.Enabled = True
        '        Else
        '            ddlCompanyGrpII.Text = txtCompanyGroup.Text
        '            ddlCompanyGrpII.Enabled = False

        '        End If

        '        If String.IsNullOrEmpty(txtAccountType.Text) = True Then
        '            ddlContactType.SelectedIndex = 0
        '            ddlContactType.Enabled = True
        '        Else
        '            ddlContactType.Text = txtAccountType.Text
        '            ddlContactType.Enabled = False
        '        End If


        '        txtAccountIdII.Text = txtAccountIdBilling.Text
        '        txtClientNameII.Text = txtAccountName.Text


        '        txtAccountIdII.Enabled = False
        '        txtClientNameII.Enabled = False

        '        updpnlInvoiceRecs.Update()
        '        updpnlImportInovice.Update()




        '        '''''''''''''''''''''''''' populate QR grid

        '        'Start: Billing Details

        '        Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
        '        Dim drCurrentRowLoc As DataRow = Nothing

        '        For i As Integer = 0 To grvBillingDetailsQR.Rows.Count - 1
        '            dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
        '            drCurrentRowLoc = dtScdrLoc.NewRow()
        '            ViewState("CurrentTableBillingDetailsRecQR") = dtScdrLoc
        '            grvBillingDetailsQR.DataSource = dtScdrLoc
        '            grvBillingDetailsQR.DataBind()

        '            SetPreviousDataBillingDetailsRecsQR()
        '        Next i

        '        FirstGridViewRowBillingDetailsRecsQR()

        '        'Start: From tblBillingDetailItem

        '        txtReceiptAmt.Text = "0.00"

        '        Dim rowselected As Integer
        '        rowselected = 0

        '        AddNewRowBillingDetailsRecsQR()
        '        Dim qry As String
        '        qry = ""

        '        Dim command As MySqlCommand = New MySqlCommand
        '        command.CommandType = CommandType.Text
        '        'Header
        '        rowselected = rowselected + 1

        '        Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
        '        TextBoxtxtInvoiceNoGV.Text = Convert.ToString(txtInvoiceNo.Text)

        '        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
        '        TextBoxInvoiceDate.Text = Convert.ToDateTime(txtInvoiceDate.Text).ToString("dd/MM/yyyy")


        '        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
        '        TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(txtNetInvoiceAmount.Text)).ToString("N2")

        '        Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
        '        'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtTotalReceiptAmount.Text)).ToString("N2")
        '        TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")

        '        Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)
        '        TextBoxTotalCNAmt.Text = (Convert.ToDecimal(txtTotalCNAmount.Text)).ToString("N2")


        '        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)
        '        TextBoxOtherCode.Text = txtARCode.Text

        '        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)
        '        TextBoxGLDescription.Text = txtARDescription.Text

        '        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
        '        TextBoxReceiptAmt.Text = txtBalanceBase.Text

        '        txtReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
        '        txtReceivedAmountQR.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")
        '        UpdatePanel4.Update()

        '        btnSave.Enabled = True
        '        updpnlBillingDetailsQR.Update()
        '        updPanelSave.Update()
        '        updpnlInvoiceRecs.Update()
        '        btnSaveQR.Enabled = True
        '        'mdlQuickReceipt.Show()
        '        txtReceivedAmountQR.Focus()

        '        '''''''''''''''''''''''''' populate QR grid
        '        mdlQuickReceipt.Show()
        '    End If

        'End If


        'If chkQReceiptAccess.Checked = False And chkReceiptAccess.Checked = True Then

        '    Session("receiptfrom") = "invoice"

        '    If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '        Session("invoiceno") = txtInvoiceNo.Text
        '    End If

        '    If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '        'Session("contractno") = txtContractNo.Text
        '        'txt.Text = SQLDSContract.SelectCommand
        '        Session("gridsqlinv") = txt.Text
        '        Session("strcondition") = txtCondition.Text
        '        Session("rcnoinv") = txtRcno.Text
        '        Session("AccountId") = txtAccountIdBilling.Text
        '        Session("AccountName") = txtAccountName.Text
        '        Session("ContactType") = ddlContactType.Text
        '        Session("CompanyGroup") = txtCompanyGroup.Text
        '        Session("Salesman") = ddlSalesmanBilling.Text
        '        '''''''''''''''''''''''''''''
        '    End If

        '    Response.Redirect("Receipts.aspx")
        'End If

    End Sub

    Protected Sub btnClientSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnClientSearch.Click
        lblAlert.Text = ""

        Try
            'txtSearch.Text = "InvoiceSearch"
            'If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
            '    txtPopUpClient.Text = ""
            '    txtPopUpClient.Text = txtAccountIdSearch.Text
            '    txtPopupClientSearch.Text = txtPopUpClient.Text

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%'  or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    Else
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%'  or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    End If


            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    updPanelInvoice.Update()
            'Else
            '    txtPopUpClient.Text = ""

            '    txtPopUpClient.Text = ""
            '    'txtPopUpClient.Text = txtAccountIdSearch.Text
            '    txtPopupClientSearch.Text = ""

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location = in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    Else
            '        If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
            '        End If

            '    End If


            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    updPanelInvoice.Update()
            'End If
            'txtInvoiceSearch.Text = SqlDSClient.SelectCommand
            'mdlPopUpClient.Show()


            txtSearch.Text = "InvoiceSearch"
            If String.IsNullOrEmpty(txtAccountIdSearch.Text.Trim) = False Then
                txtPopUpClient2.Text = ""
                txtPopUpClient2.Text = txtAccountIdSearch.Text
                txtPopupClientSearch2.Text = txtPopUpClient2.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.BillStreet, A.BillBuilding, A.BillCity, A.BillState, A.BillCountry, A.BillPostal, A.BillContact1, A.AccountID,  A.BillingName From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%'  or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') order by A.BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  C.BillAddress1, C.BillPostal, C.BillContact1, C.AccountID, C.BillingName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by A.BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContact, A.AccountID, A.BillingName From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%' or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillStreet, C.BillBuilding, C.BillCity, C.BillState, C.BillCountry, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%'  order by A.BillingName"
                    End If

                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%'  or A.BillContactPerson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID,  C.BillingName From tblperson C  where  C.Inactive = False  and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%' or C.BillContactPerson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A   where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch2.Text + "%' or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    End If
                End If

                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient2.Text = ""

                txtPopUpClient2.Text = ""
                'txtPopUpClient.Text = txtAccountIdSearch.Text
                txtPopupClientSearch.Text = ""

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch2.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch2.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location = in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch2.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch2.Text + "%' or B.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    End If

                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName, Postal, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False  and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch2.Text + "%' or B.CompanyID like '%" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostalSvc, D.BillContactPerson, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch2.Text + "%' or D.PersonID  like '%" + txtPopupClientSearch2.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup,  A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A WHERE (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch.Text + "%'  or A.contactperson like '%" + txtPopupClientSearch2.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID,  C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and (upper(C.BillingName) Like ""%" + txtPopupClientSearch2.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch2.Text + "%'  or C.contACTperson like '%" + txtPopupClientSearch2.Text + "%') order by BillingName"
                    End If

                End If


                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            End If
            txtInvoiceSearch.Text = SqlDSClient2.SelectCommand
            mdlPopUpClient2.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnClientSearch_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub ddlCreditTerms_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlCreditTerms.SelectedIndexChanged
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT TermsDay FROM tblterms where Terms='" & ddlCreditTerms.Text & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                txtCreditDays.Text = dt.Rows(0)("TermsDay").ToString
                txtDueDate.Text = Convert.ToDateTime(txtInvoiceDate.Text).AddDays(Convert.ToInt32(txtCreditDays.Text))

            End If

            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If

            dt.Dispose()
            commandDocControl.Dispose()
            dr.Close()
            'conn.Close()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ddlCreditTerms_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtInvoiceDate_TextChanged(sender As Object, e As EventArgs)
        txtBillingPeriod.Text = Year(Convert.ToDateTime(txtInvoiceDate.Text)) & Format(Month(Convert.ToDateTime(txtInvoiceDate.Text)), "00")
    End Sub

    Protected Sub btnSelect_Click(sender As Object, e As EventArgs) Handles btnSelect.Click
        Try
            Dim rowIndex As Integer = 0
            Dim Total As Decimal
            Dim TotalWithGST As Decimal
            Dim TotalDiscAmt As Decimal
            Dim TotalGSTAmt As Decimal
            Dim TotalPriceWithDiscountAmt As Decimal

            Dim TextBoxGSTAmt As TextBox
            Dim TextBoxTotalPrice As TextBox
            Dim TextBoxTotalPriceWithGST As TextBox
            Dim TextBoxDiscAmt As TextBox
            Dim TextBoxPriceWithDisc As TextBox

            Total = 0.0
            TotalWithGST = 0.0
            TotalDiscAmt = 0.0
            TotalGSTAmt = 0.0
            TotalPriceWithDiscountAmt = 0.0

            Dim table As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)


            If (table.Rows.Count > 0) Then
                FirstGridViewRowBillingDetailsRecs()
                For i As Integer = 0 To (table.Rows.Count) - 1

                    Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)

                    If (TextBoxchkSelect.Checked = True) Then

                        Dim TextBoxInvoiceAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                        Dim TextBoxDiscountAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                        Dim TextBoxGSTAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtGSTAmountGV"), TextBox)
                        Dim TextBoxNetAmount As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtNetAmountGV"), TextBox)

                        Dim lblid1 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtAccountIdGV"), TextBox)
                        Dim lblid2 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtAccountNameGV"), TextBox)
                        Dim lblid3 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillAddress1GV"), TextBox)
                        Dim lblid4 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillBuildingGV"), TextBox)
                        Dim lblid5 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillStreetGV"), TextBox)
                        Dim lblid6 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillCountryGV"), TextBox)
                        Dim lblid7 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtBillPostalGV"), TextBox)
                        Dim lblid8 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtOurReferenceGV"), TextBox)
                        Dim lblid9 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtYourReferenceGV"), TextBox)
                        Dim lblid10 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtPoNoGV"), TextBox)
                        Dim lblid11 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtCreditTermsGV"), TextBox)
                        Dim lblid12 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtSalesmanGV"), TextBox)
                        Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                        Dim lblid14 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)

                        Dim lblid16 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtCompanyGroupGV"), TextBox)
                        Dim lblid17 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                        Dim lblid18 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtRcnoServicebillingdetailGV"), TextBox)
                        Dim lblid19 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtContactTypeGV"), TextBox)
                        Dim lblid20 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtInvoiceDateGV"), TextBox)

                        Dim lblid21 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtDiscAmountGV"), TextBox)

                        'Dim lblid23 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtToBillAmtGV"), TextBox)

                        Dim lblid15 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                        'Dim lblid24 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)
                        Dim lblid25 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtStatusGV"), TextBox)

                        Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtContractNoGV"), TextBox)
                        'Dim lblid26 As TextBox = CType(grvServiceRecDetails.Rows(i).Cells(0).FindControl("txtContractNoGV"), TextBox)

                        If txtMode.Text = "NEW" Then
                            txtAccountType.Text = lblid19.Text
                            txtCompanyGroup.Text = lblid16.Text
                            'txtInvoiceDate.Text = lblid20.Text
                            txtAccountIdBilling.Text = lblid1.Text
                            txtAccountName.Text = lblid2.Text
                            txtBillAddress.Text = lblid3.Text
                            txtBillBuilding.Text = lblid4.Text
                            txtBillStreet.Text = lblid5.Text
                            txtBillCountry.Text = lblid6.Text
                            txtBillPostal.Text = lblid7.Text
                            txtOurReference.Text = lblid8.Text
                            txtYourReference.Text = lblid9.Text
                            txtPONo.Text = lblid10.Text
                            txtContractNo.Text = lblid22.Text
                        End If

                        ''''''''''''''''''''''''''''''''''''''''''''''''

                        Dim conn As MySqlConnection = New MySqlConnection()

                        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        If conn.State = ConnectionState.Open Then
                            conn.Close()
                            conn.Dispose()
                        End If
                        conn.Open()
                        Dim sql As String
                        sql = ""

                        Dim command21 As MySqlCommand = New MySqlCommand

                        sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLtype='TRADE DEBTOR'"

                        'Dim command1 As MySqlCommand = New MySqlCommand
                        command21.CommandType = CommandType.Text
                        command21.CommandText = sql
                        command21.Connection = conn

                        Dim dr21 As MySqlDataReader = command21.ExecuteReader()

                        Dim dt21 As New DataTable
                        dt21.Load(dr21)

                        If dt21.Rows.Count > 0 Then
                            If dt21.Rows(0)("COACode").ToString <> "" Then : txtARCode.Text = dt21.Rows(0)("COACode").ToString : End If
                            If dt21.Rows(0)("Description").ToString <> "" Then : txtARDescription.Text = dt21.Rows(0)("Description").ToString : End If
                        End If

                        '''''''''''''''''''''''''''''''''''
                        sql = "Select COACode, Description from tblchartofaccounts where CompanyGroup = '" & txtCompanyGroup.Text & "' and GLType='GST OUTPUT'"

                        Dim command23 As MySqlCommand = New MySqlCommand
                        command23.CommandType = CommandType.Text
                        command23.CommandText = sql
                        command23.Connection = conn

                        Dim dr23 As MySqlDataReader = command23.ExecuteReader()

                        Dim dt23 As New DataTable
                        dt23.Load(dr23)

                        If dt23.Rows.Count > 0 Then
                            If dt23.Rows(0)("COACode").ToString <> "" Then : txtGSTOutputCode.Text = dt23.Rows(0)("COACode").ToString : End If
                            If dt23.Rows(0)("Description").ToString <> "" Then : txtGSTOutputDescription.Text = dt23.Rows(0)("Description").ToString : End If
                        End If



                        If conn.State = ConnectionState.Open Then
                            conn.Close()
                            conn.Dispose()
                        End If

                        command21.Dispose()
                        command23.Dispose()
                        dt21.Dispose()
                        dt23.Dispose()

                        'conn.Close()

                        Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                        Dim drCurrentRowLoc As DataRow = Nothing

                        'If String.IsNullOrEmpty(txtRcnoServiceRecord.Text) = True Or txtRcnoServiceRecord.Text = "0" Then


                        '    For j As Integer = 0 To grvBillingDetails.Rows.Count - 1
                        '        dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                        '        drCurrentRowLoc = dtScdrLoc.NewRow()
                        '        ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                        '        grvBillingDetails.DataSource = dtScdrLoc
                        '        grvBillingDetails.DataBind()

                        '        SetPreviousDataBillingDetailsRecs()
                        '    Next j
                        '    FirstGridViewRowBillingDetailsRecs()
                        'End If


                        'Start: Populate the grid
                        'txtRcnoServiceRecord.Text = lblid14.Text
                        'txtRcnoServiceRecordDetail.Text = lblid15.Text
                        'txtContractNo.Text = lblid22.Text
                        'txtRcnoInvoice.Text = lblid17.Text
                        'txtRowSelected.Text = rowindex1.ToString


                        'txtRcnoservicebillingdetail.Text = lblid18.Text
                        'txtRcnotblServiceBillingDetail.Text = lblid18.Text


                        If String.IsNullOrEmpty(txtRcnoServiceBillingDetail.Text) = True Then
                            txtRcnoServiceBillingDetail.Text = "0"
                        End If


                        If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                            txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text
                        End If
                        'Start: Billing Details

                        'Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
                        'Dim drCurrentRowLoc As DataRow = Nothing

                        'For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                        '    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                        '    drCurrentRowLoc = dtScdrLoc.NewRow()
                        '    ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                        '    grvBillingDetails.DataSource = dtScdrLoc
                        '    grvBillingDetails.DataBind()

                        '    SetPreviousDataBillingDetailsRecs()
                        'Next i

                        'Dim Query As String
                        'Dim Query1 As String

                        'Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                        'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

                        'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtUOMGV"), DropDownList)
                        'Query1 = "Select * from tblunitms order by UnitMs"
                        'PopulateDropDownList(Query1, "UnitMs", "UnitMs", TextBoxUOM1)



                        'If Convert.ToInt64(txtRcnoServiceBillingDetail.Text) = 0 Then
                        'If txtMode.Text = "NEW" Then
                        If Convert.ToInt64(lblid18.Text) = 0 Then
                            Dim dt As New DataTable

                            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                            If conn.State = ConnectionState.Open Then
                                conn.Close()
                                conn.Dispose()
                            End If
                            conn.Open()
                            'Dim command1 As MySqlCommand = New MySqlCommand
                            'command1.CommandType = CommandType.Text

                            'If lblid25.Text = "P" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
                            'ElseIf lblid25.Text = "O" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
                            'End If

                            'command1.Connection = conn

                            'Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                            'Dim dt1 As New DataTable
                            'dt1.Load(dr1)
                            'AddNewRowBillingDetailsRecs()

                            'Dim totrec As Integer
                            'totrec = 0

                            'If grvBillingDetails.Rows.Count = 1 Then
                            '    totrec = 0
                            'Else
                            '    totrec = grvBillingDetails.Rows.Count
                            '    totrec = totrec - 1
                            'End If
                            AddNewRowBillingDetailsRecs()
                            'totrec = grvBillingDetails.Rows.Count - 1
                            'AddNewRowBillingDetailsRecs()
                            'If (grvBillingDetails.Rows.Count > totrec + 1) Then


                            'AddNewRowWithDetailRecBillingDetailsRecs()
                            'AddNewRowBillingDetailsRecs()


                            Dim command1 As MySqlCommand = New MySqlCommand
                            command1.CommandType = CommandType.Text

                            'If lblid25.Text = "P" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "' and ProductCode = 'IN-SRV'"
                            'ElseIf lblid25.Text = "O" Then
                            '    command1.CommandText = "SELECT * FROM tblbillingproducts where CompanyGroup = '" & txtCompanyGroup.Text & "'and ProductCode = 'IN-DEF'"
                            'End If


                            If lblid25.Text = "P" Then
                                command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                            ElseIf lblid25.Text = "O" Then
                                command1.CommandText = "SELECT * FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                            End If
                            command1.Connection = conn
                            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                            Dim dt1 As New DataTable
                            dt1.Load(dr1)

                            Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                            TextBoxItemType.Text = "SERVICE"
                            'TextBoxItemType.Enabled = False

                            Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                            TextBoxItemCode.Text = dt1.Rows(0)("ProductCode").ToString()
                            'TextBoxItemCode.Enabled = False

                            Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                            'TextBoxItemDescription.Text = ""
                            TextBoxItemDescription.Text = dt1.Rows(0)("Description").ToString()


                            Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtOtherCodeGV"), TextBox)
                            TextBoxOtherCode.Text = dt1.Rows(0)("COACode").ToString()


                            Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                            TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                            Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            TextBoxUOM.Text = "--SELECT--"

                            Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                            TextBoxQty.Text = "1"
                            TextBoxQty.Enabled = False

                            TextBoxPriceWithDisc = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                            TextBoxPriceWithDisc.Text = lblid13.Text

                            Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                            TextBoxPricePerUOM.Text = lblid13.Text

                            Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                            TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")

                            'Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                            TextBoxGSTAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                            TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2"))

                            TextBoxTotalPrice = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                            TextBoxTotalPrice.Text = lblid13.Text

                            TextBoxTotalPriceWithGST = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                            TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                            Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                            TextBoxContractNo.Text = Convert.ToString(txtContractNo.Text)

                            Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                            TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)


                            Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                            TextBoxDiscPerc.Text = Convert.ToString("0.00")

                            TextBoxDiscAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                            TextBoxDiscAmt.Text = Convert.ToString("0.00")

                            Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                            TextBoxServiceRecord.Text = Convert.ToString(lblid15.Text)

                            'txtTotal.Text = Convert.ToDecimal(txtTotal.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                            'txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithGST.Text) + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)

                            'txtTotalDiscAmt.Text = (0.0).ToString("N2")
                            'txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")
                            'txtTotalWithDiscAmt.Text = Convert.ToDecimal(txtTotal.Text)

                            '''''''''''''''''''''
                            'Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(totrec).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                            'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                            'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

                            'Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(totrec).Cells(0).FindControl("txtUOMGV"), DropDownList)
                            'Query = "Select * from tblunitms order by UnitMs"
                            'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM2)


                            Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                            TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                            TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                            txtAmountWithDiscount.Text = Total - TotalDiscAmt
                            TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                            TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                            command1.Dispose()
                            dt1.Dispose()

                            rowIndex = rowIndex + 1
                        Else

                            'Start: From tblBillingDetailItem

                            'Dim Total As Decimal
                            'Dim TotalWithGST As Decimal
                            'Dim TotalDiscAmt As Decimal
                            'Dim TotalGSTAmt As Decimal
                            'Dim TotalPriceWithDiscountAmt As Decimal


                            'Total = 0.0
                            'TotalWithGST = 0.0
                            'TotalDiscAmt = 0.0
                            'TotalGSTAmt = 0.0
                            'TotalPriceWithDiscountAmt = 0.0

                            'Dim conn As MySqlConnection = New MySqlConnection()

                            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                            If conn.State = ConnectionState.Open Then
                                conn.Close()
                                conn.Dispose()
                            End If
                            conn.Open()

                            Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand
                            cmdServiceBillingDetailItem.CommandType = CommandType.Text
                            cmdServiceBillingDetailItem.CommandText = "SELECT * FROM tblservicebillingdetailitem where Rcnoservicebillingdetail=" & Convert.ToInt32(lblid18.Text)
                            cmdServiceBillingDetailItem.Connection = conn

                            Dim drcmdServiceBillingDetailItem As MySqlDataReader = cmdServiceBillingDetailItem.ExecuteReader()
                            Dim dtServiceBillingDetailItem As New DataTable
                            dtServiceBillingDetailItem.Load(drcmdServiceBillingDetailItem)

                            Dim TotDetailRecordsLoc = dtServiceBillingDetailItem.Rows.Count
                            If dtServiceBillingDetailItem.Rows.Count > 0 Then



                                Dim rowIndex1 = 0

                                For Each row As DataRow In dtServiceBillingDetailItem.Rows
                                    If (TotDetailRecordsLoc > (rowIndex + 1)) Then
                                        AddNewRowBillingDetailsRecs()
                                        'AddNewRow()
                                    End If

                                    'If rowIndex = dtServiceBillingDetailItem.Rows.Count Then
                                    '    AddNewRowBillingDetailsRecs()
                                    'End If

                                    If rowIndex = grvBillingDetails.Rows.Count Then
                                        AddNewRowBillingDetailsRecs()
                                    End If


                                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                                    TextBoxItemType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemType"))

                                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                                    'TextBoxItemCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemCode"))

                                    TextBoxItemCode.Items.Clear()
                                    TextBoxItemCode.Items.Add(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemCode")))


                                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                                    TextBoxItemDescription.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("ItemDescription"))

                                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                                    TextBoxOtherCode.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("OtherCode"))

                                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtUOMGV"), DropDownList)
                                    'If String.IsNullOrEmpty(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("UOM"))) = True Then

                                    'Else
                                    '    TextBoxUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("UOM"))
                                    'End If

                                    TextBoxUOM.Items.Clear()
                                    TextBoxUOM.Items.Add(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("UOM")))

                                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtQtyGV"), TextBox)
                                    TextBoxQty.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("Qty"))
                                    'TextBoxQty.Enabled = False

                                    Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPricePerUOMGV"), TextBox)
                                    TextBoxPricePerUOM.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("PricePerUOM"))


                                    Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscPercGV"), TextBox)
                                    TextBoxDiscPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("DiscPerc"))

                                    TextBoxDiscAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtDiscAmountGV"), TextBox)
                                    TextBoxDiscAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("DiscAmount"))


                                    TextBoxPriceWithDisc = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtPriceWithDiscGV"), TextBox)
                                    TextBoxPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("PriceWithDisc"))


                                    Dim TextBoxTaxType As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTaxTypeGV"), TextBox)
                                    'TextBoxTaxType.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TaxType"))

                                    'TextBoxTaxType.Items.Clear()
                                    'TextBoxTaxType.Items.Add(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TaxType")))


                                    Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTPercGV"), TextBox)
                                    TextBoxGSTPerc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("GSTPerc"))

                                    TextBoxGSTAmt = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtGSTAmtGV"), TextBox)
                                    TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("GSTAmt"))

                                    TextBoxTotalPrice = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtTotalPriceGV"), TextBox)
                                    TextBoxTotalPrice.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TotalPrice"))

                                    TextBoxTotalPriceWithGST = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                                    TextBoxTotalPriceWithGST.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex1)("TotalPriceWithGST"))


                                    Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(rowIndex).FindControl("txtServiceRecordGV"), TextBox)
                                    TextBoxServiceRecord.Text = Convert.ToString(lblid15.Text)


                                    Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                                    TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                                    TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                                    txtAmountWithDiscount.Text = Total - TotalDiscAmt
                                    TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                                    TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                                    'Dim Query As String

                                    'Dim TextBoxItemCode2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                                    'Query = "Select * from tblbillingproducts  where CompanyGroup = '" & txtCompanyGroup.Text & "'"
                                    'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode2)

                                    'Dim TextBoxUOM2 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtUOMGV"), DropDownList)
                                    'Query = "Select * from tblunitms order by UnitMs"
                                    'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM2)


                                    Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                                    Dim TextBoxQty1 As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                                    If TextBoxItemType1.Text = "SERVICE" Then
                                        TextBoxQty1.Enabled = False
                                        TextBoxQty1.Text = "1.00"
                                        TextBoxItemType1.Enabled = False
                                    End If

                                    rowIndex = rowIndex + 1
                                    rowIndex1 = rowIndex1 + 1


                                Next row

                                'txtTotal.Text = Total.ToString("N2")
                                'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                                'txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")
                                'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")

                                'txtTotalDiscAmt.Text = 0.0
                                txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                                AddNewRowBillingDetailsRecs()
                                'rowIndex = rowIndex + 1
                            Else
                                FirstGridViewRowBillingDetailsRecs()
                                'FirstGridViewRowTarget()
                                'Dim Query As String
                                'Dim TextBoxTargetDesc As DropDownList = CType(grvBillingDetails.Rows(0).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                                'Query = "Select * from tblTarget"

                                'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc)
                            End If


                            'End: Detail Records


                            'End: From tblBillingDetailItem
                        End If

                        If txtMode.Text <> "NEW" Then
                            AddNewRowBillingDetailsRecs()
                        End If

                        grvBillingDetails.Enabled = True

                        btnSave.Enabled = False
                        If txtPostStatus.Text <> "P" Then
                            'btnSave.Enabled = True
                            btnSaveInvoice.Enabled = True
                        End If

                        updpnlServiceRecs.Update()

                        'End: Billing Details
                        updPanelSave.Update()
                        'End: Populate the grid



                        '''''''''''''''''''''''''''''''''''''''''''''''''



                        'If String.IsNullOrEmpty(TextBoxInvoiceAmount.Text) = True Then
                        '    TextBoxInvoiceAmount.Text = "0.00"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxDiscountAmount.Text) = True Then
                        '    TextBoxDiscountAmount.Text = "0.00"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxGSTAmount.Text) = True Then
                        '    TextBoxGSTAmount.Text = "0.00"
                        'End If

                        'If String.IsNullOrEmpty(TextBoxNetAmount.Text) = True Then
                        '    TextBoxNetAmount.Text = "0.00"
                        'End If

                        'TotalInvoiceAmount = TotalInvoiceAmount + Convert.ToDecimal(TextBoxInvoiceAmount.Text)
                        'TotalDiscountAmount = TotalDiscountAmount + Convert.ToDecimal(TextBoxDiscountAmount.Text)

                        'TotalGSTAmount = TotalGSTAmount + Convert.ToDecimal(TextBoxGSTAmount.Text)
                        'TotalNetAmount = TotalNetAmount + Convert.ToDecimal(TextBoxNetAmount.Text)


                        'TextBoxGSTAmt.Text = "0.00"
                        'TextBoxTotalPrice.Text = "0.00"
                        'TextBoxTotalPriceWithGST.Text = "0.00"
                        'TextBoxDiscAmt.Text = "0.00"
                        'TextBoxPriceWithDisc.Text = "0.00"

                        'Total = Total + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        'TotalWithGST = TotalWithGST + Convert.ToDecimal(TextBoxTotalPriceWithGST.Text)
                        'TotalDiscAmt = TotalDiscAmt + Convert.ToDecimal(TextBoxDiscAmt.Text)
                        ''txtAmountWithDiscount.Text =  Total - TotalDiscAmt
                        'TotalGSTAmt = TotalGSTAmt + Convert.ToDecimal(TextBoxGSTAmt.Text)
                        'TotalPriceWithDiscountAmt = TotalPriceWithDiscountAmt + Convert.ToDecimal(TextBoxPriceWithDisc.Text)

                        'rowIndex = rowIndex + 1
                    End If
                Next i

                txtTotal.Text = Total.ToString("N2")
                txtTotalDiscAmt.Text = TotalDiscAmt.ToString("N2")
                txtTotalWithDiscAmt.Text = (Total - TotalDiscAmt).ToString("N2")
                txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
                txtTotalWithGST.Text = TotalWithGST.ToString("N2")


                grvBillingDetails.Enabled = False
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnSelect_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub CheckUncheckAll(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvServiceRecDetails.HeaderRow.Cells(0).FindControl("CheckBox1"), CheckBox)
        For Each row As GridViewRow In grvServiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGV"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub

    Protected Sub txtPopUpClient_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient.TextChanged
        If txtPopUpClient.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter client name", "str")
            Exit Sub
        End If

        Try
            '"SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc,  B.AccountID, B.ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, A.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Status = 'O' and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"


            If txtClientFrom.Text = "ImportService" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If
             

                txtImportService.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"
            End If

            If txtSearch.Text = "CustomerSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If
               
                txtCustomerSearch.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"

            End If

            If txtSearch.Text = "InvoiceSearch" Then
              
                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like '%" + txtPopUpClient.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like '%" + txtPopUpClient.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If
              
                txtInvoiceSearch.Text = SqlDSClient.SelectCommand
                SqlDSClient.DataBind()
                gvClient.DataBind()
                mdlPopUpClient.Show()
                txtIsPopup.Text = "Client"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION txtPopUpClient_TextChanged", ex.Message.ToString, "")
        End Try
        'txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
    End Sub

    Protected Sub btnPopUpClientReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpClientReset.Click, btnPopUpClientResetSearch2.Click

        Try
            If txtSearch.Text = "InvoiceSearch" Then
                txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup,  A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where (A.Accountid is not null and A.Accountid <> '') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup,  C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  (C.Accountid is not null and C.Accountid <> '')  order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup,  A.BillAddress1, A.BillPostal, A.BillContactPerson,  A.AccountID,  A.BillingName From tblCompany A  where  (A.Accountid is not null and A.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C where   (C.Accountid is not null and C.Accountid <> '') order by BillingName"
                    End If
                End If

                txtInvoiceSearch.Text = SqlDSClient2.SelectCommand

            End If

            'If txtSearch.Text = "CustomerSearch" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    Else
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    End If

            '    txtCustomerSearch.Text = SqlDSClient.SelectCommand
            'End If

            'If txtClientFrom.Text = "ImportService" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and    (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    Else
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where    (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName"
            '        End If
            '    End If


            '    txtImportService.Text = SqlDSClient.SelectCommand
            'End If


            'If txtSearch.Text = "InvoiceSearch" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            '    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblCompany where 1=1 and status ='O' order by name"
            '    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblPERSON where 1=1 and status ='O' order by name"
            '    End If
            '    txtInvoiceSearch.Text = SqlDSClient.SelectCommand

            'End If

            'If txtSearch.Text = "CustomerSearch" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            '    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblCompany where 1=1 and status ='O' order by name"
            '    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblPERSON where 1=1 and status ='O' order by name"
            '    End If
            '    txtCustomerSearch.Text = SqlDSClient.SelectCommand
            'End If

            'If txtClientFrom.Text = "ImportService" Then
            '    txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
            '    'SqlDSClient.SelectCommand = "SELECT distinct * From tblContactMaster where 1=1 and ContName like '" + ViewState("ClientCurrentAlphabet") + "%' and (Upper(ContType) = '" + txtContType1.Text.ToString + "' or Upper(ContType) = '" + txtContType2.Text.ToString + "'  or Upper(ContType) = '" + txtContType3.Text.ToString + "' or Upper(ContType) = '" + txtContType4.Text.ToString + "')"

            '    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '        SqlDSClient.SelectCommand = "SELECT 'COMPANY', AccountID, ID, Name, ContactPerson, Address1, Mobile, Email,  LocateGRP, CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, Fax, Mobile, Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblCompany where 1=1 and status ='O' order by name"
            '    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '        SqlDSClient.SelectCommand = "SELECT 'PERSON', AccountID, ID, Name, ContactPerson, Address1, TelMobile as Mobile, Email,  LocateGRP, PersonGroup as CompanyGroup, AddBlock, AddNos, AddFloor, AddUnit, AddStreet, AddBuilding, AddCity, AddState, AddCountry, AddPostal, TelFax as Fax, TelMobile as Mobile, TelHome as Telephone, Salesman,BillAddress1, BillStreet, BillBuilding, BillCountry, BillPostal,ArTerm From tblPERSON where 1=1 and status ='O' order by name"
            '    End If

            '    txtImportService.Text = SqlDSClient.SelectCommand
            'End If


            SqlDSClient2.DataBind()
            gvClient2.DataBind()
            mdlPopUpClient2.Show()
            txtIsPopup.Text = "Client2"

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnPopUpClientReset_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub btnClient_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient.Click
        lblAlert.Text = ""
        lblAlert1.Text = ""
        txtSearch.Text = ""
        txtClientFrom.Text = ""

        txtClientFrom.Text = "ImportService"
        txtSearch.Text = "ImportService"
        Try
            'If String.IsNullOrEmpty(ddlContactType.Text) Or ddlContactType.Text = "--SELECT--" Then
            '    lblAlert1.Text = "SELECT ACCOUNT TYPE TO PROCEED"

            '    mdlImportServices.Show()
            '    Exit Sub
            'End If


            If String.IsNullOrEmpty(txtAccountId.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtAccountId.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where C.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If
                

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""
              

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                    End If
                End If
                

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            End If

            txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnClient_Click", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub BtnLocation_Click(sender As Object, e As ImageClickEventArgs) Handles BtnLocation.Click
        mdlPopupLocation.Show()
    End Sub

    Protected Sub btnBack_Click(sender As Object, e As EventArgs) Handles btnBack.Click
        'If txtFrom.Text = "receiptfrom" Then
        '    Session("invoiceno") = lblInvoiceId1.Text
        '    Response.Redirect("InvoiceSchedule.aspx")
        'End If

        If String.IsNullOrEmpty(txtFrom2.Text) = True Then
            Response.Redirect("Home.aspx")
        End If

        If txtFrom2.Text = "schedule" Then
            Session("invoiceno") = lblInvoiceId1.Text
            Response.Redirect("InvoiceSchedule.aspx")
        End If

        If txtFrom2.Text = "Corporate" Then
            Session.Add("customerfrom", "Corporate")
            Session.Add("armodule", "armodule")
            Response.Redirect("Company.aspx")
        End If

        If txtFrom2.Text = "Residential" Then
            Session.Add("customerfrom", "Residential")
            Session.Add("armodule", "armodule")
            Response.Redirect("Person.aspx")
        End If
    End Sub



    Protected Sub rbtInvoiceType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles rbtInvoiceType.SelectedIndexChanged
        ''Me.cpnlSearchServiceRecords.ClientState = False
        'If rbtInvoiceType.SelectedIndex = 0 Then

        '    'Me.cpnlSearchServiceRecords.ClientState = True
        '    'Me.cpnlSearchServiceRecords.Collapsed = True

        '    ''Me.cpnlSearchServiceRecords.ClientState = False
        '    ''Me.cpnlSearchServiceRecords.Enabled = False

        '    'Me.cpnlServiceBillingDetails.ClientState = True
        '    'Me.cpnlServiceBillingDetails.Collapsed = True

        '    'Me.cpnlInvoiceDetails.Collapsed = False
        '    'Me.cpnlServiceBillingDetails.ClientState = "False"


        '    btnClient1.Visible = True

        '    txtAccountType.BackColor = txtInvoiceDate.BackColor
        '    txtAccountType.Enabled = True
        'Else

        '    'Me.cpnlSearchServiceRecords.ClientState = False
        '    'Me.cpnlSearchServiceRecords.Collapsed = False

        '    'Me.cpnlServiceBillingDetails.Collapsed = True
        '    'Me.cpnlServiceBillingDetails.ClientState = "true"

        '    'Me.cpnlInvoiceDetails.Collapsed = True
        '    'Me.cpnlInvoiceDetails.ClientState = "true"

        '    'Me.cpnlSearchServiceRecords.Enabled = True
        '    'Me.cpnlServiceBillingDetails.Enabled = True

        '    btnClient1.Visible = False

        '    txtAccountIdBilling.Text = ""
        '    txtAccountName.Text = ""
        '    txtCompanyGroup.Text = ""

        '    txtBillAddress.Text = ""
        '    txtBillBuilding.Text = ""
        '    txtBillStreet.Text = ""
        '    txtAccountType.SelectedIndex = 0

        '    txtAccountType.BackColor = txtInvoiceNo.BackColor
        '    txtAccountType.Enabled = False
        'End If
        ''UpdatePanel1.Update()
        'updPanelInvoice.Update()
    End Sub

    Protected Sub btnClient1_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient1.Click
        Try
            lblAlert.Text = ""

            txtSearch.Text = "CustomerSearch"


            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = False Then
                txtPopUpClient.Text = ""

                txtPopUpClient.Text = txtAccountIdBilling.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else

                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where    (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName "
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or B.CompanyId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper.Trim + "%"" or D.PersonId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.LocationId like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text.Trim + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                End If
             
                'SELECT B.CompanyID as ID,A.name,A.accountid,A.contactperson, b.LocationId, b.Address1 as ServiceAddress1  From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and  A.AccountID like '" + txtPpclient.Text.Trim + "%' OR B.CompanyID like '%" + txtPpclient.Text.Trim + "%' OR A.NAME Like '%" + txtPpclient.Text.Trim + "%' OR B.LocationID Like '%" + txtPpclient.Text.Trim + "%' union (SELECT D.PersonID as ID,C.name,C.accountid,C.contactperson, D.LocationId, D.Address1 as ServiceAddress1 From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') AND C.AccountID like '" + txtPpclient.Text.Trim + "%' OR D.PersonID  like '%" + txtPpclient.Text.Trim + "%' OR C.NAME Like '%" + txtPpclient.Text.Trim + "%' OR D.LocationID Like '%" + txtPpclient.Text.Trim + "%') ORDER BY AccountId, LocationId

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName, LocationId"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName, LocationId"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName, LocationId"

                    End If
                Else
                    If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') order by ServiceName, LocationId"
                    ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
                        SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by ServiceName, LocationId"
                    Else
                        SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc,  B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') UNION  SELECT 'PERSON' as AccountType, C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') order by ServiceName, LocationId"

                    End If

                End If
               

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            End If

            txtCustomerSearch.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnClient1_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtAccountType_SelectedIndexChanged(sender As Object, e As EventArgs) Handles txtAccountType.SelectedIndexChanged
        txtAccountIdBilling.Text = ""
        txtAccountName.Text = ""
        txtCompanyGroup.Text = ""

        txtBillAddress.Text = ""
        txtBillBuilding.Text = ""
        txtBillStreet.Text = ""

        txtBillCountry.Text = ""
        txtBillPostal.Text = ""

    End Sub

    Protected Sub btnImport_Click(sender As Object, e As EventArgs) Handles btnImport.Click
        lblAlert.Text = ""
        updPnlMsg.Update()

        lblAlert1.Text = ""
        'updpnlServiceRecs.Update()


        'updPnlMsg1.Update()
        'If String.IsNullOrEmpty(txtAccountIdBilling.Text) = True Then
        '    lblAlert.Text = "PLEASE SELECT ACCOUNT ID"
        '    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        '    Exit Sub
        'End If

        If ddlContractGroupBilling.SelectedIndex = 0 Then
            lblAlert.Text = "SELECT CONTRACT GROUP FIRST"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            Exit Sub
        End If


        SqlDSStaffID.SelectCommand = "SELECT StaffId,Name FROM tblstaff where Status ='O' ORDER BY STAFFID"

        If String.IsNullOrEmpty(txtCompanyGroup.Text.Trim) = False Then
            ddlCompanyGrp.Text = txtCompanyGroup.Text
        End If

        If String.IsNullOrEmpty(txtAccountType.Text.Trim) = False Then
            ddlContactType.Text = txtAccountType.Text
        End If

        ddlContractGroup.Text = ddlContractGroupBilling.Text
        ddlContractGroup.Enabled = False
        txtAccountId.Text = txtAccountIdBilling.Text
        txtClientName.Text = txtAccountName.Text
        txtLocationId.Text = txtLocationIdSelected.Text

        'ddlCompanyGrp.Enabled = False
        'ddlContactType.Enabled = False
        'txtAccountId.Enabled = False
        'txtClientName.Enabled = False
        'btnClient.Visible = False
        gvLocation.DataBind()


        'Dim Query As String


        'Query = "SELECT ContractNo FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" & txtAccountIdBilling.Text & "' order by ContractNo "
        'PopulateDropDownList(Query, "ContractNo", "ContractNo", ddlContractNo)


        'ddlContractNo.DataSource = "SQLDSContractNo"
        'ddlContractNo.DataTextField = "ContractNo"
        'ddlContractNo.DataValueField = "ContractNo"
        'ddlContractNo.DataBind()
        mdlImportServices.Show()
    End Sub


    Function IsServiceRecordExists(lServiceRecord As String) As String
        Dim lInvoiceNo As String
        lInvoiceNo = ""

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command11 As MySqlCommand = New MySqlCommand

        command11.CommandType = CommandType.Text

        If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
            command11.CommandText = "SELECT a.SalesOrderNumber FROM tblSalesOrder a, tblSalesOrderDetail b where a.SalesOrderNumber = b.SalesOrderNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        Else
            command11.CommandText = "SELECT a.SalesOrderNumber FROM tblSalesOrder a, tblSalesOrderDetail b where a.SalesOrderNumber <> '" & txtInvoiceNo.Text & "' and a.SalesOrderNumber = b.SalesOrderNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        End If

        ''If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        'command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V' limit 1"
        ''Else
        ''command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V'"
        ''End If

        command11.Connection = conn

        Dim dr As MySqlDataReader = command11.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If Not IsDBNull(dt.Rows(0)("SalesOrderNumber")) Then
                'If dt.Rows(0)("InvoiceNumber").ToString() Then
                lInvoiceNo = dt.Rows(0)("SalesOrderNumber").ToString()
                'GoTo nextrec
            End If
        End If

        conn.Close()
        conn.Dispose()
        command11.Dispose()
        dt.Dispose()
        command11.Dispose()
        dt.Dispose()
        Return lInvoiceNo
    End Function

    Function IsInvoiceNoExistsForManual(lServiceRecord As String) As String
        Dim lInvoiceNo As String
        lInvoiceNo = ""

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command11 As MySqlCommand = New MySqlCommand

        command11.CommandType = CommandType.Text

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'Else
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'End If

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        command11.CommandText = "SELECT a.SalesOrderNumber FROM tblSalesOrder a, tblSalesOrderDetail b where a.SalesOrderNumber = b.SalesOrderNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V' limit 1"
        'Else
        'command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V'"
        'End If

        command11.Connection = conn

        Dim dr As MySqlDataReader = command11.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If Not IsDBNull(dt.Rows(0)("SalesOrderNumber")) Then
                lInvoiceNo = dt.Rows(0)("SalesOrderNumber").ToString()
            End If
        End If

        conn.Close()
        conn.Dispose()

        command11.Dispose()
        dt.Dispose()
        command11.Dispose()
        dt.Dispose()
        Return lInvoiceNo
    End Function

    Function IsServiceRecordExistsForManual(lServiceRecord As String) As String
        Dim lInvoiceNo As String
        lInvoiceNo = ""

        Dim conn As MySqlConnection = New MySqlConnection()
        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command11 As MySqlCommand = New MySqlCommand

        command11.CommandType = CommandType.Text

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'Else
        '    command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus = 'O'"
        'End If

        'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = True Then
        command11.CommandText = "SELECT RecordNo as RecNo from tblServiceRecord where ((Status = 'O') or (Status ='P')) and (Billamount - Billedamt) = 0 and RecordNo  = '" & lServiceRecord & "' limit 1"
        'Else
        'command11.CommandText = "SELECT a.InvoiceNumber FROM tblSales a, tblSalesDetail b where a.InvoiceNumber <> '" & txtInvoiceNo.Text & "' and a.InvoiceNumber = b.InvoiceNumber and b.RefType = '" & lServiceRecord & "' and a.PostStatus <> 'V'"
        'End If

        command11.Connection = conn

        Dim dr As MySqlDataReader = command11.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If Not IsDBNull(dt.Rows(0)("RecNo")) Then
                'If dt.Rows(0)("InvoiceNumber").ToString() Then
                lInvoiceNo = dt.Rows(0)("RecNo").ToString()
                'GoTo nextrec
            End If
        End If

        conn.Close()
        conn.Dispose()

        command11.Dispose()
        dt.Dispose()
        command11.Dispose()
        dt.Dispose()
        Return lInvoiceNo
    End Function
    Protected Sub btnClose_Click(sender As Object, e As EventArgs) Handles btnClose.Click
        txtClientFrom.Text = ""
        mdlImportServices.Hide()
    End Sub

    Protected Sub btnImportService_Click(sender As Object, e As EventArgs) Handles btnImportService.Click
        Try
            lblAlert.Text = ""
            lblAlert1.Text = ""
            txtClientFrom.Text = ""

            Dim GSTable As Decimal = 0.0
            ''''''''''''''''''''''

            'SetRowDataServiceRecs()
            Dim totalRows As Long
            totalRows = 0

            'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableServiceRec"), DataTable)

            'If tableAdd1 IsNot Nothing Then

            For rowIndex1 As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect1 As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGV"), CheckBox)
                If (TextBoxchkSelect1.Checked = True) Then
                    totalRows = totalRows + 1
                    GoTo insertRec2
                End If
            Next rowIndex1
            'End If


            If totalRows = 0 Then
                mdlImportServices.Show()
                Dim message As String = "alert('PLEASE SELECT A RECORD')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
                'lblAlert.Text = "PLEASE SELECT A RECORD"
                'lblAlert.Focus()
                'updPnlMsg.Update()

                Exit Sub
            End If
            ''''''''''''''''''''''''''''''''''

            'If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            '    txtCompanyGroup.Text = ddlCompanyGrpII.Text
            '    'ddlContactType.Text = txtAccountType.Text
            '    txtAccountIdBilling.Text = txtAccountIdII.Text
            '    txtAccountName.Text = txtClientNameII.Text

            '    ddlCompanyGrpII.Enabled = False
            '    ddlContactType.Enabled = False
            '    txtAccountIdII.Enabled = False
            '    txtClientNameII.Enabled = False
            '    btnClient.Visible = False
            'Else
            '    'ddlCompanyGrp.Text = txtCompanyGroup.Text
            '    'txtAccountId.Text = txtAccountIdBilling.Text
            '    'txtClientName.Text = txtAccountName.Text

            '    'ddlCompanyGrp.Enabled = True
            '    'ddlContactType.Enabled = True
            '    'txtAccountId.Enabled = True
            '    'txtClientName.Enabled = True
            '    'btnClient.Visible = True

            'End If
insertRec2:
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            conn.Open()
            Dim sql As String
            sql = ""


            'If conn.State = ConnectionState.Open Then
            '    conn.Close()
            'End If
            'conn.Close()


            'Start: Populate the grid
            'txtRcnoServiceRecord.Text = lblid14.Text
            'txtRcnoServiceRecordDetail.Text = lblid15.Text
            'txtContractNo.Text = lblid22.Text
            'txtRcnoInvoice.Text = lblid17.Text
            ''txtRowSelected.Text = rowindex1.ToString
            'txtRcnoServiceBillingDetail.Text = lblid18.Text
            'txtRcnotblServiceBillingDetail.Text = lblid18.Text

            If String.IsNullOrEmpty(txtBatchNo.Text) = True Or txtBatchNo.Text = "0" Then
                txtBatchNo.Text = txtRcnotblServiceBillingDetail.Text
            End If
            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            If grvBillingDetails.Rows.Count = 0 Then
                For i As Integer = 0 To grvBillingDetails.Rows.Count - 1
                    dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                    drCurrentRowLoc = dtScdrLoc.NewRow()
                    ViewState("CurrentTableBillingDetailsRec") = dtScdrLoc
                    grvBillingDetails.DataSource = dtScdrLoc
                    grvBillingDetails.DataBind()

                    SetPreviousDataBillingDetailsRecs()
                Next i


                FirstGridViewRowBillingDetailsRecs()
            End If


            txtInvoiceAmount.Text = "0.00"
            txtGSTAmount.Text = "0.00"
            txtNetAmount.Text = "0.00"
            txtDiscountAmount.Text = "0.00"
            txtAmountWithDiscount.Text = "0.00"

            If String.IsNullOrEmpty(txtRcnoServiceBillingDetail.Text) = True Then
                txtRcnoServiceBillingDetail.Text = "0"
            End If


            Dim rowselected As Integer
            'rowselected = 0

            rowselected = 0

            rowselected = grvBillingDetails.Rows.Count - 1 '26.10.17

            For rowIndex As Integer = 0 To grvServiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect As CheckBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)

                If (TextBoxchkSelect.Checked = True) Then

                    Dim qry As String
                    qry = ""

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text
                    'Header

                    Dim lblid24 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceRecordNoGV"), TextBox)


                    '''' Start:Check for Duplicate Service Record


                    For i As Integer = 0 To grvBillingDetailsNew.Rows.Count - 1
                        Dim TextBoxServiceRecordBillingNew As TextBox = CType(grvBillingDetailsNew.Rows(i).Cells(0).FindControl("txtServiceRecordGVB"), TextBox)
                        If TextBoxServiceRecordBillingNew.Text.Trim = lblid24.Text.Trim Then
                            GoTo nextrec
                        End If
                    Next


                    For j As Integer = 0 To grvBillingDetails.Rows.Count - 1
                        Dim TextBoxServiceRecordBilling As TextBox = CType(grvBillingDetails.Rows(j).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                        If TextBoxServiceRecordBilling.Text.Trim = lblid24.Text.Trim Then
                            GoTo nextrec
                        End If
                    Next

                    '''' End:Check for Duplicate Service Record

                    '''''''''''''''''''''''''
                    'If String.IsNullOrEmpty(txtInvoiceNo.Text.Trim) = False Then
                    '    Dim command11 As MySqlCommand = New MySqlCommand

                    '    command11.CommandType = CommandType.Text
                    '    command11.CommandText = "SELECT count(*) as totcount FROM tblSalesDetail where RefType = '" & lblid24.Text & "' and  InvoiceNumber = '" & txtInvoiceNo.Text & "'"
                    '    command11.Connection = conn

                    '    Dim dr As MySqlDataReader = command11.ExecuteReader()
                    '    Dim dt As New DataTable
                    '    dt.Load(dr)

                    '    If dt.Rows.Count > 0 Then
                    '        If dt.Rows(0)("totcount").ToString() > 0 Then
                    '            GoTo nextrec
                    '        End If
                    '    End If


                    '    command11.Dispose()
                    '    dt.Dispose()
                    'End If

                    Dim lInvoiceNoExists As String

                    lInvoiceNoExists = ""
                    lInvoiceNoExists = IsServiceRecordExists(lblid24.Text)

                   
                    If String.IsNullOrEmpty(lInvoiceNoExists.Trim) = False Then
                        lblAlert1.Text = "SERVICE RECORD '" & lblid24.Text & "' already exists in OPEN Invoice No. '" & lInvoiceNoExists & "'"
                        mdlImportServices.Show()
                        Exit Sub

                    End If

                    ''''''''''''''''''''''''''
                    AddNewRowBillingDetailsRecs()

                    rowselected = rowselected + 1

                    Dim lblid13 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtToBillAmtGV"), TextBox)
                    Dim lblid14 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    Dim lblid25 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtStatusGV"), TextBox)
                    Dim lblid26 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    Dim lblid27 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    Dim lblid28 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    Dim lblid29 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceLocationGroupGV"), TextBox)

                    Dim lblid18 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    Dim lblid19 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    'Dim lblid22 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    Dim lblid30 As TextBox = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtNotesGV"), TextBox)


                    Dim command1 As MySqlCommand = New MySqlCommand
                    command1.CommandType = CommandType.Text


                    If lblid25.Text = "P" Then
                        command1.CommandText = "SELECT Description,ProductCode,COACode,COADescription FROM tblbillingproducts where ProductCode = 'IN-SRV'"
                    ElseIf lblid25.Text = "O" Then
                        command1.CommandText = "SELECT Description,ProductCode,COACode,COADescription FROM tblbillingproducts where ProductCode = 'IN-DEF'"
                    Else
                        command1.CommandText = "SELECT Description,ProductCode,COACode,COADescription FROM tblbillingproducts where ProductCode = 'IN-COO'"
                    End If

                    command1.Connection = conn

                    Dim dr1 As MySqlDataReader = command1.ExecuteReader()
                    Dim dt1 As New DataTable
                    dt1.Load(dr1)

                    Dim TextBoxSelectRecord As CheckBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("chkSelectRecGV"), CheckBox)
                    TextBoxSelectRecord.Checked = True

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                    TextBoxItemType.Text = "SERVICE"
                    TextBoxItemType.Enabled = False

                    Dim TextBoxItemCode As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemCodeGV"), DropDownList)

                    Dim Query1 As String
                    'TextBoxItemCode.Items.Clear()
                    Query1 = "Select Description from tblbillingproducts  "
                    PopulateDropDownList(Query1, "Description", "Description", TextBoxItemCode)

                    TextBoxItemCode.Text = dt1.Rows(0)("Description").ToString().Trim
                    TextBoxItemCode.Enabled = False



                    Dim TextBoxItemDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtItemDescriptionGV"), TextBox)
                    TextBoxItemDescription.Text = dt1.Rows(0)("ProductCode").ToString().Trim

                    '''''''''''''''''''''''''''''''

                    'Dim command10 As MySqlCommand = New MySqlCommand
                    'command10.CommandType = CommandType.Text
                    'command10.CommandText = "SELECT Rcno, Status, ContractNo, Description, ServiceDate, BillAmount, LocationID, ServiceLocationGroup, Notes FROM tblservicerecord where RecordNo =@RecordNo"
                    'command10.Parameters.AddWithValue("@RecordNo", Convert.ToString(lblid24.Text))
                    'command10.Connection = conn

                    'Dim dr10 As MySqlDataReader = command10.ExecuteReader()
                    'Dim dt10 As New DataTable
                    'dt10.Load(dr10)


                    'Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDescriptionGV"), TextBox)
                    'TextBoxDescription.Text = lblid24.Text & ", " & lblid14.Text & ", " & dt10.Rows(0)("Notes").ToString()

                    Dim TextBoxDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDescriptionGV"), TextBox)
                    TextBoxDescription.Text = lblid24.Text & ", " & lblid14.Text & ", " & lblid30.Text

                    ''''''''''''''''''''''''''''''

                    'Dim TextBoxLocationID As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtBoxLocationIDGV"), TextBox)
                    'TextBoxLocationID.Text = dt10.Rows(0)("LocationId").ToString()

                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                    TextBoxOtherCode.Text = dt1.Rows(0)("COACode").ToString()

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                    'Dim TextBoxGLDescription As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGV"), TextBox)
                    'TextBoxGLDescription.Text = dt1.Rows(0)("COADescription").ToString()

                    Dim TextBoxUOM As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtUOMGV"), DropDownList)
                    'TextBoxUOM.Text = "NO"
                    TextBoxUOM.SelectedIndex = 1

                    Dim TextBoxQty As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtQtyGV"), TextBox)
                    TextBoxQty.Text = "1"
                    TextBoxQty.Enabled = False

                    ''''''''''''''''''''''''''' 071218

                    Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    TextBoxRcnoInvoice.Text = "0"


                    Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    TextBoxLocationId.Text = lblid28.Text
                    'TextBoxLocationId.Text = dt10.Rows(0)("LocationId").ToString()

                    Dim TextBoxServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).FindControl("txtServiceLocationGroupGV"), TextBox)
                    TextBoxServiceLocationGroup.Text = lblid29.Text


                    Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    TextBoxServiceDate.Text = lblid14.Text

                    Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    TextBoxBillingFrequency.Text = lblid18.Text

                    Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    TextBoxServiceBy.Text = lblid19.Text

                    Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                    TextBoxTaxCode.Text = txtGST.Text

                    Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    TextBoxContractNo.Text = Convert.ToString(lblid26.Text)

                    Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                    TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)

                    Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                    TextBoxServiceRecord.Text = Convert.ToString(lblid24.Text)
                    TextBoxServiceRecord.Enabled = False

                    Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    TextBoxRcnoServiceRecord.Text = Convert.ToString(lblid27.Text)

                    '''''''''''''''''''''''''''''' 071218

                    Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                    Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                    Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscAmountGV"), TextBox)


                    If chkGSTInclusive.Checked = False Then

                        'Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxPriceWithDisc.Text = lblid13.Text

                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxPricePerUOM.Text = lblid13.Text

                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOriginalBillAmountGV"), TextBox)
                        TextBoxOriginalBillAmount.Text = lblid13.Text


                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2"))
                        'TextBoxGSTAmt.Text = TruncateDecimal((Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01), 2)

                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = lblid13.Text

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))


                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        TextBoxDiscPerc.Text = "0.00"

                        TextBoxDiscAmount.Text = "0.00"

                        txtInvoiceAmount.Text = Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        txtDiscountAmount.Text = Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
                        End If

                        txtGSTAmount.Text = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                        txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")


                    Else

                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'TextBoxTotalPriceWithGST.Text = Convert.ToString(Convert.ToDecimal(TextBoxPricePerUOM.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text))
                        TextBoxTotalPriceWithGST.Text = lblid13.Text

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        'TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2"))
                        TextBoxGSTAmt.Text = Convert.ToString(Convert.ToDecimal(Convert.ToDecimal(lblid13.Text) * Convert.ToDecimal(txtGST1.Text) / (100 + Convert.ToDecimal(txtGST1.Text))).ToString("N2"))


                        Dim TextBoxPricePerUOM As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
                        TextBoxPricePerUOM.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))

                        'Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                        TextBoxPriceWithDisc.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))


                        Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtOriginalBillAmountGV"), TextBox)
                        TextBoxOriginalBillAmount.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))



                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N4")


                        'Dim TextBoxTotalPrice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceGV"), TextBox)
                        TextBoxTotalPrice.Text = Convert.ToString(Convert.ToDecimal(TextBoxTotalPriceWithGST.Text) - Convert.ToDecimal(TextBoxGSTAmt.Text))

                        Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        TextBoxDiscPerc.Text = "0.00"

                        TextBoxDiscAmount.Text = "0.00"

                        txtInvoiceAmount.Text = Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                        txtDiscountAmount.Text = Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)
                        txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                        If TextBoxTaxCode.Text = "SR" Then
                            GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
                        End If

                        txtGSTAmount.Text = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                        txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
                    End If


                    'Dim TextBoxContractNo As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtContractNoGV"), TextBox)
                    'TextBoxContractNo.Text = Convert.ToString(lblid26.Text)

                    'Dim TextBoxServiceStatus As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceStatusGV"), TextBox)
                    'TextBoxServiceStatus.Text = Convert.ToString(lblid25.Text)

                    'Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceRecordGV"), TextBox)
                    'TextBoxServiceRecord.Text = Convert.ToString(lblid24.Text)
                    'TextBoxServiceRecord.Enabled = False

                    'Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoServiceRecordGV"), TextBox)
                    'TextBoxRcnoServiceRecord.Text = Convert.ToString(lblid27.Text)

                    'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                    'TextBoxDiscPerc.Text = "0.00"

                    'Dim TextBoxDiscAmount As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtDiscAmountGV"), TextBox)
                    'TextBoxDiscAmount.Text = "0.00"

                    'Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    'TextBoxRcnoInvoice.Text = "0"


                    'Dim TextBoxLocationId As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtLocationIdGV"), TextBox)
                    'TextBoxLocationId.Text = lblid28.Text
                    ''TextBoxLocationId.Text = dt10.Rows(0)("LocationId").ToString()

                    'Dim TextBoxServiceLocationGroup As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).FindControl("txtServiceLocationGroupGV"), TextBox)
                    'TextBoxServiceLocationGroup.Text = lblid29.Text


                    'Dim TextBoxServiceDate As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceDateGV"), TextBox)
                    'TextBoxServiceDate.Text = lblid14.Text

                    'Dim TextBoxBillingFrequency As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtBillingFrequencyGV"), TextBox)
                    'TextBoxBillingFrequency.Text = lblid18.Text

                    'Dim TextBoxServiceBy As TextBox = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtServiceByGV"), TextBox)
                    'TextBoxServiceBy.Text = lblid19.Text

                    'Dim TextBoxTaxCode As DropDownList = CType(grvBillingDetails.Rows(rowselected - 1).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)


                    'txtInvoiceAmount.Text = Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPrice.Text)
                    'txtDiscountAmount.Text = Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmount.Text)
                    'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")

                    'If TextBoxTaxCode.Text = "SR" Then
                    '    GSTable = GSTable + Convert.ToDecimal(TextBoxPriceWithDisc.Text)
                    'End If

                    'txtGSTAmount.Text = (Convert.ToDecimal(GSTable) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
                    'txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")

                    'command10.Dispose()
                    'dt10.Dispose()
                    command1.Dispose()
                    dt1.Dispose()

                End If
nextrec:
            Next rowIndex
            'End If

            conn.Close()
            conn.Dispose()

            CalculateTotalPrice()

            AdjustGStAmount()
            If rowselected = 0 Then
                lblAlert1.Text = "SELECT RECORDS TO IMPORT"
                Exit Sub
            End If

            If txtPostStatus.Text <> "P" Then
                grvBillingDetails.Enabled = True
                btnSave.Enabled = True
            End If


            'lbltotalservices.Text = Convert.ToInt32(rowselected)

            grvBillingDetailsdiv.Focus()
            updpnlServiceRecs.Update()

            'End: Billing Details
            'updPanelSave.Update()
            'updPanelInvoice.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            'End: Populate the grid

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert1.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnImportService_Click", ex.Message.ToString, "")
        End Try
    End Sub

   
    Protected Sub GrdViewGL_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GrdViewGL.SelectedIndexChanged
        Dim xrowNumber1 = txtxRow.Text

        If txtGLFrom.Text = "InvoiceB" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtOtherCodeGVB"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtGLDescriptionGVB"), TextBox)

            If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
            End If

            If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
            End If
        ElseIf txtGLFrom.Text = "Invoice" Then
            Dim lblid1 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtOtherCodeGV"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtGLDescriptionGV"), TextBox)

            If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
            End If

            If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
            End If
        ElseIf txtGLFrom.Text = "Receipt" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsQR.Rows(xrowNumber1).FindControl("txtOtherCodeGVQR"), TextBox)
            Dim lblid2 As TextBox = CType(grvBillingDetailsQR.Rows(xrowNumber1).FindControl("txtGLDescriptionGVQR"), TextBox)

            If GrdViewGL.SelectedRow.Cells(1).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = GrdViewGL.SelectedRow.Cells(1).Text
            End If

            If GrdViewGL.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid2.Text = " "
            Else
                lblid2.Text = GrdViewGL.SelectedRow.Cells(2).Text
            End If
            mdlQuickReceipt.Show()
        End If

        'txtIsPopup.Text = "Location"
        'mdlImportServices.Show()
    End Sub

    Protected Sub txtPopUpGL_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpGL.TextChanged
        Try
            If txtPopUpGL.Text.Trim = "" Then
                MessageBox.Message.Alert(Page, "Please enter Team name", "str")
            Else
                'SqlDSTeam.SelectCommand = "SELECT distinct * From tblTeam where 1=1 and TeamName like '" + ViewState("TeamCurrentAlphabet") + "%' And upper(TeamName) Like '%" + txtPopUpTeam.Text.Trim.ToUpper + "%'"
                SqlDSGL.SelectCommand = "Select COACode, Description, GLType from tblchartofaccounts where  COACode like '%" + txtPopUpGL.Text.Trim.ToUpper + "%' order by COACode "

                SqlDSGL.DataBind()
                grvGL.DataBind()
                'im()
                'imgBtnGL_ModalPopupExtender.show()
                'imgBtnGL_ModalPopupExtender.mdl imgBtnGL_ModalPopupExtender.mdlPopUpTeam.Show()
                txtIsPopup.Text = "GL"
                'IsPopUpTeam = "Y"
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtPopUpGL_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnGLB_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "InvoiceB"
        updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        imgBtnGL_ModalPopupExtender.Show()
    End Sub

    Protected Sub btnGL_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "Invoice"
        updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        imgBtnGL_ModalPopupExtender.Show()
    End Sub

    Protected Sub btnGLQR_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "Receipt"
        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        'Dim lblid1 As TextBox = CType(xrow1.FindControl("txtOtherCodeGV"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()
        mdlQuickReceipt.Hide()
        imgBtnGL_ModalPopupExtender.Show()
    End Sub


    Protected Sub btnContractGVB_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "ContractGVB"

        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim lblid1 As TextBox = CType(xrow1.FindControl("txtItemTypeGVB"), TextBox)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            lblAlert.Text = "SELECT ACCOUNT ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If (lblid1.Text.Trim) <> "OTHERS" Then
            lblAlert.Text = "CONTRACT SELECTION IS FOR ITEM TYPE 'OTHERS' ONLY"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        '''''''''''''''''''''''''''''''''''''''''''''''
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNoGVB"
        Try

            'If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If

            '    SqlDSClient.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If
            '    'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            '    SqlDSContractNo.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'End If


            'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            'Else
            SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            'End If
            'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()
            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnContractNoGV_Click", ex.Message.ToString, "")
        End Try


    End Sub

    Protected Sub btnContractGV_Click(sender As Object, e As EventArgs)
        txtGLFrom.Text = "ContractGV"
        'updPnlQR.Update()
        Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
        Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGV"), DropDownList)

        Dim rowindex1 As Integer = xrow1.RowIndex
        txtxRow.Text = rowindex1
        updPanelSave.Update()

        If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
            lblAlert.Text = "SELECT ACCOUNT ID"
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If

        If (lblid1.Text.Trim) <> "OTHERS" Then
            lblAlert.Text = "CONTRACT SELECTION IS FOR ITEM TYPE 'OTHERS' ONLY"
            updPnlMsg.Update()
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            Exit Sub
        End If
        '''''''''''''''''''''''''''''''''''''''''''''''
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNoGV"
        Try

            'If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If

            '    SqlDSClient.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
            '    txtPopUpContractNo.Text = ddlContractNo.Text

            '    If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            '    Else
            '        SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by ContractNo"
            '    End If
            '    'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            '    SqlDSContractNo.DataBind()
            '    gvPopUpContractNo.DataBind()
            '    updPanelInvoice.Update()
            'End If


            'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
            '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"
            'Else
            SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            'End If
            'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()
            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnContractNoGV_Click", ex.Message.ToString, "")
        End Try




        ''''''''''''''''''''''''''''''''''''''''''''''''

        'imgBtnGL_ModalPopupExtender.Show()
    End Sub
    Protected Sub btnPopUpGLReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpGLReset.Click
        txtPopUpGL.Text = "Search Here for GL Code or Description"
        SqlDSGL.SelectCommand = "SELECT * From tblChartOfAccounts order by COACode"
        SqlDSGL.DataBind()
        grvGL.DataBind()

        imgBtnGL_ModalPopupExtender.Show()
        txtIsPopup.Text = "GL"
    End Sub


    Protected Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click

        lblAlert.Text = ""
        If txtRcno.Text = "" Then
            lblAlert.Text = "SELECT RECORD TO PRINT"
            Return
        End If

        If txtPostStatus.Text = "O" Then
            lblAlert.Text = "ONLY Posted Invoices can be Printed"
            Return
        End If
        Session("PrintType") = "Print"

        Session("gridsqlinvoiceprint") = txt.Text

        Session("printfrom") = "serviceprint"
        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
            Session("InvoiceNumber") = """" + txtInvoiceNo.Text + """"
        End If
        Session("InvoiceNo") = txtInvoiceNo.Text

      
     
        mdlPopupPrint.Show()

    End Sub

    'Protected Sub btnPrintReport_Click(sender As Object, e As EventArgs) Handles btnPrintReport.Click

    '    If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
    '        Session("InvoiceNumber") = txtInvoiceNo.Text
    '    End If

    '    'Response.Redirect("RV_TaxInvoice_Format1.aspx")


    '    'Session.Add("SvcRecordNo", txtSvcRecord.Text)
    '    'Session.Add("Query", txt.Text)
    '    'Session.Add("SvcRcNo", txtRcno.Text)
    '    If RadioButtonList1.SelectedIndex = 0 Then
    '        Response.Redirect("RV_TaxInvoice_Format1.aspx")
    '    End If

    '    If RadioButtonList1.SelectedIndex = 1 Then
    '        Response.Redirect("RV_TaxInvoice_Format2.aspx")
    '    End If

    '    If RadioButtonList1.SelectedIndex = 2 Then
    '        Response.Redirect("RV_TaxInvoice_Format3.aspx")
    '    End If
    'End Sub

    Protected Sub gvClient_PageIndexChanging1(sender As Object, e As GridViewPageEventArgs) Handles gvClient.PageIndexChanging
        gvClient.PageIndex = e.NewPageIndex

        If txtClientFrom.Text = "ImportService" Then
            SqlDSClient.SelectCommand = txtImportService.Text
        End If

        If txtSearch.Text = "CustomerSearch" Then
            SqlDSClient.SelectCommand = txtCustomerSearch.Text
        End If

        If txtSearch.Text = "InvoiceSearch" Then
            SqlDSClient.SelectCommand = txtInvoiceSearch.Text
        End If

        'SqlDSClient.DataBind()
        'gvClient.DataBind()
        'mdlPopUpClient.Show()
        'txtIsPopup.Text = "Client"


        SqlDSClient.DataBind()
        gvClient.DataBind()
        mdlPopUpClient.Show()
    End Sub

    Protected Sub grvBillingDetailsNew_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles grvBillingDetailsNew.RowDataBound
        Try

            If e.Row.RowType = DataControlRowType.DataRow Then

                If txtPostStatus.Text <> "P" Then
                    For Each cell As DataControlFieldCell In e.Row.Cells
                        ' check all cells in one row
                        For Each control As Control In cell.Controls

                            Dim button As ImageButton = TryCast(control, ImageButton)
                            If button IsNot Nothing AndAlso button.CommandName = "Delete" Then
                                'button.OnClientClick = "if (!confirm('Are you sure to DELETE this record?')) return;"
                                button.OnClientClick = "Confirm()"

                            End If
                        Next control

                    Next cell
                End If

            End If

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub grvBillingDetailsNew_RowDeleted(sender As Object, e As GridViewDeletedEventArgs) Handles grvBillingDetailsNew.RowDeleted
        If grvBillingDetailsNew.Rows.Count = 0 And grvBillingDetails.Rows.Count = 0 Then
            grvBillingDetails.ShowHeader = True
            FirstGridViewRowBillingDetailsRecs()
            updPanelInvoice.Update()
        End If
        'FirstGridViewRowBillingDetailsRecs
    End Sub

    Protected Sub grvBillingDetailsNew_RowDeleting(sender As Object, e As GridViewDeleteEventArgs) Handles grvBillingDetailsNew.RowDeleting
        'Try

        '    'If txtRecordDeleted.Text = "Y" Then
        '    '    txtRecordDeleted.Text = "N"
        '    '    Exit Sub
        '    'End If

        '    lblAlert.Text = ""
        '    Dim confirmValue As String
        '    confirmValue = ""

        '    confirmValue = Request.Form("confirm_value")
        '    If Right(confirmValue, 3) = "Yes" Then

        '        'SetRowDataBillingDetailsRecs()
        '        'Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRec"), DataTable)
        '        Dim drCurrentRow As DataRow = Nothing
        '        Dim rowIndex As Integer = Convert.ToInt32(e.RowIndex)

        '        Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)
        '        'Dim TextBoxRcnoServiceRecord As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtRcnoServiceRecordGVB"), TextBox)
        '        'Dim TextBoxServiceRecord As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtServiceRecordGVB"), TextBox)

        '        'Dim TextBoxServiceValue As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtPricePerUOMGVB"), TextBox)
        '        'Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsNew.Rows(rowIndex).Cells(5).FindControl("txtItemDescriptionGVB"), TextBox)

        '        If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
        '            If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then


        '                'If TextBoxItemCode.Text = "IN-DEF" Or TextBoxItemCode.Text = "IN-SRV" Then
        '                '    'UpdateServiceRecord(TextBoxRcnoServiceRecord.Text, TextBoxServiceValue.Text, "Delete")
        '                '    UpdateServiceRecord(TextBoxServiceRecord.Text, TextBoxServiceValue.Text, "Delete")
        '                'End If


        '                Dim conn As MySqlConnection = New MySqlConnection(constr)
        '                conn.Open()


        '                Dim command4 As MySqlCommand = New MySqlCommand
        '                command4.CommandType = CommandType.Text

        '                'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
        '                Dim qry4 As String = "Delete from tblsalesdetail where rcno = " & TextBoxRcno.Text
        '                'Dim qry4 As String = "Delete from tblsalesdetail "
        '                command4.CommandText = qry4
        '                command4.Connection = conn
        '                command4.ExecuteNonQuery()

        '                conn.Close()
        '                command4.Dispose()

        '                'Dim rowIndex1 As Integer = Convert.ToInt32(e.RowIndex)
        '                'grvBillingDetailsNew.DeleteRow(rowIndex1)
        '                'grvBillingDetailsNew


        '                'If grvBillingDetailsNew.Rows.Count > 0 Then
        '                '    grvBillingDetailsNew.Rows.Remove(grvBillingDetailsNew.Rows(rowIndex))
        '                '    drCurrentRow = dt.NewRow()
        '                '    'ViewState("CurrentTableBillingDetailsRec") = dt
        '                '    'grvBillingDetails.DataSource = dt
        '                grvBillingDetailsNew.DataBind()

        '                'End If

        '                'txtInvoiceNoSelected.Text = ""
        '                'updPanelInvoice.Update()
        '                'SqlDSSalesDetail.SelectCommand = "select * from tblSalesDetail where InvoiceNumber = '0'"
        '                'SqlDSSalesDetail.DataBind()
        '                ''grvBillingDetailsNew.SelectedIndex = -1
        '                ''grvBillingDetailsNew.re()

        '                'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        '                'grvBillingDetailsNew.DataBind()

        '                ''btnSaveInvoice_Click(sender, e)
        '                'txtInvoiceNoSelected.Text = ""

        '                'SqlDSSalesDetail.SelectCommand = "select * from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNoSelected.Text & "'"
        '                'SqlDSSalesDetail.DataBind()
        '                'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        '                'grvBillingDetailsNew.DataBind()
        '                ''updPanelInvoice.Update()
        '                ''updPnlSearch.Update()
        '                'updPnlBillingRecsNew.Update()

        '                ''Exit Sub
        '                'txtInvoiceNoSelected.Text = txtInvoiceNo.Text

        '                'SqlDSSalesDetail.SelectCommand = "select * from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNoSelected.Text & "'"
        '                SqlDSSalesDetail.DataBind()
        '                grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        '                grvBillingDetailsNew.DataBind()
        '                'updPanelInvoice.Update()
        '                'updPnlSearch.Update()
        '                updPnlBillingRecsNew.Update()
        '            End If
        '        End If

        '        'If dt.Rows.Count > 0 Then
        '        'dt.Rows.Remove(dt.Rows(rowIndex))
        '        'drCurrentRow = dt.NewRow()
        '        'ViewState("CurrentTableBillingDetailsRec") = dt
        '        'grvBillingDetails.DataSource = dt
        '        'grvBillingDetailsNew.DataBind()

        '        'SetPreviousData()
        '        'SetPreviousDataBillingDetailsRecs()

        '        'If dt.Rows.Count = 0 Then
        '        '    FirstGridViewRowBillingDetailsRecs()
        '        'End If


        '        ''''''''''''''''''''''''''
        '        'HasDuplicateServiceRecord = HighlightDuplicate(grvBillingDetails)

        '        'txtDuplicateServiceRecord.Text = "N"

        '        'If HasDuplicateServiceRecord = True Then
        '        '    txtDuplicateServiceRecord.Text = "Y"
        '        '    'Dim message As String = "alert('Duplicate Target/Pests has been selected!!!')"
        '        '    'ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
        '        '    lblAlert.Text = "Duplicate Target/Pests has been selected"
        '        '    Exit Sub
        '        'End If


        '        'Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

        '        'Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        '        'Dim rowindex1 As Integer = xrow1.RowIndex

        '        'If txtRecordAdded.Text = "N" Then
        '        '    btnAddDetail_Click(sender, e)
        '        'End If

        '        'txtRecordDeleted.Text = "Y"
        '        'UpdateTargetDescription()

        '        ''''''''''''''''''''''

        '        'End If

        '        'CalculateTotalPrice()

        '        'grvBillingDetailsNew.DataSource = "SqlDSSalesDetail"
        '        'grvBillingDetailsNew.DataBind()


        '        'CalculateTotalPrice()

        '        txtRcnoSelected.Text = txtRcno.Text
        '        btnQuickSearch_Click(sender, e)

        '        lblAlert.Text = "RECORD DELETED SUCCESSFULLY"
        '        updPnlMsg.Update()
        '        'updPanelInvoice.Update()
        '    End If


        'Catch ex As Exception
        '    Dim exstr As String
        '    exstr = ex.Message.ToString
        '    lblAlert.Text = exstr
        '    'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        'End Try
    End Sub

    Protected Sub btnClientSearch0_Click(sender As Object, e As ImageClickEventArgs) Handles btnClientSearch0.Click
        Try
            lblAlert.Text = ""
            'If String.IsNullOrEmpty(ddlContactTypeSearch.Text) Or ddlContactTypeSearch.Text = "--SELECT--" Then
            '    '  MessageBox.Message.Alert(Page, "Select Customer Type to proceed!!!", "str")
            '    lblAlert.Text = "SELECT ACCOUNT TYPE TO PROCEED"
            '    updPnlMsg.Update()
            '    Exit Sub
            'End If

            txtSearch.Text = "InvoiceSearch"
            If String.IsNullOrEmpty(txtClientNameSearch.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtClientNameSearch.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text


                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"") order by ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like """ + txtPopupClientSearch.Text + "%"" or C.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like """ + txtPopupClientSearch.Text + "%"" or A.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountId, C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like """ + txtPopupClientSearch.Text + "%"" or C.BillContactPerson like ""%" + txtPopupClientSearch.Text + "%"") order by BillingName"
                    End If

                End If


                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""
                txtPopupClientSearch.Text = ""

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup,  B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, .BillingName From tblperson C   where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName From tblCompany A where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or A.accountid like '" + txtPopupClientSearch.Text + "%' or A.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and (upper(C.BillingName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or C.accountid like '" + txtPopupClientSearch.Text + "%' or C.BillContactPerson like '%" + txtPopupClientSearch.Text + "%') order by BillingName"
                    End If
                End If

              

                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                updPanelInvoice.Update()
            End If
            mdlPopUpClient2.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnClientSearch0_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub SQLDSInvoice_Selected(sender As Object, e As SqlDataSourceStatusEventArgs) Handles SQLDSInvoice.Selected
        txtRowCount.Text = e.AffectedRows.ToString
    End Sub


    Protected Sub OnRowDataBoundg1(sender As Object, e As GridViewRowEventArgs) Handles GridView1.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."


            If txtDisplayRecordsLocationwise.Text = "N" Then

                e.Row.Cells(26).Visible = False
                GridView1.HeaderRow.Cells(26).Visible = False

            ElseIf txtDisplayRecordsLocationwise.Text = "Y" Then
                e.Row.Cells(26).Visible = True
                GridView1.HeaderRow.Cells(26).Visible = True
            End If


            If String.IsNullOrEmpty(txtSelectedRow.Text) = True Then
                If txtRcno.Text = e.Row.Cells(1).Text.Trim Then
                    isInPage = True
                    txtSelectedRow.Text = e.Row.RowIndex
                End If
            End If
        End If




    End Sub

    Protected Sub OnSelectedIndexChangedg1(sender As Object, e As EventArgs) Handles GridView1.SelectedIndexChanged

        For Each row As GridViewRow In GridView1.Rows
            'If row.RowIndex = GridView1.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = GridView1.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#AEE4FF")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next


    End Sub

    Protected Sub btnReverse_Click(sender As Object, e As EventArgs) Handles btnReverse.Click
        lblAlert.Text = ""
        lblMessage.Text = ""

        Try
            If String.IsNullOrEmpty(txtRcno.Text) = True Then
                lblAlert.Text = "PLEASE SELECT A REORD"
                Exit Sub

            End If

            mdlPopupConfirmReverse.Show()

            Dim confirmValue As String
            confirmValue = ""

            Exit Sub


            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            '    ''''''''''''''' Insert tblAR

            '    Dim conn As MySqlConnection = New MySqlConnection()

            '    conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            '    If conn.State = ConnectionState.Open Then
            '        conn.Close()
            '        conn.Dispose()
            '    End If
            '    conn.Open()


            '    '''''''''''''''

            '    Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            '    commandUpdateInvoice.CommandType = CommandType.Text
            '    Dim sqlUpdateInvoice As String = "Update tblsales set PostStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            '    commandUpdateInvoice.CommandText = sqlUpdateInvoice
            '    commandUpdateInvoice.Parameters.Clear()
            '    commandUpdateInvoice.Connection = conn
            '    commandUpdateInvoice.ExecuteNonQuery()

            '    ''''''''''''''''


            '    Dim command1 As MySqlCommand = New MySqlCommand
            '    command1.CommandType = CommandType.Text

            '    Dim qry1 As String = "DELETE from tblAR where VoucherNumber = '" & txtInvoiceNo.Text & "'"

            '    command1.CommandText = qry1
            '    'command1.Parameters.Clear()
            '    command1.Connection = conn
            '    command1.ExecuteNonQuery()

            '    Dim qryAR As String
            '    Dim commandAR As MySqlCommand = New MySqlCommand
            '    commandAR.CommandType = CommandType.Text

            '    ''Start:Loop thru' Credit values


            '    Dim commandValues As MySqlCommand = New MySqlCommand

            '    commandValues.CommandType = CommandType.Text
            '    'commandValues.CommandText = "SELECT *  FROM tblservicebillingdetailitem where BatchNo ='" & txtBatchNo.Text.Trim & "'"
            '    commandValues.CommandText = "SELECT *  FROM tblSalesDetail where InvoiceNumber ='" & txtInvoiceNo.Text.Trim & "'"
            '    commandValues.Connection = conn

            '    Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            '    Dim dtValues As New DataTable
            '    dtValues.Load(drValues)

            '    For Each row As DataRow In dtValues.Rows

            '        If Convert.ToDecimal(row("ValueBase")) > 0.0 Then

            '            If row("RefType") <> "--SELECT--" Then
            '                UpdateServiceRecord(row("RefType"), row("ValueBase"), row("CostCode"), "Delete")
            '            End If

            '        End If

            '    Next row

            '    ''End: Loop thru' Credit Values



            '    SQLDSInvoice.SelectCommand = txt.Text
            '    SQLDSInvoice.DataBind()
            '    GridView1.DataBind()

            '    CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)


            '    MakeMeNullBillingDetails()
            '    MakeMeNull()
            '    DisableControls()
            '    FirstGridViewRowGL()

            '    ''''''''''''''' Insert tblAR

            '    lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"

            '    lblAlert.Text = ""
            '    updPnlSearch.Update()
            '    updPnlMsg.Update()

            '    updpnlServiceRecs.Update()

            '    conn.Close()
            '    conn.Dispose()
            '    commandAR.Dispose()
            '    command1.Dispose()
            '    commandUpdateInvoice.Dispose()
            '    commandValues.Dispose()
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnReverse_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnChangeStatus_Click(sender As Object, e As EventArgs) Handles btnChangeStatus.Click
        mdlPopupStatus.Show()
    End Sub

    Protected Sub btnUpdateStatus_Click(sender As Object, e As EventArgs) Handles btnUpdateStatus.Click
        If ddlNewStatus.Text = txtDDLText.Text Then
            lblAlertStatus.Text = "SELECT NEW STATUS"
            mdlPopupStatus.Show()

            Return

        End If

        If ddlNewStatus.Text = txtPostStatus.Text Then
            lblAlertStatus.Text = "STATUS ALREADY UPDATED"
            mdlPopupStatus.Show()

            Return
        End If

        Try
            If ddlNewStatus.SelectedIndex > 0 Then
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                command.CommandText = "UPDATE tblSalesOrder SET PostStatus='" + ddlNewStatus.SelectedValue + "' where rcno=" & Convert.ToInt32(txtRcno.Text)
                command.Connection = conn
                command.ExecuteNonQuery()

                '   UpdateContractActSvcDate(conn)

                conn.Close()
                conn.Dispose()
                command.Dispose()

                'ddlStatus.Text = ddlNewStatus.Text
                txtPostStatus.Text = ddlNewStatus.SelectedValue
                ddlNewStatus.SelectedIndex = 0

                lblMessage.Text = "ACTION: STATUS UPDATED"
                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "CHST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountId.Text, "", txtRcno.Text)
                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "RECEIPT", txtReceiptNoQR.Text, "ADD/POST", Convert.ToDateTime(txtCreatedOn.Text), txtReceivedAmountQR.Text, 0, txtReceivedAmountQR.Text, txtAccountIdBilling.Text, "", txtRcno.Text)


                SQLDSInvoice.SelectCommand = txt.Text
                SQLDSInvoice.DataBind()
                GridView1.DataBind()

                InsertNewLog()
                'GridView1.DataSourceID = "SqlDataSource1"
                mdlPopupStatus.Hide()
            End If

        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnUpdateStatus_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub OnRowDataBoundgClient(sender As Object, e As GridViewRowEventArgs) Handles gvClient.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient(sender As Object, e As EventArgs) Handles gvClient.SelectedIndexChanged
        For Each row As GridViewRow In gvClient.Rows
            If row.RowIndex = gvClient.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgClient2(sender As Object, e As GridViewRowEventArgs) Handles gvClient2.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvClient2, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgClient2(sender As Object, e As EventArgs) Handles gvClient2.SelectedIndexChanged
        For Each row As GridViewRow In gvClient2.Rows
            If row.RowIndex = gvClient2.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub


    Protected Sub OnRowDataBoundgLoc(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvLocation, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgLoc(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvLocation.Rows
            If row.RowIndex = gvLocation.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub OnRowDataBoundgGL(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GrdViewGL, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgGL(sender As Object, e As EventArgs) Handles GrdViewGL.SelectedIndexChanged
        For Each row As GridViewRow In GrdViewGL.Rows
            If row.RowIndex = GrdViewGL.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    'Protected Sub btnQuickReceipt_Click(sender As Object, e As EventArgs) Handles btnQuickReceipt.Click
    'txtAccountIdBillingQR.Text = txtAccountIdBilling.Text
    'txtAccountNameQR.Text = txtAccountName.Text
    'txtReceiptDateQR.Text = txtInvoiceDate.Text
    'txtReceivedAmountQR.Text = txtBalanceBase.Text

    'If String.IsNullOrEmpty(txtReceiptDateQR.Text) = False Then
    '    txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
    'End If
    'updPnlQR.Update()

    'ddlCompanyGrpII.Text = txtCompanyGroup.Text
    'ddlContactType.Text = txtAccountType.Text
    'txtAccountIdII.Text = txtAccountIdBilling.Text
    'txtClientNameII.Text = txtAccountName.Text

    'ddlCompanyGrpII.Enabled = False
    'ddlContactType.Enabled = False
    'txtAccountIdII.Enabled = False
    'txtClientNameII.Enabled = False

    ''grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
    ''grvInvoiceRecDetails.DataBind()
    ' ''grvInvoiceRecDetails.DataBind()
    ' ''grvInvoiceRecDetails
    ' ''btnShowRecordsII_Click(sender, e)
    'updpnlInvoiceRecs.Update()
    'updpnlImportInovice.Update()

    ''    updpnlInvoiceRecs.Update()

    ''If grvInvoiceRecDetails.Rows.Count = 0 Then
    ''    btnShowRecordsII_Click(sender, e)
    ''    'updpnlInvoiceRecs.Update()
    ''End If


    'FirstGridViewRowBillingDetailsRecsQR()
    ''txtAccountNameQR.Attributes.Add("readonly", "readonly")
    ''txtRecordNoQR.Attributes.Add("readonly", "readonly")
    ''txtBankIDQR

    'mdlQuickReceipt.Show()
    'End Sub

    Protected Sub ddlPaymentModeQR_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlPaymentModeQR.SelectedIndexChanged
        Try
            lblAlertQR.Text = ""
            updPnlMsgQR.Update()

            'If ddlPaymentModeQR.Text = "CHEQUE" Then
            '    txtChequeNoQR.Attributes.Remove("readonly")
            '    txtChequeDateQR.Attributes.Remove("readonly")
            'Else
            '    txtChequeNoQR.Text = ""
            '    txtChequeDateQR.Text = ""

            '    txtChequeNoQR.Attributes.Add("readonly", "readonly")
            '    txtChequeDateQR.Attributes.Add("readonly", "readonly")
            'End If


            '''''''''''''''
            Dim lBankId As String = ""

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            Dim sql As String
            sql = ""
            sql = "Select DefaultBank from tblSettleType where SettleType = '" & ddlPaymentModeQR.Text & "'"

            Dim command1 As MySqlCommand = New MySqlCommand
            command1.CommandType = CommandType.Text
            command1.CommandText = sql
            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()

            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                If dt.Rows(0)("DefaultBank").ToString <> "" Then : lBankId = dt.Rows(0)("DefaultBank").ToString : End If
            End If
            conn.Close()
            conn.Dispose()
            command1.Dispose()
            dt.Dispose()
            Dim Query As String

            ddlBankCodeQR.Items.Clear()
            ddlBankCodeQR.Items.Add("--SELECT--")


            Query = "SELECT CONCAT(BankId, ' : ', Bank) AS codedes FROM tblBank  where BankId = '" & lBankId & "' ORDER BY BankId"
            PopulateDropDownList(Query, "codedes", "codedes", ddlBankCodeQR)

            ddlBankCodeQR.SelectedIndex = 1

            Query = "SELECT CONCAT(BankId, ' : ', Bank) AS codedes FROM tblBank  where BankId <> '" & lBankId & "' ORDER BY BankId"
            PopulateDropDownList(Query, "codedes", "codedes", ddlBankCodeQR)

            txtBankIDQR.Text = ""
            txtBankNameQR.Text = ""
            txtBankGLCodeQR.Text = ""
            txtLedgerNameQR.Text = ""

            ddlBankCodeQR_SelectedIndexChanged(sender, e)

            ddlPaymentModeQR.Focus()
            mdlQuickReceipt.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ddlPaymentModeQR_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub ddlBankCodeQR_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlBankCodeQR.SelectedIndexChanged
        Try
            If ddlBankCodeQR.SelectedIndex > 0 Then

                ''''''''''''''''''''''''''''''''''''
                'Dim hyphenpos As Integer
                'hyphenpos = 0
                'hyphenpos = (ddlBankCode.Text.IndexOf(":"))


                'txtBankGLCode.Text = Left(ddlBankCode.Text, (hyphenpos - 1))
                'txtBankName.Text = Right(ddlBankCode.Text, Len(ddlBankCode.Text) - (Len(txtBankGLCode.Text) + 3))
                'txtBankID.Text = Left(ddlBankCode.Text, (hyphenpos - 1))

                Dim hyphenpos As Integer
                hyphenpos = 0
                hyphenpos = (ddlBankCodeQR.Text.IndexOf(":"))


                txtBankGLCodeQR.Text = Left(ddlBankCodeQR.Text, (hyphenpos - 1))
                txtBankNameQR.Text = Right(ddlBankCodeQR.Text, Len(ddlBankCodeQR.Text) - (Len(txtBankGLCodeQR.Text) + 3))
                txtBankIDQR.Text = Left(ddlBankCodeQR.Text, (hyphenpos - 1))

                '''''''''''''''''''''''''''


                'txtBankGLCodeQR.Text = Left(ddlBankCodeQR.Text, 5)
                'txtBankNameQR.Text = Right(ddlBankCodeQR.Text, Len(ddlBankCodeQR.Text) - (Len(txtBankGLCodeQR.Text) + 3))

                'txtBankIDQR.Text = Left(ddlBankCodeQR.Text, 5)

                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                If conn.State = ConnectionState.Open Then
                    conn.Close()
                    conn.Dispose()
                End If
                conn.Open()

                Dim sql As String
                sql = ""
                sql = "Select LedgerCode, RecvPrefix from tblBank where bankId = '" & txtBankIDQR.Text & "'"

                Dim command1 As MySqlCommand = New MySqlCommand
                command1.CommandType = CommandType.Text
                command1.CommandText = sql
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()

                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then
                    If dt.Rows(0)("LedgerCode").ToString <> "" Then : txtBankGLCodeQR.Text = dt.Rows(0)("LedgerCode").ToString : End If
                    If dt.Rows(0)("RecvPrefix").ToString <> "" Then : txtRecvPrefixQR.Text = dt.Rows(0)("RecvPrefix").ToString : End If

                End If


                sql = ""
                sql = "Select Description from tblChartOfAccounts where COACode = '" & txtBankGLCodeQR.Text & "'"

                Dim command2 As MySqlCommand = New MySqlCommand
                command2.CommandType = CommandType.Text
                command2.CommandText = sql
                command2.Connection = conn

                Dim dr2 As MySqlDataReader = command2.ExecuteReader()

                Dim dt2 As New DataTable
                dt2.Load(dr2)

                If dt2.Rows.Count > 0 Then
                    If dt2.Rows(0)("Description").ToString <> "" Then : txtLedgerNameQR.Text = dt2.Rows(0)("Description").ToString : End If
                End If

                conn.Close()
                conn.Dispose()

                command1.Dispose()
                command2.Dispose()
                dt.Dispose()
                dt2.Dispose()

                'txtBankGLCode
                'txtLedgerName()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ddlBankCodeQR_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnShowInvoicesQR_Click(sender As Object, e As EventArgs) Handles btnShowInvoicesQR.Click
        Try
            lblAlert.Text = ""
            'lblMessage.Text = ""
            'lblAlert.Text = ""
            lblMessageQR.Text = ""
            lblAlertQR.Text = ""
            'If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = False Then
            '    ddlCompanyGrpII.Text = txtCompanyGroup.Text
            '    'ddlContactType.Text = txtAccountType.Text
            '    txtAccountIdII.Text = txtAccountIdBilling.Text
            '    txtClientNameII.Text = txtAccountName.Text

            '    ddlCompanyGrpII.Enabled = False
            '    ddlContactType.Enabled = False
            '    txtAccountIdII.Enabled = False
            '    txtClientNameII.Enabled = False
            '    'btnClient.Visible = False
            'Else
            '    'ddlCompanyGrp.Text = txtCompanyGroup.Text
            '    'txtAccountId.Text = txtAccountIdBilling.Text
            '    'txtClientName.Text = txtAccountName.Text

            '    ddlCompanyGrpII.Enabled = True
            '    ddlContactType.Enabled = True
            '    txtAccountIdII.Enabled = True
            '    txtClientNameII.Enabled = True
            '    btnClient.Visible = True

            'End If

            'Dim Query As String

            'Query = "SELECT ContractNo FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  AccountID = '" & txtAccountIdBilling.Text & "' order by ContractNo "
            'PopulateDropDownList(Query, "ContractNo", "ContractNo", ddlContractNoII)

            If grvInvoiceRecDetails.Rows.Count = 0 Then
                btnShowRecordsII_Click(sender, e)
                updpnlInvoiceRecs.Update()
            End If


            mdlQuickReceipt.Hide()
            mdlImportInvoices.Show()

        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub CheckUncheckAllInvoice(sender As Object, e As System.EventArgs)
        Dim chk1 As CheckBox
        chk1 = DirectCast(grvInvoiceRecDetails.HeaderRow.Cells(0).FindControl("chkSelectInvoiceGV"), CheckBox)
        For Each row As GridViewRow In grvInvoiceRecDetails.Rows
            Dim chk As CheckBox
            chk = DirectCast(row.Cells(0).FindControl("chkSelectGVII"), CheckBox)
            chk.Checked = chk1.Checked
        Next
    End Sub

    Protected Sub btnShowRecordsII_Click(sender As Object, e As EventArgs) Handles btnShowRecordsII.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim strsql As String

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim cmdServiceBillingDetailItem As MySqlCommand = New MySqlCommand

            'strsql = "SELECT a.rcno, a.InvoiceNumber, a.CompanyGroup, a.AccountId, a.Custname,  a.InvoiceNumber, a.SalesOrderDate,  a.valuebase, a.gstbase, "
            'strsql = strsql + " a.AppliedBase, a.ReceiptBase, a.CreditBase, a.BalanceBase,  a.Terms, a.BalanceBase as OSAmount "
            'strsql = strsql + " FROM tblsales a  "
            'strsql = strsql + " where a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            'strsql = strsql + " and (a.BalanceBase) > 0"

            strsql = "SELECT a.rcno, a.CompanyGroup, a.AccountId, a.Custname,  a.SalesOrderNumber, a.SalesOrderDate,  a.valuebase, a.gstbase, "
            strsql = strsql + " a.AppliedBase, a.ReceiptBase, a.CreditBase, a.BalanceBase,  a.Terms, a.BalanceBase as OSAmount, 'INV' as Doctype, 0.00, 0.00, 0.00   "
            strsql = strsql + " FROM tblSalesOrder a  "
            'strsql = strsql + " where a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            strsql = strsql + " where a.PostStatus = 'P'"
            strsql = strsql + " and (a.BalanceBase) <> 0 and a.Doctype in ('ARIN', 'ARCN', 'ARDN') "


            If ddlCompanyGrpII.SelectedIndex > 0 Then
                strsql = strsql + " and a.CompanyGroup = '" & ddlCompanyGrpII.Text & "' "
            End If


            If String.IsNullOrEmpty(txtAccountIdII.Text.Trim) = False Then
                strsql = strsql + " and a.AccountId = '" & txtAccountIdII.Text & "' "
            End If

            'If String.IsNullOrEmpty(txtClientNameII.Text.Trim) = False Then
            '    strsql = strsql + " and a.CustName like ""%" & txtClientNameII.Text.Trim & "%"""
            'End If


            If String.IsNullOrEmpty(txtDateFromII.Text) = False Then
                strsql = strsql + " and   A.SalesOrderDate >= '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.SalesOrderDate <= '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateFromII.Text) = False And String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.SalesOrderDate between '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtInvoiceNoII.Text.Trim) = False Then
                strsql = strsql + " and a.InvoiceNumber = '" & txtInvoiceNoII.Text & "' "
            End If




            '''''''''''''''''''''''''''''''''''''

            ''''''''''''''
            'strsql = strsql + " UNION "
            'strsql = strsql + " SELECT b.rcno, a.CompanyGroup, a.AccountId, a.ReceiptFrom as Custname, "
            'strsql = strsql + " a.ReceiptNumber as InvoiceNumber, a.ReceiptDate as SalesOrderDate,  0.00, 0.00,  0.00, b.ValueBase , 0.00, b.BalanceBase ,  '',"
            'strsql = strsql + " b.BalanceBase  as OSAmount, 'RCT' as Doctype   "
            ''strsql = strsql + " b.BalanceBase  as OSAmount   "
            'strsql = strsql + " FROM tblrecv a, tblRecvdet b  "
            ''strsql = strsql + " where a.ReceiptNumber = b.ReceiptNumber and a.PostStatus = 'P' and a.CompanyGroup ='" & ddlCompanyGrpII.Text & "'"
            'strsql = strsql + " where a.ReceiptNumber = b.ReceiptNumber and a.PostStatus = 'P'"
            'strsql = strsql + " and (b.BalanceBase) < 0   "


            strsql = strsql + " UNION "
            strsql = strsql + " SELECT b.rcno, a.CompanyGroup, a.AccountId, a.ReceiptFrom as Custname, "
            strsql = strsql + " a.ReceiptNumber as InvoiceNumber, a.ReceiptDate as SalesOrderDate,  0.00, 0.00,  0.00, b.ValueBase , 0.00, (b.ValueBase - sum(ifnull(c.DebitBase,0)) + sum(ifnull(c.Creditbase,0))) * (-1) as BalanceBase,  '',"
            strsql = strsql + " b.BalanceBase  as OSAmount, 'RCT' as Doctype,  b.ValueBase, c.DebitBase, c.Creditbase   "
            strsql = strsql + " FROM tblrecv a inner join tbljrnvdet c on a.ReceiptNumber = c.RefType, tblRecvdet b  "

            strsql = strsql + " where a.ReceiptNumber = b.ReceiptNumber and a.PostStatus = 'P'"
            strsql = strsql + " and (b.BalanceBase) < 0   "
            strsql = strsql + " group by a.ReceiptNumber"
            strsql = strsql + " having  ((b.ValueBase)- sum(ifnull(c.DebitBase,0)) + sum(ifnull(c.Creditbase,0))) <> 0"

            'tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid 

            If ddlCompanyGrpII.SelectedIndex > 0 Then
                strsql = strsql + " and a.CompanyGroup = '" & ddlCompanyGrpII.Text & "' "
            End If

            If String.IsNullOrEmpty(txtAccountIdII.Text.Trim) = False Then
                strsql = strsql + " and a.AccountId = '" & txtAccountIdII.Text & "' "
            End If

            'If String.IsNullOrEmpty(txtClientNameII.Text.Trim) = False Then
            '    strsql = strsql + " and a.ReceiptFrom = """ & txtClientNameII.Text & """"
            'End If


            If String.IsNullOrEmpty(txtDateFromII.Text) = False Then
                strsql = strsql + " and   A.ReceiptDate >= '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.ReceiptDate <= '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtDateFromII.Text) = False And String.IsNullOrEmpty(txtDateToII.Text) = False Then
                strsql = strsql + " and   A.ReceiptDate between '" & Convert.ToDateTime(txtDateFromII.Text).ToString("yyyy-MM-dd") & "' and '" & Convert.ToDateTime(txtDateToII.Text).ToString("yyyy-MM-dd") & "'"
            End If

            If String.IsNullOrEmpty(txtInvoiceNoII.Text.Trim) = False Then
                strsql = strsql + " and a.ReceiptNumber Like '%" + txtInvoiceNoII.Text.Trim.ToUpper + "%' "
            End If



            ''''''''''''''''''''''''''''''''''''''''


            'If ddlContractNo.Text.Trim <> "-1" Then
            '    strsql = strsql + " and   A.ContractNo = '" & ddlContractNo.Text & "'"
            'End If

            'If String.IsNullOrEmpty(txtLocationId.Text) = False Then
            '    strsql = strsql + " and   b.LocationId = '" & txtLocationId.Text & "'"
            'End If

            strsql = strsql + " order by SalesOrderDate, InvoiceNumber"


            cmdServiceBillingDetailItem.CommandText = strsql

            SqlDSOSInvoice.SelectCommand = strsql
            SqlDSOSInvoice.DataBind()
            grvInvoiceRecDetails.DataSourceID = "SqlDSOSInvoice"
            grvInvoiceRecDetails.DataBind()

            conn.Close()
            conn.Dispose()
            cmdServiceBillingDetailItem.Dispose()
            btnImportInvoiceII.Enabled = True

            'mdlImportInvoices.Show()


            If grvInvoiceRecDetails.Rows.Count > 0 Then
                Dim TextBoxCompanyGroup1 As TextBox = CType(grvInvoiceRecDetails.Rows(0).Cells(0).FindControl("txtCompanyGroupGVII"), TextBox)
                If String.IsNullOrEmpty(TextBoxCompanyGroup1.Text) = True Then
                    Label43.Text = "SALES ORDER DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString - 1
                Else
                    Label43.Text = "SALES ORDER DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString
                End If
            Else
                Label43.Text = "SALES ORDER DETAILS : Total Records : " & grvInvoiceRecDetails.Rows.Count.ToString
            End If

            updpnlInvoiceRecs.Update()
        Catch ex As Exception
            lblAlert1.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnShowRecordsII_Click", ex.Message.ToString, "")
        End Try
    End Sub



    Private Sub FirstGridViewRowBillingDetailsRecsQR()
        Try
            Dim dt As New DataTable()
            Dim dr As DataRow = Nothing
            'dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));

            dt.Columns.Add(New DataColumn("SelRec", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceDate", GetType(String)))
            dt.Columns.Add(New DataColumn("ContractNo", GetType(String)))
            dt.Columns.Add(New DataColumn("ServiceNo", GetType(String)))
            dt.Columns.Add(New DataColumn("OtherCode", GetType(String)))
            'dt.Columns.Add(New DataColumn("Location", GetType(String)))
            'dt.Columns.Add(New DataColumn("ItemType", GetType(String)))
            dt.Columns.Add(New DataColumn("ItemCode", GetType(String)))
            'dt.Columns.Add(New DataColumn("ItemDescription", GetType(String)))
            'dt.Columns.Add(New DataColumn("UOM", GetType(String)))
            'dt.Columns.Add(New DataColumn("Qty", GetType(String)))
            dt.Columns.Add(New DataColumn("PriceWithDisc", GetType(String)))
            dt.Columns.Add(New DataColumn("TaxType", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTPerc", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalPriceWithGST", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalReceiptAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("TotalCrediteNoteAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("ReceiptAmt", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoReceipt", GetType(String)))
            dt.Columns.Add(New DataColumn("RcnoInvoice", GetType(String)))
            dt.Columns.Add(New DataColumn("ARCode", GetType(String)))
            dt.Columns.Add(New DataColumn("GSTCode", GetType(String)))
            dt.Columns.Add(New DataColumn("InvoiceType", GetType(String)))
            dt.Columns.Add(New DataColumn("Remarks", GetType(String)))
            dt.Columns.Add(New DataColumn("GLDescription", GetType(String)))

            dt.Columns.Add(New DataColumn("DocType", GetType(String)))
            dt.Columns.Add(New DataColumn("SourceRcno", GetType(String)))

            dr = dt.NewRow()

            dr("SelRec") = String.Empty
            dr("ItemType") = String.Empty
            dr("InvoiceNo") = String.Empty
            dr("InvoiceDate") = String.Empty
            dr("ContractNo") = String.Empty
            dr("ServiceNo") = String.Empty
            dr("OtherCode") = String.Empty
            'dr("ItemType") = String.Empty
            dr("ItemCode") = String.Empty
            'dr("ItemDescription") = String.Empty
            'dr("UOM") = String.Empty
            'dr("Qty") = 0
            dr("PriceWithDisc") = 0
            dr("TaxType") = String.Empty
            dr("GSTPerc") = 0.0
            dr("GSTAmt") = 0
            dr("TotalPriceWithGST") = 0
            dr("TotalReceiptAmt") = 0
            dr("TotalCrediteNoteAmt") = 0
            dr("ReceiptAmt") = 0
            dr("RcnoReceipt") = 0
            dr("RcnoInvoice") = 0
            dr("ARCode") = String.Empty
            dr("GSTCode") = 0
            dr("InvoiceType") = 0
            dr("Remarks") = String.Empty
            dr("GLDescription") = String.Empty

            dr("DocType") = String.Empty
            dr("SourceRcno") = String.Empty
            dt.Rows.Add(dr)

            ViewState("CurrentTableBillingDetailsRecQR") = dt

            grvBillingDetailsQR.DataSource = dt
            grvBillingDetailsQR.DataBind()

            Dim btnAdd As Button = CType(grvBillingDetailsQR.FooterRow.Cells(1).FindControl("btnAddDetailQR"), Button)
            Page.Form.DefaultFocus = btnAdd.ClientID

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FirstGridViewRowBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub AddNewRowBillingDetailsRecsQR()
        Try
            Dim rowIndex As Integer = 0
            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRecQR") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(1).FindControl("chkSelectGVQR"), CheckBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(3).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceTypeGVQR"), TextBox)

                        'Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(5).FindControl("txtItemCodeGVQR"), TextBox)
                        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(6).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(7).FindControl("txtOtherCodeGVQR"), TextBox)
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(8).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(9).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(10).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(11).FindControl("txtTaxTypeGVQR"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(12).FindControl("txtGSTPercGVQR"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)

                        Dim TextBoxTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)

                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(15).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxRcnoReceipt = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(16).FindControl("txtRcnoReceiptGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(17).FindControl("txtRcnoInvoiceGVQR"), TextBox)
                        Dim TextBoxARCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(18).FindControl("txtARCodeGVQR"), TextBox)
                        Dim TextBoGSTCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGSTCodeGVQR"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtRemarksGVQR"), TextBox)

                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtSourceRcnoGVQR"), TextBox)

                        drCurrentRow = dtCurrentTable.NewRow()

                        'Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(0).Cells(0).FindControl("txtGSTPercGV"), TextBox)
                        'TextBoxGSTPerc.Text = Convert.ToDecimal(txtTaxRatePct.Text).ToString("N4")

                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceDate") = TextBoxInvoiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceNo") = TextBoxServiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceType") = TextBoxInvoiceType.Text
                        'dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        'dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        'dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        'dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text                 
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text

                        dtCurrentTable.Rows(i - 1)("TotalReceiptAmt") = TextBoxTotalReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalCrediteNoteAmt") = TextBoxBalanceAmt.Text

                        dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoReceipt") = TextBoxRcnoReceipt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ARCode") = TextBoxARCode.Text
                        dtCurrentTable.Rows(i - 1)("GSTCode") = TextBoGSTCode.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("Remarks") = TextBoxRemarks.Text

                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("DocType") = TextBoxDocType.Text
                        dtCurrentTable.Rows(i - 1)("SourceRcno") = TextBoxSourceRcno.Text
                        rowIndex += 1

                    Next i
                    dtCurrentTable.Rows.Add(drCurrentRow)
                    ViewState("CurrentTableBillingDetailsRecQR") = dtCurrentTable

                    grvBillingDetailsQR.DataSource = dtCurrentTable
                    grvBillingDetailsQR.DataBind()

                    Dim rowIndex2 As Integer = 0
                    Dim j As Integer = 1
                    Do While j <= (rowIndex)

                        'Dim TextBoxTargetDesc1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex2).Cells(0).FindControl("txtTaxTypeGV"), DropDownList)
                        'Query = "Select TaxType from tbltaxtype"
                        'PopulateDropDownList(Query, "TaxType", "TaxType", TextBoxTargetDesc1)


                        'Dim Query As String

                        'Dim TextBoxItemCode1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex2).Cells(0).FindControl("txtItemCodeGV"), DropDownList)
                        'Query = "Select * from tblbillingproducts"
                        'PopulateDropDownList(Query, "ProductCode", "ProductCode", TextBoxItemCode1)

                        'Dim TextBoxUOM1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex2).Cells(0).FindControl("txtUOMGV"), DropDownList)
                        'Query = "Select * from tblunitms"
                        'PopulateDropDownList(Query, "UnitMs", "UnitMs", TextBoxUOM1)


                        'Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        'Dim TextBoxQty1 As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                        'If TextBoxItemType1.Text = "SERVICE" Then
                        '    TextBoxQty1.Enabled = False
                        '    TextBoxQty1.Text = 1

                        'End If

                        'If rowIndex2 = 0 Then
                        '    If TextBoxItemType1.Text = "SERVICE" Then
                        '        TextBoxItemType1.Enabled = False
                        '    End If
                        'End If

                        rowIndex2 += 1
                        j += 1
                    Loop

                    'Dim TextBoxTargetDesc2 As DropDownList = CType(grvServiceRecDetails.Rows(rowIndex).Cells(0).FindControl("ddlTargetDescGV"), DropDownList)
                    'Query = "Select TargetId, descrip1 from tblTarget"
                    'PopulateDropDownList(Query, "descrip1", "descrip1", TextBoxTargetDesc2)


                End If
                dtCurrentTable.Dispose()
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecsQR()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "AddNewRowBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub SetPreviousDataBillingDetailsRecsQR()
        Try
            Dim rowIndex As Integer = 0

            'Dim Query As String

            If ViewState("CurrentTableBillingDetailsRecQR") IsNot Nothing Then
                Dim dt As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                If dt.Rows.Count > 0 Then
                    For i As Integer = 0 To dt.Rows.Count - 1

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(1).FindControl("chkSelectGVQR"), CheckBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(3).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceTypeGVQR"), TextBox)

                        'Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(5).FindControl("txtItemCodeGVQR"), TextBox)
                        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(6).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(7).FindControl("txtOtherCodeGVQR"), TextBox)
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(8).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(9).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(10).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(11).FindControl("txtTaxTypeGVQR"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(12).FindControl("txtGSTPercGVQR"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)

                        Dim TextBoxTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)

                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(15).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxRcnoReceipt = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(16).FindControl("txtRcnoReceiptGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(17).FindControl("txtRcnoInvoiceGVQR"), TextBox)
                        Dim TextBoxARCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(18).FindControl("txtARCodeGVQR"), TextBox)
                        Dim TextBoGSTCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGSTCodeGVQR"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtRemarksGVQR"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtSourceRcnoGVQR"), TextBox)

                        TextBoxSelect.Text = dt.Rows(i)("SelRec").ToString()
                        TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxInvoiceNo.Text = dt.Rows(i)("InvoiceNo").ToString()
                        TextBoxInvoiceDate.Text = dt.Rows(i)("InvoiceDate").ToString()
                        TextBoxContractNo.Text = dt.Rows(i)("ContractNo").ToString()
                        TextBoxServiceNo.Text = dt.Rows(i)("ServiceNo").ToString()
                        TextBoxInvoiceType.Text = dt.Rows(i)("InvoiceType").ToString()
                        'TextBoxItemType.Text = dt.Rows(i)("ItemType").ToString()
                        TextBoxItemCode.Text = dt.Rows(i)("ItemCode").ToString()
                        'TextBoxItemDescription.Text = dt.Rows(i)("ItemDescription").ToString()
                        'TextBoxUOM.Text = dt.Rows(i)("UOM").ToString()
                        'TextBoxQty.Text = dt.Rows(i)("Qty").ToString()

                        TextBoxPriceWithDisc.Text = dt.Rows(i)("PriceWithDisc").ToString()
                        TextBoxTaxType.Text = dt.Rows(i)("TaxType").ToString()
                        TextBoxGSTPerc.Text = dt.Rows(i)("GSTPerc").ToString()
                        TextBoxGSTAmt.Text = dt.Rows(i)("GSTAmt").ToString()
                        TextBoxTotalPriceWithGST.Text = dt.Rows(i)("TotalPriceWithGST").ToString()

                        TextBoxTotalReceiptAmt.Text = dt.Rows(i)("TotalReceiptAmt").ToString()
                        TextBoxBalanceAmt.Text = dt.Rows(i)("TotalCrediteNoteAmt").ToString().ToString()

                        'dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text

                        TextBoxReceiptAmt.Text = dt.Rows(i)("ReceiptAmt").ToString()
                        TextBoxRcnoReceipt.Text = dt.Rows(i)("RcnoReceipt").ToString()
                        TextBoxRcnoInvoice.Text = dt.Rows(i)("RcnoInvoice").ToString()
                        TextBoxARCode.Text = dt.Rows(i)("ARCode").ToString()
                        TextBoGSTCode.Text = dt.Rows(i)("GSTCode").ToString()
                        TextBoxOtherCode.Text = dt.Rows(i)("OtherCode").ToString()
                        TextBoxRemarks.Text = dt.Rows(i)("Remarks").ToString()
                        TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()

                        TextBoxDocType.Text = dt.Rows(i)("DocType").ToString()
                        TextBoxSourceRcno.Text = dt.Rows(i)("SourceRcno").ToString()

                        If rowdeleted = "Y" Then
                            TextBoxSelect.Checked = True
                        End If

                        'Dim TextBoxItemType1 As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGV"), DropDownList)
                        'Dim TextBoxQty1 As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtQtyGV"), TextBox)

                        'If TextBoxItemType1.Text = "SERVICE" Then
                        '    TextBoxQty1.Enabled = False
                        '    TextBoxQty1.Text = 1

                        'End If

                        'If rowIndex = 0 Then
                        '    If TextBoxItemType1.Text = "SERVICE" Then
                        '        TextBoxItemType1.Enabled = False
                        '    End If
                        'End If

                        rowIndex += 1
                    Next i
                End If
                dt.Dispose()
            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "SetPreviousDataBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Private Sub SetRowDataBillingDetailsRecsQR()
        Dim rowIndex As Integer = 0
        Try
            If ViewState("CurrentTableBillingDetailsRecQR") IsNot Nothing Then
                Dim dtCurrentTable As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
                Dim drCurrentRow As DataRow = Nothing
                If dtCurrentTable.Rows.Count > 0 Then
                    For i As Integer = 1 To dtCurrentTable.Rows.Count

                        Dim TextBoxSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(1).FindControl("chkSelectGVQR"), CheckBox)
                        Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(3).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(2).FindControl("txtInvoiceTypeGVQR"), TextBox)

                        'Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(4).FindControl("txtItemTypeGV"), DropDownList)
                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(5).FindControl("txtItemCodeGVQR"), TextBox)
                        'Dim TextBoxItemDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(6).FindControl("txtItemDescriptionGV"), TextBox)
                        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(7).FindControl("txtOtherCodeGVQR"), TextBox)
                        'Dim TextBoxUOM As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(8).FindControl("txtUOMGV"), DropDownList)
                        'Dim TextBoxQty As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(9).FindControl("txtQtyGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(10).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(11).FindControl("txtTaxTypeGVQR"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(12).FindControl("txtGSTPercGVQR"), TextBox)
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)

                        Dim TextBoxTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(13).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                        Dim TextBoxBalanceAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(14).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)

                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(15).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxRcnoReceipt = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(16).FindControl("txtRcnoReceiptGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(17).FindControl("txtRcnoInvoiceGVQR"), TextBox)
                        Dim TextBoxARCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(18).FindControl("txtARCodeGVQR"), TextBox)
                        Dim TextBoGSTCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGSTCodeGVQR"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtRemarksGVQR"), TextBox)
                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(19).FindControl("txtSourceRcnoGVQR"), TextBox)


                        drCurrentRow = dtCurrentTable.NewRow()

                        dtCurrentTable.Rows(i - 1)("SelRec") = TextBoxSelect.Text
                        dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceNo") = TextBoxInvoiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceDate") = TextBoxInvoiceDate.Text
                        dtCurrentTable.Rows(i - 1)("ContractNo") = TextBoxContractNo.Text
                        dtCurrentTable.Rows(i - 1)("ServiceNo") = TextBoxServiceNo.Text
                        dtCurrentTable.Rows(i - 1)("InvoiceType") = TextBoxInvoiceType.Text
                        'dtCurrentTable.Rows(i - 1)("ItemType") = TextBoxItemType.Text
                        dtCurrentTable.Rows(i - 1)("ItemCode") = TextBoxItemCode.Text
                        'dtCurrentTable.Rows(i - 1)("ItemDescription") = TextBoxItemDescription.Text
                        'dtCurrentTable.Rows(i - 1)("UOM") = TextBoxUOM.Text
                        'dtCurrentTable.Rows(i - 1)("Qty") = TextBoxQty.Text
                        dtCurrentTable.Rows(i - 1)("PriceWithDisc") = TextBoxPriceWithDisc.Text
                        dtCurrentTable.Rows(i - 1)("TaxType") = TextBoxTaxType.Text
                        dtCurrentTable.Rows(i - 1)("GSTPerc") = TextBoxGSTPerc.Text
                        dtCurrentTable.Rows(i - 1)("GSTAmt") = TextBoxGSTAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalPriceWithGST") = TextBoxTotalPriceWithGST.Text
                        dtCurrentTable.Rows(i - 1)("TotalReceiptAmt") = TextBoxTotalReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("TotalCrediteNoteAmt") = TextBoxBalanceAmt.Text

                        dtCurrentTable.Rows(i - 1)("ReceiptAmt") = TextBoxReceiptAmt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoReceipt") = TextBoxRcnoReceipt.Text
                        dtCurrentTable.Rows(i - 1)("RcnoInvoice") = TextBoxRcnoInvoice.Text
                        dtCurrentTable.Rows(i - 1)("ARCode") = TextBoxARCode.Text
                        dtCurrentTable.Rows(i - 1)("GSTCode") = TextBoGSTCode.Text
                        dtCurrentTable.Rows(i - 1)("OtherCode") = TextBoxOtherCode.Text
                        dtCurrentTable.Rows(i - 1)("Remarks") = TextBoxRemarks.Text

                        dtCurrentTable.Rows(i - 1)("GLDescription") = TextBoxGLDescription.Text

                        dtCurrentTable.Rows(i - 1)("DocType") = TextBoxDocType.Text
                        dtCurrentTable.Rows(i - 1)("SourceRcno") = TextBoxSourceRcno.Text
                        'TextBoxGLDescription.Text = dt.Rows(i)("GLDescription").ToString()
                        rowIndex += 1
                    Next i

                    ViewState("CurrentTableBillingDetailsRecQR") = dtCurrentTable
                    dtCurrentTable.Dispose()
                End If
            Else
                Response.Write("ViewState is null")
            End If
            SetPreviousDataBillingDetailsRecsQR()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "SetRowDataBillingDetailsRecsQR", ex.Message.ToString, "")
            Exit Sub
        End Try

    End Sub

    Protected Sub btnImportInvoiceII_Click(sender As Object, e As EventArgs) Handles btnImportInvoiceII.Click
        Try
            txtClientFrom.Text = ""
            Dim totalRows As Long
            totalRows = 0


            For rowIndex1 As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                Dim TextBoxchkSelect1 As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex1).Cells(0).FindControl("chkSelectGVII"), CheckBox)
                If (TextBoxchkSelect1.Checked = True) Then
                    totalRows = totalRows + 1
                End If
            Next rowIndex1



            If totalRows = 0 Then
                mdlImportInvoices.Show()
                'mdlImportServices.Show()
                'mdlImportServices.Show()
                Dim message As String = "alert('PLEASE SELECT A RECORD')"
                ScriptManager.RegisterClientScriptBlock(TryCast(sender, Control), Me.GetType(), "alert", message, True)
                'MessageBox.Message.Alert(Page, "PLEASE SELECT A RECORD", "str")
                'lblAlert.Text = "PLEASE SELECT A RECORD"
                'lblAlert.Focus()
                'updPnlMsg.Update()

                Exit Sub
            End If


            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                txtCompanyGroup.Text = ddlCompanyGrpII.Text
                'ddlContactType.Text = txtAccountType.Text
                txtAccountIdBilling.Text = txtAccountIdII.Text
                txtAccountName.Text = txtClientNameII.Text

                'ddlCompanyGrpII.Enabled = False
                ddlContactType.Enabled = False
                txtAccountIdII.Enabled = False
                txtClientNameII.Enabled = False
                btnClient.Visible = False
            Else

            End If


            'Start: Billing Details

            Dim dtScdrLoc As DataTable = CType(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)
            Dim drCurrentRowLoc As DataRow = Nothing

            For i As Integer = 0 To grvBillingDetailsQR.Rows.Count - 1
                dtScdrLoc.Rows.Remove(dtScdrLoc.Rows(0))
                drCurrentRowLoc = dtScdrLoc.NewRow()
                ViewState("CurrentTableBillingDetailsRecQR") = dtScdrLoc
                grvBillingDetailsQR.DataSource = dtScdrLoc
                grvBillingDetailsQR.DataBind()

                SetPreviousDataBillingDetailsRecsQR()
            Next i

            FirstGridViewRowBillingDetailsRecsQR()

            'Start: From tblBillingDetailItem

            txtReceiptAmt.Text = "0.00"

            Dim rowselected As Integer
            rowselected = 0

            For rowIndex As Integer = 0 To grvInvoiceRecDetails.Rows.Count - 1
                'string txSpareId = row.ItemArray[0] as string;
                Dim TextBoxchkSelect As CheckBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGVII"), CheckBox)

                If (TextBoxchkSelect.Checked = True) Then
                    AddNewRowBillingDetailsRecsQR()
                    Dim qry As String
                    qry = ""

                    Dim command As MySqlCommand = New MySqlCommand
                    command.CommandType = CommandType.Text
                    'Header
                    rowselected = rowselected + 1

                    Dim lblid13 As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAccountIdGVII"), TextBox)
                    Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGVII"), TextBox)
                    Dim InvoiceDate As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtSalesDateGVII"), TextBox)
                    Dim InvoiceAmmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtAppliedBaseGVII"), TextBox)
                    Dim TotalReceiptAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalReceiptAmountGVII"), TextBox)
                    Dim TotalCNAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtTotalCNAmountGVII"), TextBox)
                    Dim TotalOSAmount As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtOSAmountGVII"), TextBox)


                    Dim SourceRcno As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoGVII"), TextBox)
                    Dim DocType As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtDocTypeGVII"), TextBox)


                    'Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)
                    'Dim InvoiceNumber As TextBox = CType(grvInvoiceRecDetails.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNumberGV"), TextBox)


                    Dim TextBoxItemTypeGV As DropDownList = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtItemTypeGVQR"), DropDownList)
                    TextBoxItemTypeGV.Text = "ARIN"

                    Dim TextBoxtxtInvoiceNoGV As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
                    TextBoxtxtInvoiceNoGV.Text = Convert.ToString(InvoiceNumber.Text)

                    Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
                    TextBoxInvoiceDate.Text = Convert.ToDateTime(InvoiceDate.Text).ToString("dd/MM/yyyy")

                    'Dim TextBoxTotalPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)
                    'TextBoxTotalPriceWithDisc.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ValueBase"))

                    Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
                    TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(InvoiceAmmount.Text)).ToString("N2")

                    'Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                    'TextBoxGSTAmt.Text = Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("GSTBase"))


                    Dim TextBoxTotalTotalReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtTotalReceiptAmtGVQR"), TextBox)
                    'TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(TotalReceiptAmount.Text)).ToString("N2")
                    TextBoxTotalTotalReceiptAmt.Text = (Convert.ToDecimal(txtBalanceBase.Text)).ToString("N2")


                    Dim TextBoxTotalCNAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtTotalCreditNoteAmtGVQR"), TextBox)
                    TextBoxTotalCNAmt.Text = (Convert.ToDecimal(TotalCNAmount.Text)).ToString("N2")

                    'Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGV"), TextBox)
                    'TextBoxRcnoInvoice.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Rcno")))



                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)
                    TextBoxOtherCode.Text = txtARCode.Text

                    Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)
                    TextBoxGLDescription.Text = txtARDescription.Text

                    Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
                    TextBoxReceiptAmt.Text = TotalOSAmount.Text


                    txtReceiptAmt.Text = (Convert.ToDecimal(txtReceiptAmt.Text) + Convert.ToDecimal(TotalOSAmount.Text)).ToString("N2")
                    txtReceivedAmountQR.Text = (Convert.ToDecimal(txtReceiptAmt.Text)).ToString("N2")

                    Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtDocTypeGVQR"), TextBox)
                    TextBoxDocType.Text = DocType.Text

                    Dim TextBoxSourceRcno1 As TextBox = CType(grvBillingDetailsQR.Rows(rowselected - 1).Cells(0).FindControl("txtSourceRcnoGVQR"), TextBox)
                    TextBoxSourceRcno1.Text = SourceRcno.Text

                    ''Dim TextBoxItemCodeGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGV"), TextBox)
                    ''TextBoxItemCodeGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("ItemCode")))

                    'Dim TextBoxTermsGV As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtARCodeGV"), TextBox)
                    'TextBoxTermsGV.Text = Convert.ToString(Convert.ToString(dtServiceBillingDetailItem.Rows(rowIndex)("Terms")))



                    'rowIndex += 1

                    'Next row


                    'txtTotalWithDiscAmt.Text = TotalPriceWithDiscountAmt
                    'txtTotalGSTAmt.Text = TotalGSTAmt.ToString("N2")
                    'txtTotalWithGST.Text = TotalWithGST.ToString("N2")
                    ''Else
                    'FirstGridViewRowBillingDetailsRecs()

                End If

                'End: Detail Records
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString

                'Button1.Enabled = False
                'Timer1.Enabled = True
                'Thread.Sleep(1000)
                'Dim workerThread As New Thread(New ThreadStart(AddressOf ProcessRecords))
                'workerThread.Start()


                'textbox6.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
                'txtProgress.Text = rowselected.ToString + " / " + rowIndex.Message.ToString
            Next

            dtScdrLoc.Dispose()


            btnSave.Enabled = True
            updpnlBillingDetailsQR.Update()
            updPanelSave.Update()
            updpnlInvoiceRecs.Update()
            btnSaveQR.Enabled = True
            mdlQuickReceipt.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnImportInvoiceII_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnCancelQR_Click(sender As Object, e As EventArgs) Handles btnCancelQR.Click
        mdlQuickReceipt.Hide()
    End Sub

    Protected Sub txtReceiptDateQR_TextChanged(sender As Object, e As EventArgs) Handles txtReceiptDateQR.TextChanged
        Try
            txtReceiptPeriodQR.Text = Year(Convert.ToDateTime(txtReceiptDateQR.Text)) & Format(Month(Convert.ToDateTime(txtReceiptDateQR.Text)), "00")
        Catch ex As Exception
            lblAlertQR.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtReceiptDateQR_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnSaveQR_Click(sender As Object, e As EventArgs) Handles btnSaveQR.Click
        Dim rowselected As Integer
        rowselected = 0
        lblAlert1.Text = ""
        btnSaveQR.Enabled = False

        Try

            If String.IsNullOrEmpty(txtReceiptDateQR.Text) = True Then
                lblAlertQR.Text = "Please Enter Receipt Date"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            Dim IsLock = FindRVPeriod(txtReceiptPeriodQR.Text)
            If IsLock = "Y" Then
                lblAlertQR.Text = "PERIOD IS LOCKED"
                updPnlMsgQR.Update()
                txtReceiptDateQR.Focus()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If Convert.ToDecimal(txtReceiptAmt.Text) <> Convert.ToDecimal(txtReceivedAmountQR.Text) Then
                lblAlertQR.Text = "RECEIPT AMOUNT AND SUM OF APPLIED SALES ORDERS SHOULD BE EQUAL"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

                Exit Sub
            End If


            If ddlPaymentModeQR.SelectedIndex = 0 Then
                lblAlertQR.Text = "Please Select Payment Mode"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            If ddlBankCodeQR.SelectedIndex = 0 Then
                lblAlertQR.Text = "Please Enter Bank"
                updPnlMsgQR.Update()
                btnSaveQR.Enabled = True
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            '''''''''''''''''''''''''''''''' 22.10.17

            'Dim commandReceiptExist As MySqlCommand = New MySqlCommand
            'commandReceiptExist.CommandType = CommandType.Text
            'Dim qryReceiptExist As String

            'qryReceiptExist = "SELECT ReceiptBase from tblSales "
            'qryReceiptExist = qryReceiptExist + " where InvoiceNumber ='" & txtInvoiceNo.Text & "'"

            'commandReceiptExist.CommandText = qryReceiptExist
            'commandReceiptExist.Parameters.Clear()
            'commandReceiptExist.Connection = conn

            'Dim drReceiptExist As MySqlDataReader = commandReceiptExist.ExecuteReader()
            'Dim dtReceiptExist As New DataTable
            'dtReceiptExist.Load(drReceiptExist)


            'If Convert.ToDecimal(dtReceiptExist.Rows(0)("ReceiptBase").ToString) > 0.0 Then
            '    SQLDSInvoice.SelectCommand = txt.Text
            '    SQLDSInvoice.DataBind()
            '    GridView1.DataSourceID = "SQLDSInvoice"
            '    GridView1.DataBind()
            '    mdlQuickReceipt.Hide()
            '    Exit Sub
            'End If

            ''''''''''''''''''''''''''''''''' 22.10.17

            '''''''''''''''''''''''''''''''''''

            'Start: CheckOSAmount
            'SetRowDataBillingDetailsRecsQR()
            'Dim tableAdd1 As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)

            '                If tableAdd1 IsNot Nothing Then

            '                    For rowIndex1 As Integer = 0 To tableAdd1.Rows.Count - 1
            '                        'Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("chkSelectGV"), CheckBox)
            '        Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex1).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)

            '                        If (String.IsNullOrEmpty(TextBoxOtherCode.Text.Trim) = False) Then
            '            Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex1).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
            '            Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex1).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)

            '                            If String.IsNullOrEmpty(TextBoxInvoiceNo.Text) = False Then

            '                                Dim command1 As MySqlCommand = New MySqlCommand
            '                                command1.CommandType = CommandType.Text
            '                                Dim qry1 As String

            '                                qry1 = "SELECT AppliedBase, BalanceBase from tblSales "
            '                                qry1 = qry1 + " where InvoiceNumber ='" & TextBoxInvoiceNo.Text & "'"

            '                                command1.CommandText = qry1
            '                                command1.Parameters.Clear()
            '                                command1.Connection = conn

            '                                Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            '                                Dim dt1 As New DataTable
            '                                dt1.Load(dr1)

            '                                If Convert.ToDecimal(TextBoxReceiptAmt.Text) > Convert.ToDecimal(dt1.Rows(0)("AppliedBase").ToString) Then
            '                                    lblAlertQR.Text = "Receipt Amount is more than Invoice Amount for the Invoice : " & TextBoxInvoiceNo.Text
            '                                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                                    updPnlMsgQR.Update()
            '                                    Exit Sub
            '                                End If


            '                                '''''''''''''''''''
            '                                Dim command2 As MySqlCommand = New MySqlCommand
            '                                command2.CommandType = CommandType.Text
            '                                Dim qry2 As String

            '                                qry2 = "SELECT ifnull(sum(ValueBase+gstBase-receiptbase),0) as OSAmt from tblSales "
            '                                qry2 = qry2 + " where InvoiceNumber ='" & TextBoxInvoiceNo.Text & "'"

            '                                command2.CommandText = qry2
            '                                command2.Parameters.Clear()
            '                                command2.Connection = conn

            '                                Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            '                                Dim dt2 As New DataTable
            '                                dt2.Load(dr2)


            '                                If Convert.ToDecimal(TextBoxReceiptAmt.Text) > Convert.ToDecimal(dt2.Rows(0)("OSAmt").ToString) Then
            '                                    lblAlertQR.Text = "Receipt Amount is more than Balance Amount for the Invoice : " & TextBoxInvoiceNo.Text
            '                                    ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            '                                    updPnlMsgQR.Update()
            '                                    Exit Sub
            '                                End If

            '                                '''''''''''''''''''''
            '                            End If
            '                        End If

            '                    Next rowIndex1
            '                End If

            'End: CheckOSAmount

            ''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecsQR()
            Dim tableAdd As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)

            If tableAdd IsNot Nothing Then
                Dim command As MySqlCommand = New MySqlCommand

                command.CommandType = CommandType.Text
                Dim qry As String

                'If txtMode.Text = "NEW" Then
                qry = "INSERT INTO tblRecv(ReceiptNumber, ReceiptFrom, AccountId, ReceiptDate, Cheque, ChequeDate, BankId,  "
                qry = qry + "   LedgerCode, LedgerName,  PaymentType, BankName, Bank, BaseAmount, AppliedBase, AppliedOriginal, GSTAmount,  NetAmount, BankAmount, "
                qry = qry + "  Comments, ContactType, CompanyGroup, GLPeriod, Salesman, InvoiceType, Addr1, Addr2, Addr3, Addr4, Location, "
                qry = qry + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                qry = qry + " (@ReceiptNumber, @ReceiptFrom, @AccountId, @ReceiptDate, @Cheque, @ChequeDate, @BankId, "
                qry = qry + "  @LedgerCode, @LedgerName,  @PaymentType, @BankName, @Bank, @BaseAmount, @AppliedBase, @AppliedOriginal, @GSTAmount,  @NetAmount, @BankAmount,"
                qry = qry + "  @Comments, @ContactType, @CompanyGroup, @GLPeriod,  @Salesman, @InvoiceType, @Addr1, @Addr2, @Addr3, @Addr4, @Location, "
                qry = qry + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                command.CommandText = qry
                command.Parameters.Clear()


                command.Parameters.AddWithValue("@ReceiptFrom", txtAccountName.Text.ToUpper)
                command.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text.ToUpper)

                If String.IsNullOrEmpty(txtReceiptDateQR.Text.Trim) = True Then
                    command.Parameters.AddWithValue("@ReceiptDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@ReceiptDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@Comments", txtCommentsQR.Text.ToUpper)
                command.Parameters.AddWithValue("@Cheque", txtChequeNoQR.Text.ToUpper)
                If ddlPaymentModeQR.SelectedIndex = 0 Then
                    command.Parameters.AddWithValue("@PaymentType", "")
                Else
                    command.Parameters.AddWithValue("@PaymentType", ddlPaymentModeQR.Text.ToUpper)
                End If

                If String.IsNullOrEmpty(txtReceiptDateQR.Text.Trim) = True Then
                    command.Parameters.AddWithValue("@ChequeDate", DBNull.Value)
                Else
                    command.Parameters.AddWithValue("@ChequeDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
                End If

                command.Parameters.AddWithValue("@BaseAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))
                command.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtReceivedAmountQR.Text))
                command.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtReceivedAmountQR.Text))

                command.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtTotalGSTAmt.Text))
                command.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))
                command.Parameters.AddWithValue("@BankAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))

                command.Parameters.AddWithValue("@Bank", ddlBankCodeQR.Text.ToUpper)
                command.Parameters.AddWithValue("@BankId", txtBankIDQR.Text.ToUpper)
                command.Parameters.AddWithValue("@LedgerCode", txtBankGLCodeQR.Text.ToUpper)
                command.Parameters.AddWithValue("@LedgerName", txtLedgerNameQR.Text.ToUpper)
                command.Parameters.AddWithValue("@BankName", txtBankNameQR.Text.ToUpper)

                command.Parameters.AddWithValue("@ContactType", txtAccountType.Text.ToUpper)
                command.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text.ToUpper)
                command.Parameters.AddWithValue("@GLPeriod", txtReceiptPeriodQR.Text)

                If txtSalesmanQR.Text = "-1" Then
                    command.Parameters.AddWithValue("@Salesman", "")
                Else
                    command.Parameters.AddWithValue("@Salesman", txtSalesmanQR.Text.ToUpper)
                End If

                command.Parameters.AddWithValue("@InvoiceType", "")

                command.Parameters.AddWithValue("@Addr1", txtBillAddress.Text)
                command.Parameters.AddWithValue("@Addr2", txtBillStreet.Text)
                command.Parameters.AddWithValue("@Addr3", txtBillBuilding.Text)
                command.Parameters.AddWithValue("@Addr4", txtBillCountry.Text & ", " & txtBillPostal.Text)
                command.Parameters.AddWithValue("@Location", txtLocation.Text.ToUpper)

                command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                If String.IsNullOrEmpty(txtReceiptNoQR.Text) = True Then
                    GenerateReceiptNo()
                    updPnlQR.Update()
                End If

                If String.IsNullOrEmpty(txtReceiptNoQR.Text.Trim) = True Then
                    lblAlert1.Text = "RECEIPT NUMBER CANNOT BE BLANK"
                    updPnlMsgQR.Update()
                    Exit Sub
                End If
                command.Parameters.AddWithValue("@ReceiptNumber", txtReceiptNoQR.Text)

                command.Connection = conn
                command.ExecuteNonQuery()

                Dim sqlLastId As String
                sqlLastId = "SELECT last_insert_id() from tblRecv"

                Dim commandRcno As MySqlCommand = New MySqlCommand
                commandRcno.CommandType = CommandType.Text
                commandRcno.CommandText = sqlLastId
                commandRcno.Parameters.Clear()
                commandRcno.Connection = conn
                txtRcno.Text = commandRcno.ExecuteScalar()

                commandRcno.Dispose()

                Dim commandtblServiceBillingDetailItem As MySqlCommand = New MySqlCommand

                commandtblServiceBillingDetailItem.CommandType = CommandType.Text
                'Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblServiceBillingDetailItem where BatchNo = '" & txtBatchNo.Text & "'"
                Dim qrycommandtblServiceBillingDetailItem As String = "DELETE from tblRecvDet where ReceiptNumber = '" & txtReceiptNoQR.Text & "'"

                commandtblServiceBillingDetailItem.CommandText = qrycommandtblServiceBillingDetailItem
                commandtblServiceBillingDetailItem.Parameters.Clear()
                commandtblServiceBillingDetailItem.Connection = conn
                commandtblServiceBillingDetailItem.ExecuteNonQuery()

                'End: Delete Existing Records

                For rowIndex As Integer = 0 To tableAdd.Rows.Count - 1
                    'string txSpareId = row.ItemArray[0] as string;
                    Dim TextBoxchkSelect As CheckBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("chkSelectGVQR"), CheckBox)
                    Dim TextBoxOtherCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGVQR"), TextBox)

                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetailsQR.Rows(rowIndex).FindControl("txtItemTypeGVQR"), DropDownList)


                    'If (TextBoxchkSelect.Checked = True) Then
                    If (TextBoxItemType.SelectedValue) <> "-1" And String.IsNullOrEmpty(TextBoxOtherCode.Text) = False Then
                        'If (String.IsNullOrEmpty(TextBoxOtherCode.Text.Trim) = False) Then
                        'Header
                        rowselected = rowselected + 1

                        Dim TextBoxInvoiceNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtInvoiceNoGVQR"), TextBox)
                        Dim TextBoxInvoicePrice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtPriceWithDiscGVQR"), TextBox)
                        Dim TextBoxInvoiceGST As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtGSTAmtGVQR"), TextBox)
                        Dim TextBoxInvoiceValue As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtTotalPriceWithGSTGVQR"), TextBox)
                        Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtReceiptAmtGVQR"), TextBox)
                        Dim TextBoxInvoiceDate As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtInvoiceDateGVQR"), TextBox)
                        Dim TextBoxRcnoInvoice As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtRcnoInvoiceGVQR"), TextBox)

                        Dim TextBoxContractNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtContractNoGVQR"), TextBox)
                        Dim TextBoxServiceRecordNo As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtServiceNoGVQR"), TextBox)
                        Dim TextBoxInvoiceType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtInvoiceTypeGVQR"), TextBox)
                        Dim TextBoxTaxType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtTaxTypeGVQR"), TextBox)

                        Dim TextBoxItemCode As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtItemCodeGVQR"), TextBox)
                        Dim TextBoxTerms As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtARCodeGVQR"), TextBox)
                        'Dim TextBoxOtherCode As TextBox = CType(grvBillingDetails.Rows(rowIndex).Cells(0).FindControl("txtOtherCodeGV"), TextBox)
                        Dim TextBoxRemarks As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtRemarksGVQR"), TextBox)

                        Dim TextBoxGLDescription As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtGLDescriptionGVQR"), TextBox)

                        Dim TextBoxDocType As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtDocTypeGVQR"), TextBox)
                        Dim TextBoxSourceRcno As TextBox = CType(grvBillingDetailsQR.Rows(rowIndex).Cells(0).FindControl("txtSourceRcnoGVQR"), TextBox)

                        If String.IsNullOrEmpty(TextBoxSourceRcno.Text) = True Then
                            TextBoxSourceRcno.Text = 0
                        End If

                        Dim lContractGroup As String
                        lContractGroup = ""

                        If String.IsNullOrEmpty(TextBoxContractNo.Text) = False Then
                            Dim commandCG As MySqlCommand = New MySqlCommand
                            commandCG.CommandType = CommandType.Text

                            commandCG.CommandText = "SELECT ContractGroup FROM tblContract where  ContractNo = '" & TextBoxContractNo.Text & "'"
                            'command1.CommandText = "SELECT * FROM tblbillingproducts where  ProductCode = 'IN-DEF'"
                            commandCG.Connection = conn

                            Dim drCG As MySqlDataReader = commandCG.ExecuteReader()
                            Dim dtCG As New DataTable
                            dtCG.Load(drCG)


                            lContractGroup = dtCG.Rows(0)("ContractGroup").ToString
                            commandCG.Dispose()
                            dtCG.Dispose()
                        End If

                        Dim commandSalesDetail As MySqlCommand = New MySqlCommand

                        commandSalesDetail.CommandType = CommandType.Text
                        Dim qrySalesDetail As String = "INSERT INTO tblRecvDet(ReceiptNumber, RefType, InvoiceNo, InvoiceDate, InvoicePrice, InvoiceGST, InvoiceValue,  "
                        qrySalesDetail = qrySalesDetail + "ReceiptValue, LedgerCode, LedgerName, RcnoServiceBillingItem, ContractNo, ServiceRecordNo, InvoiceType, TaxType, ItemCode, Terms, ContractGroup,  "
                        qrySalesDetail = qrySalesDetail + "UnitBase, UnitOriginal, ValueBase, ValueOriginal, AppliedBase, AppliedOriginal, SubCode, Description, Quantity, Exchangerate, Currency,   DocType, SourceRcno, AccountID, AccountName, "
                        qrySalesDetail = qrySalesDetail + "CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                        qrySalesDetail = qrySalesDetail + "(@ReceiptNumber, @RefType, @InvoiceNo, @InvoiceDate, @InvoicePrice, @InvoiceGST,  @InvoiceValue, "
                        qrySalesDetail = qrySalesDetail + "@ReceiptValue, @LedgerCode, @LedgerName, @RcnoServiceBillingItem, @ContractNo, @ServiceRecordNo, @InvoiceType, @TaxType, @ItemCode, @Terms, @ContractGroup, "
                        qrySalesDetail = qrySalesDetail + "@UnitBase, @UnitOriginal, @ValueBase, @ValueOriginal, @AppliedBase, @AppliedOriginal, @SubCode, @Description, @Quantity, @Exchangerate, @Currency, @DocType, @SourceRcno, @AccountID, @AccountName,"
                        qrySalesDetail = qrySalesDetail + "@CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                        commandSalesDetail.CommandText = qrySalesDetail
                        commandSalesDetail.Parameters.Clear()

                        commandSalesDetail.Parameters.AddWithValue("@ReceiptNumber", txtReceiptNoQR.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@InvoiceNo", TextBoxInvoiceNo.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@RefType", TextBoxInvoiceNo.Text.ToUpper)

                        If TextBoxInvoiceDate.Text.Trim = "" Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceDate", DBNull.Value)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceDate", Convert.ToDateTime(TextBoxInvoiceDate.Text).ToString("yyyy-MM-dd"))
                        End If

                        'commandSalesDetail.Parameters.AddWithValue("@InvoiceDate", TextBoxInvoiceDate.Text)

                        If String.IsNullOrEmpty(TextBoxInvoicePrice.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", Convert.ToDecimal(TextBoxInvoicePrice.Text))
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", 0.0)
                        End If


                        If String.IsNullOrEmpty(TextBoxInvoiceGST.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceGST", Convert.ToDecimal(TextBoxInvoiceGST.Text))
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceGST", 0.0)
                        End If

                        'commandSalesDetail.Parameters.AddWithValue("@InvoiceGST", Convert.ToDecimal(TextBoxInvoiceGST.Text))
                        'commandSalesDetail.Parameters.AddWithValue("@InvoiceValue", Convert.ToDecimal(TextBoxInvoiceValue.Text))

                        If String.IsNullOrEmpty(TextBoxInvoiceValue.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceValue", Convert.ToDecimal(TextBoxInvoiceValue.Text))
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@InvoiceValue", 0.0)
                        End If

                        'If String.IsNullOrEmpty(TextBoxInvoicePrice.Text) = False Then
                        '    commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", Convert.ToDecimal(TextBoxInvoicePrice.Text))
                        'Else
                        '    commandSalesDetail.Parameters.AddWithValue("@InvoicePrice", 0.00))
                        'End If

                        commandSalesDetail.Parameters.AddWithValue("@ReceiptValue", Convert.ToDecimal(TextBoxReceiptAmt.Text))



                        commandSalesDetail.Parameters.AddWithValue("@LedgerCode", TextBoxOtherCode.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@LedgerName", TextBoxGLDescription.Text.ToUpper)

                        'commandSalesDetail.Parameters.AddWithValue("@LedgerCode", txtARCode.Text)
                        'commandSalesDetail.Parameters.AddWithValue("@LedgerName", txtARDescription.Text)

                        If String.IsNullOrEmpty(TextBoxRcnoInvoice.Text) = False Then
                            commandSalesDetail.Parameters.AddWithValue("@RcnoServiceBillingItem", TextBoxRcnoInvoice.Text)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@RcnoServiceBillingItem", 0.0)
                        End If


                        commandSalesDetail.Parameters.AddWithValue("@ContractNo", TextBoxContractNo.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@ServiceRecordNo", TextBoxServiceRecordNo.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@InvoiceType", TextBoxInvoiceType.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@TaxType", TextBoxTaxType.Text.ToUpper)

                        commandSalesDetail.Parameters.AddWithValue("@ItemCode", TextBoxItemCode.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@Terms", TextBoxTerms.Text.ToUpper)
                        commandSalesDetail.Parameters.AddWithValue("@ContractGroup", lContractGroup.ToUpper)

                        'commandSalesDetail.Parameters.AddWithValue("@ValueBase", 1)
                        'commandSalesDetail.Parameters.AddWithValue("@GSTBase", 1)
                        'commandSalesDetail.Parameters.AddWithValue("@AppliedBase", 1)

                        commandSalesDetail.Parameters.AddWithValue("@UnitBase", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@UnitOriginal", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(TextBoxReceiptAmt.Text))
                        commandSalesDetail.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(TextBoxReceiptAmt.Text))

                        commandSalesDetail.Parameters.AddWithValue("@SubCode", TextBoxItemType.Text)
                        commandSalesDetail.Parameters.AddWithValue("@Description", TextBoxRemarks.Text)

                        commandSalesDetail.Parameters.AddWithValue("@Quantity", 1.0)
                        commandSalesDetail.Parameters.AddWithValue("@Exchangerate", 1.0)
                        commandSalesDetail.Parameters.AddWithValue("@Currency", "SGD")


                        ''''''''''''''''''''
                        If TextBoxItemType.Text = "ARIN" And String.IsNullOrEmpty(TextBoxInvoiceNo.Text) = True Then
                            commandSalesDetail.Parameters.AddWithValue("@DocType", "INV")
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@DocType", TextBoxDocType.Text)
                        End If


                    
                        If TextBoxDocType.Text = "RCT" Then
                            commandSalesDetail.Parameters.AddWithValue("@SourceRcno", TextBoxSourceRcno.Text)
                        Else
                            commandSalesDetail.Parameters.AddWithValue("@SourceRcno", 0)
                        End If


                        commandSalesDetail.Parameters.AddWithValue("@AccountID", txtAccountIdBilling.Text)
                        commandSalesDetail.Parameters.AddWithValue("@AccountName", txtAccountName.Text.ToUpper)


                        ''''''''''''''''''''''''


                        commandSalesDetail.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        commandSalesDetail.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        commandSalesDetail.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        commandSalesDetail.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        commandSalesDetail.Connection = conn
                        commandSalesDetail.ExecuteNonQuery()

                        commandSalesDetail.Dispose()


                    End If   'If String.IsNullOrEmpty(TextBoxInvoiceNo.Text)=False then

                Next rowIndex

                command.Dispose()
                commandtblServiceBillingDetailItem.Dispose()
            End If

            conn.Close()
            conn.Dispose()


            'If txtMode.Text = "NEW" Then
            lblMessageQR.Text = "ADD: RECEIPT RECORD SUCCESSFULLY ADDED"
            lblMessage.Text = "ADD: RECEIPT RECORD SUCCESSFULLY ADDED"
            'Else
            'lblMessageQR.Text = "EDIT: RECEIPT RECORD SUCCESSFULLY UPDATED"
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "RECEIPT", txtReceiptNoQR.Text, "ADD/POST", Convert.ToDateTime(txtCreatedOn.Text), txtReceivedAmountQR.Text, 0, txtReceivedAmountQR.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            'End If

            PostReceipt()

            CalculateTotal()
            lblAlert.Text = ""
            btnPost.Enabled = True
            updPnlMsg.Update()
            updPnlSearch.Update()

            InsertNewLogReceiptDetail()
            'updpnlServiceRecs.Update()

            mdlQuickReceipt.Hide()
            GridView1_SelectedIndexChanged(New Object(), New EventArgs)
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnSaveQR_click", ex.Message.ToString, txtReceiptNoQR.Text)
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub


    Private Sub GenerateReceiptNo()
        Try
            Dim lPrefix As String
            Dim lYear As String
            Dim lMonth As String
            Dim lInvoiceNo As String
            Dim lSuffixVal As String
            Dim lSuffix As String
            Dim lSetWidth As Integer
            Dim lSetZeroes As String
            Dim lSeparator As String

            Dim strUpdate As String
            lSeparator = "-"
            strUpdate = ""

            Dim strdate As Date
            Dim d As Date
            If Date.TryParseExact(txtReceiptDateQR.Text, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, d) Then
                strdate = d.ToShortDateString
            End If


            lPrefix = Format(CDate(strdate), "yyyyMM")
            'lInvoiceNo = "RCPT" + lPrefix + "-"
            lInvoiceNo = txtRecvPrefixQR.Text + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            'lPrefix = "RCPT" + lYear
            lSuffixVal = 0


            ''''''''''''''
            lInvoiceNo = txtRecvPrefixQR.Text + lPrefix + "-"
            lMonth = Right(lPrefix, 2)
            lYear = Left(lPrefix, 4)

            lPrefix = txtRecvPrefixQR.Text + lYear
            lPrefix = Right(lPrefix, 6)
            lSuffixVal = 0

            '''''''''''''''

            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            Dim commandDocControl As MySqlCommand = New MySqlCommand
            commandDocControl.CommandType = CommandType.Text
            commandDocControl.CommandText = "SELECT * FROM tbldoccontrol where prefix='" & lPrefix & "'"
            commandDocControl.Connection = conn

            Dim dr As MySqlDataReader = commandDocControl.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then

                'If lMonth = "01" Then
                lSuffixVal = dt.Rows(0)("Period01").ToString + 1
                lSetWidth = dt.Rows(0)("Width").ToString

                strUpdate = " Update tbldoccontrol set Period01 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "02" Then
                '    lSuffixVal = dt.Rows(0)("Period02").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period02 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "03" Then
                '    lSuffixVal = dt.Rows(0)("Period03").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period03 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "04" Then
                '    lSuffixVal = dt.Rows(0)("Period04").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period04 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "05" Then
                '    lSuffixVal = dt.Rows(0)("Period05").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period05 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "06" Then
                '    lSuffixVal = dt.Rows(0)("Period06").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period06 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "07" Then
                '    lSuffixVal = dt.Rows(0)("Period07").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period07 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "08" Then
                '    lSuffixVal = dt.Rows(0)("Period08").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period08 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "09" Then
                '    lSuffixVal = dt.Rows(0)("Period09").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period09 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "10" Then
                '    lSuffixVal = dt.Rows(0)("Period10").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period10 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "11" Then
                '    lSuffixVal = dt.Rows(0)("Period11").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString

                '    strUpdate = " Update tbldoccontrol set Period11 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'ElseIf lMonth = "12" Then
                '    lSuffixVal = dt.Rows(0)("Period12").ToString + 1
                '    lSetWidth = dt.Rows(0)("Width").ToString
                '    strUpdate = " Update tbldoccontrol set Period12 = " & lSuffixVal & " where prefix='" & lPrefix & "'"

                'End If

                Dim commandDocControlEdit As MySqlCommand = New MySqlCommand

                commandDocControlEdit.CommandType = CommandType.Text
                commandDocControlEdit.CommandText = strUpdate
                commandDocControlEdit.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlEdit.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                commandDocControlEdit.Dispose()
                dt2.Dispose()
            Else

                Dim lSuffixVal1 As String
                Dim lSuffixVal2 As String
                Dim lSuffixVal3 As String
                Dim lSuffixVal4 As String
                Dim lSuffixVal5 As String
                Dim lSuffixVal6 As String
                Dim lSuffixVal7 As String
                Dim lSuffixVal8 As String
                Dim lSuffixVal9 As String
                Dim lSuffixVal10 As String
                Dim lSuffixVal11 As String
                Dim lSuffixVal12 As String

                lSuffixVal1 = 0
                lSuffixVal2 = 0
                lSuffixVal3 = 0
                lSuffixVal4 = 0
                lSuffixVal5 = 0
                lSuffixVal6 = 0
                lSuffixVal7 = 0
                lSuffixVal8 = 0
                lSuffixVal9 = 0
                lSuffixVal10 = 0
                lSuffixVal11 = 0
                lSuffixVal12 = 0

                If lMonth = "01" Then
                    lSuffixVal1 = 1
                ElseIf lMonth = "02" Then
                    lSuffixVal2 = 1
                ElseIf lMonth = "03" Then
                    lSuffixVal3 = 1
                ElseIf lMonth = "04" Then
                    lSuffixVal4 = 1
                ElseIf lMonth = "05" Then
                    lSuffixVal5 = 1
                ElseIf lMonth = "06" Then
                    lSuffixVal6 = 1
                ElseIf lMonth = "07" Then
                    lSuffixVal7 = 1
                ElseIf lMonth = "08" Then
                    lSuffixVal8 = 1
                ElseIf lMonth = "09" Then
                    lSuffixVal9 = 1
                ElseIf lMonth = "10" Then
                    lSuffixVal10 = 1
                ElseIf lMonth = "11" Then
                    lSuffixVal11 = 1
                ElseIf lMonth = "12" Then
                    lSuffixVal12 = 1
                End If


                Dim commandDocControlInsert As MySqlCommand = New MySqlCommand

                commandDocControlInsert.CommandType = CommandType.Text
                'commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                '               "('" & lPrefix & "','M','" & lSeparator & "',6,0,0,0,0,0,0,0,0,0,0,0,0)"

                commandDocControlInsert.CommandText = "INSERT INTO tbldoccontrol(Prefix,GenerateMethod,`Separator`,Width,Period01,Period02,Period03,Period04,Period05,Period06,Period07,Period08,Period09,Period10,Period11,Period12) VALUES " & _
                              "('" & lPrefix & "','M','" & lSeparator & "',6," & lSuffixVal1 & "," & lSuffixVal2 & "," & lSuffixVal3 & "," & lSuffixVal4 & "," & lSuffixVal5 & "," & lSuffixVal6 & "," & lSuffixVal7 & "," & lSuffixVal8 & "," & lSuffixVal9 & "," & lSuffixVal10 & "," & lSuffixVal11 & "," & lSuffixVal12 & ")"
                commandDocControlInsert.Connection = conn

                Dim dr2 As MySqlDataReader = commandDocControlInsert.ExecuteReader()
                Dim dt2 As New DataTable
                dt2.Load(dr2)

                lSetWidth = 6
                lSuffixVal = 1

            End If

            lSetZeroes = ""

            Dim i As Integer
            If lSetWidth > 0 Then
                For i = 1 To lSetWidth - (Len(lSuffixVal))
                    lSetZeroes = lSetZeroes & "0"
                Next i
                'ElseIf pLength = 0 Then                     ' Use 6 and save it in Doc Control
                '    strZeros = "000000"
                '    setWidth = 6
                'Else                                        ' Use vLength and save it in Doc Control
                '    For i = 1 To pLength
                '        strZeros = strZeros & "0"
                '    Next i
                '    setWidth = pLength
            End If
            lSuffix = lSetZeroes + lSuffixVal.ToString()
            txtReceiptNoQR.Text = lInvoiceNo + lSuffix

            dt.Dispose()
            commandDocControl.Dispose()
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION GenerateReceiptNo", ex.Message.ToString, "")
        End Try
    End Sub



    Private Sub PostReceipt()
        Try

            Dim IsSuccess As Boolean = False
            Dim conn As MySqlConnection = New MySqlConnection()

            'Dim rowselected As Integer

            '''''''''''''''''''''''''
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()


            '''''''''''''''''''
            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblrecv set PostStatus = 'P'  where ReceiptNumber ='" & txtReceiptNoQR.Text.Trim & "'"

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()

            '''''''''''''''''''''

            'Dim command5 As MySqlCommand = New MySqlCommand
            'command5.CommandType = CommandType.Text

            'Dim qry5 As String = "DELETE from tblAR where VoucherNumber = '" & txtReceiptNoQR.Text & "'"

            'command5.CommandText = qry5
            ''command1.Parameters.Clear()
            'command5.Connection = conn
            'command5.ExecuteNonQuery()

            Dim qryAR As String
            Dim commandAR As MySqlCommand = New MySqlCommand
            commandAR.CommandType = CommandType.Text

            'If Convert.ToDecimal(txtReceiptAmt.Text) > 0.0 Then
            '    qryAR = "INSERT INTO tblAR(VoucherNumber, AccountId, CustomerName, VoucherDate, InvoiceNumber,  GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, BillingPeriod, "
            '    qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
            '    qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode,  @GLDescription, @DebitAmount, @CreditAmount,  @BatchNo, @CompanyGroup, @ContractNo,  @ModuleName, @BillingPeriod,"
            '    qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

            '    commandAR.CommandText = qryAR
            '    commandAR.Parameters.Clear()
            '    commandAR.Parameters.AddWithValue("@VoucherNumber", txtReceiptNoQR.Text)
            '    commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
            '    commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
            '    If txtReceiptDateQR.Text.Trim = "" Then
            '        commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
            '    Else
            '        commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
            '    End If
            '    commandAR.Parameters.AddWithValue("@BillingPeriod", txtReceiptPeriodQR.Text)
            '    commandAR.Parameters.AddWithValue("@ContractNo", "")
            '    commandAR.Parameters.AddWithValue("@InvoiceNumber", "")
            '    commandAR.Parameters.AddWithValue("@GLCode", txtBankGLCodeQR.Text)
            '    commandAR.Parameters.AddWithValue("@GLDescription", txtBankNameQR.Text)
            '    commandAR.Parameters.AddWithValue("@DebitAmount", Convert.ToDecimal(txtReceivedAmountQR.Text))
            '    commandAR.Parameters.AddWithValue("@CreditAmount", 0.0)
            '    commandAR.Parameters.AddWithValue("@BatchNo", txtReceiptNoQR.Text)
            '    commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
            '    commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
            '    commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            '    'command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
            '    commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

            '    commandAR.Connection = conn
            '    commandAR.ExecuteNonQuery()
            'End If


            'Start:Loop thru' Credit values

            Dim commandValues As MySqlCommand = New MySqlCommand

            commandValues.CommandType = CommandType.Text
            commandValues.CommandText = "SELECT RefType, ReceiptValue  FROM tblrecvdet where ReceiptNumber ='" & txtReceiptNoQR.Text.Trim & "'"
            commandValues.Connection = conn

            Dim drValues As MySqlDataReader = commandValues.ExecuteReader()
            Dim dtValues As New DataTable
            dtValues.Load(drValues)


            Dim lTotalReceiptAmt As Decimal
            Dim lInvoiceAmt As Decimal
            'Dim lReceptAmtAdjusted As Decimal

            lTotalReceiptAmt = 0.0
            lInvoiceAmt = 0.0

            lTotalReceiptAmt = dtValues.Rows(0)("ReceiptValue").ToString
            Dim rowindex = 0


            For Each row As DataRow In dtValues.Rows

                'qryAR = "INSERT INTO tblAR(VoucherNumber,  AccountId, CustomerName, VoucherDate, InvoiceNumber, GLCode, GLDescription, DebitAmount, CreditAmount, BatchNo, CompanyGroup, ContractNo, ModuleName, ServiceRecordNo, ServiceDate, BillingPeriod, Salesman, InvoiceType, GLType,  "
                'qryAR = qryAR + " CreatedOn,CreatedBy,LastModifiedBy,LastModifiedOn) VALUES "
                'qryAR = qryAR + " (@VoucherNumber, @AccountId, @CustomerName, @VoucherDate, @InvoiceNumber, @GLCode, @GLDescription, @DebitAmount, @CreditAmount, @BatchNo, @CompanyGroup,  @ContractNo, @ModuleName, @ServiceRecordNo, @ServiceDate,  @BillingPeriod, @Salesman, @InvoiceType, @GLType,"
                'qryAR = qryAR + " @CreatedOn, @CreatedBy, @LastModifiedBy, @LastModifiedOn);"

                'commandAR.CommandText = qryAR
                'commandAR.Parameters.Clear()
                'commandAR.Parameters.AddWithValue("@VoucherNumber", txtReceiptNoQR.Text)
                'commandAR.Parameters.AddWithValue("@AccountId", txtAccountIdBilling.Text)
                'commandAR.Parameters.AddWithValue("@CustomerName", txtAccountName.Text)
                'If txtReceiptDateQR.Text.Trim = "" Then
                '    commandAR.Parameters.AddWithValue("@VoucherDate", DBNull.Value)
                'Else
                '    commandAR.Parameters.AddWithValue("@VoucherDate", Convert.ToDateTime(txtReceiptDateQR.Text).ToString("yyyy-MM-dd"))
                'End If
                'commandAR.Parameters.AddWithValue("@BillingPeriod", txtReceiptPeriodQR.Text)
                'commandAR.Parameters.AddWithValue("@ContractNo", row("ContractNo"))
                'commandAR.Parameters.AddWithValue("@InvoiceNumber", row("InvoiceNo"))
                'commandAR.Parameters.AddWithValue("@GLCode", row("LedgerCode"))
                'commandAR.Parameters.AddWithValue("@GLDescription", row("LedgerName"))
                'commandAR.Parameters.AddWithValue("@DebitAmount", 0.0)

                ''commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(row("ReceiptValue")))
                'commandAR.Parameters.AddWithValue("@CreditAmount", Convert.ToDecimal(dtValues.Rows(rowindex)("ReceiptValue").ToString))

                'commandAR.Parameters.AddWithValue("@BatchNo", txtReceiptNoQR.Text)
                'commandAR.Parameters.AddWithValue("@CompanyGroup", txtCompanyGroup.Text)
                'commandAR.Parameters.AddWithValue("@ModuleName", "Receipt")
                'commandAR.Parameters.AddWithValue("@GLType", "Debtor")
                'commandAR.Parameters.AddWithValue("@ServiceRecordNo", row("ServiceRecordNo"))

                'commandAR.Parameters.AddWithValue("@ServiceDate", DBNull.Value)
                ''Else
                ''commandAR.Parameters.AddWithValue("@ServiceDate", Convert.ToDateTime(lServiceDate).ToString("yyyy-MM-dd"))
                ''End If


                'commandAR.Parameters.AddWithValue("@Salesman", txtSalesmanQR.Text)
                'commandAR.Parameters.AddWithValue("@InvoiceType", row("InvoiceType"))

                'commandAR.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                ''command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                'commandAR.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                'commandAR.Connection = conn
                'commandAR.ExecuteNonQuery()


                ''Start: Update tblSales

                ' ''''''''''''''''''''

                If String.IsNullOrEmpty(row("RefType")) = False Then
                    UpdateTblSalesQR(row("RefType"))
                End If


                rowindex = rowindex + 1
            Next row


            SQLDSInvoice.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()


            conn.Close()
            conn.Dispose()
            'command5.Dispose()
            commandUpdateInvoice.Dispose()
            commandValues.Dispose()
            dtValues.Dispose()
            commandAR.Dispose()
            IsSuccess = True
            'Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PostReceipt", ex.Message.ToString, "")
        End Try

    End Sub


    Private Sub UpdateTblSalesQR(strInvoiceNo As String)
        Try
            Dim lTotalReceipt As Decimal
            Dim lInvoiceAmount As Decimal
            Dim lTotalcn As Decimal
            lTotalReceipt = 0.0
            lInvoiceAmount = 0.0
            lTotalcn = 0.0


            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            command1.CommandText = "SELECT AppliedBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo & "'"
            command1.Connection = conn

            Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            Dim dt1 As New DataTable
            dt1.Load(dr1)

            If dt1.Rows.Count > 0 Then
                lInvoiceAmount = dt1.Rows(0)("AppliedBase").ToString
            End If

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            Dim command2 As MySqlCommand = New MySqlCommand
            command2.CommandType = CommandType.Text
            'command2.CommandText = "SELECT sum(a.AppliedBase) as totalreceipt FROM tblrecvdet a, tblRecv b where a.ReceiptNumber = b.ReceiptNumber and  a.RefTYpe = '" & strInvoiceNo & "' and b.PostStatus = 'P'"
            'vSql = "UPDATE m02Sales SET ReceiptBase = (SELECT SUM(A.ValueBase+A.GstBase) FROM m02RecvDet A, m02Recv B WHERE " & _
            '       "A.VoucherNumber=B.VoucherNumber AND A.SubCode = 'ARIN'  AND A.RefType = m02Sales.VoucherNumber AND " & _
            '       "B.PostStatus = 'P' ) WHERE VoucherNumber = '" & cls00Regional.String_Filter(vVoucherNumber) & "' "
            'If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")

            'vSql = "UPDATE m02Sales SET ReceiptOriginal = (SELECT SUM(A.ValueOriginal+A.GstOriginal) FROM m02RecvDet A, m02Recv B WHERE " & _

            '    "A.VoucherNumber=B.VoucherNumber AND A.SubCode = 'ARIN' AND A.RefType = m02Sales.VoucherNumber AND " & _
            '    "B.PostStatus = 'P' ) WHERE VoucherNumber = '" & cls00Regional.String_Filter(vVoucherNumber) & "' "
            'If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")

            command2.CommandText = "UPDATE tblSales SET ReceiptBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblRecvDet A, tblRecv B WHERE " & _
                  "A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN'  AND A.RefType = tblSales.InvoiceNumber AND " & _
                  "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "' "
            'If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")



            'If cls00Connection.UpdateData(vSql, vpConnStr) = False Then MsgBox(" update ARIN error!")
            command2.Connection = conn

            'command4.Connection = conn
            command2.ExecuteNonQuery()

            'Dim dr2 As MySqlDataReader = command2.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then
            '    lTotalReceipt = dt2.Rows(0)("totalreceipt").ToString
            'End If
            ''''''''''''''''''''''''

            ''''''''''''''''''''''''
            Dim lbalance As Decimal
            Dim command3 As MySqlCommand = New MySqlCommand
            command3.CommandType = CommandType.Text
            command3.CommandText = "SELECT ValueBase, GSTBase ,ReceiptBase, CreditBase FROM tblSales where InvoiceNumber = '" & strInvoiceNo & "'"
            'command3.CommandText = "UPDATE tblSales SET ReceiptOriginal = (SELECT SUM(A.ValueOriginal+A.GstOriginal) FROM tblRecvDet A, tblRecv B WHERE " & _
            '"A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN' AND A.RefType = tblSales.InvoiceNumber AND " & _
            '"B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & strInvoiceNo & "' "
            command3.Connection = conn

            'command4.Connection = conn
            command3.ExecuteNonQuery()

            Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            Dim dt3 As New DataTable
            dt3.Load(dr3)

            If dt3.Rows.Count > 0 Then

                If String.IsNullOrEmpty(dt3.Rows(0)("ValueBase").ToString) = False Then
                    lbalance = dt3.Rows(0)("ValueBase").ToString
                Else
                    lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("GSTBase").ToString) = False Then
                    lbalance = lbalance + dt3.Rows(0)("GSTBase").ToString
                Else
                    'lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("ReceiptBase").ToString) = False Then
                    lbalance = lbalance - dt3.Rows(0)("ReceiptBase").ToString
                Else
                    'lbalance = 0.0
                End If

                If String.IsNullOrEmpty(dt3.Rows(0)("CreditBase").ToString) = False Then
                    lbalance = lbalance - dt3.Rows(0)("CreditBase").ToString
                Else
                    'lbalance = 0.0
                End If
                'lbalance = Convert.ToDecimal(dt3.Rows(0)("ValueBase").ToString) + Convert.ToDecimal(dt3.Rows(0)("GSTBase").ToString) - Convert.ToDecimal(dt3.Rows(0)("ReceiptBase").ToString)
                'If String.IsNullOrEmpty(dt3.Rows(0)("totalcn").ToString) = True Then
                '    lTotalcn = 0.0
                'Else
                '    lTotalcn = dt3.Rows(0)("totalcn").ToString
                'End If
            End If

            ''''''''''''''''''''''''
            'Dim lstatus As String
            'If lInvoiceAmount = lTotalReceipt Then
            '    lstatus = "F"
            'ElseIf lInvoiceAmount > lTotalReceipt Then
            '    lstatus = "P"
            'ElseIf lTotalReceipt > 0 Then
            '    lstatus = "O"
            'End If

            'Dim lstatus As String
            'lstatus = ""
            'If lInvoiceAmount = lTotalReceipt + lTotalcn Then
            '    lstatus = "F"
            'ElseIf lInvoiceAmount > lTotalReceipt + lTotalcn Then
            '    lstatus = "P"
            'ElseIf lTotalReceipt + lTotalcn = 0 Then
            '    lstatus = "O"
            'End If


            'lbalance = lInvoiceAmount - lTotalReceipt - lTotalcn

            Dim command4 As MySqlCommand = New MySqlCommand
            command4.CommandType = CommandType.Text

            ''Dim qry4 As String = "Update tblSales Set PaidStatus = '" & lstatus & "', TotalReceiptAmount = " & lTotalReceipt & " where InvoiceNumber = @InvoiceNumber "
            Dim qry4 As String = "Update tblSales Set BalanceBase = " & lbalance & " where InvoiceNumber = @InvoiceNumber "

            command4.CommandText = qry4
            command4.Parameters.Clear()

            command4.Parameters.AddWithValue("@InvoiceNumber", strInvoiceNo)
            command4.Connection = conn
            command4.ExecuteNonQuery()

            command1.Dispose()
            command2.Dispose()
            command3.Dispose()

            dt1.Dispose()
            dt3.Dispose()
            '    'End: Update tblSales
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION UpdateTblSalesQR", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub chkManualInvoice_CheckedChanged(sender As Object, e As EventArgs) Handles chkManualInvoice.CheckedChanged
        If chkManualInvoice.Checked = True Then
            txtInvoiceNo.Attributes.Remove("readonly")
            txtInvoiceNo.BackColor = Color.White
            txtInvoiceNo.Focus()
        Else
            txtInvoiceNo.Attributes.Add("readonly", "readonly")
            txtInvoiceNo.BackColor = Drawing.Color.FromArgb(204, 204, 204)
            txtInvoiceNo.Text = ""

        End If
    End Sub



    ''''''''''''' start
    Private Function PostInvoice() As Boolean
        Try
            lblAlert.Text = ""
            Dim IsSuccess As Boolean = False
            If Convert.ToDecimal(txtTotalWithGST.Text.Trim).ToString("N2") <> Convert.ToDecimal(txtNetAmount.Text.Trim).ToString("N2") Then
                'If txtNetAmount.Text <> txtTotalWithGST.Text Then
                lblAlert.Text = "SALES ORDER AMOUNT AND SUM OF APPLIED SALES ORDERS SHOULD BE EQUAL.. CANNOT BE POSTED"
                IsSuccess = False
                Return IsSuccess
                Exit Function

            End If

            HeaderDetailTotalSalesOrder("BefPost")
            Dim conn As MySqlConnection = New MySqlConnection()
            '''''''''''''''''''''''''''''''''''''''

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()

            '''''''''''''''''''''''''''''''''''''''''''
            Dim lStatusIsHeaderDetailEqual As String
            Dim commandIsHeaderDetailEqual As MySqlCommand = New MySqlCommand

            commandIsHeaderDetailEqual.CommandType = CommandType.StoredProcedure
            commandIsHeaderDetailEqual.CommandText = "IsHeaderDetailEqual"
            'commandIsExists.Connection = conn
            commandIsHeaderDetailEqual.Parameters.Clear()

            commandIsHeaderDetailEqual.Parameters.AddWithValue("@pr_Module", "SO")
            commandIsHeaderDetailEqual.Parameters.AddWithValue("@pr_DocumentNo", txtInvoiceNo.Text.Trim)

            commandIsHeaderDetailEqual.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            commandIsHeaderDetailEqual.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandIsHeaderDetailEqual.Connection = conn
            commandIsHeaderDetailEqual.ExecuteScalar()

            lStatusIsHeaderDetailEqual = commandIsHeaderDetailEqual.Parameters("@pr_status").Value
          
            commandIsHeaderDetailEqual.Dispose()
            'conn.Close()
            'conn.Dispose()

            If lStatusIsHeaderDetailEqual = "F" Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "SALES ORDER AMOUNT AND SUM OF APPLIED SALES ORDER SHOULD BE EQUAL.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'Exit Function
                'btnSaveInvoice.Enabled = True
                IsSuccess = False
                Return IsSuccess
            End If

            If lStatusIsHeaderDetailEqual = "V" Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE SHOULD BE DETAIL RECORDS.. CANNOT BE POSTED"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                'Exit Function
                'btnSaveInvoice.Enabled = True
                IsSuccess = False
                Return IsSuccess
            End If

            ''''''''''''''''''''''''''''''''''''''''''

            Dim IsServiceRecords As Integer
            Dim lStatus As String

            Dim IsServiceRecords1 As Integer
            Dim lStatus1 As String
            ''''''''''''''''''''''''''''''''
            Dim commandIsExists As MySqlCommand = New MySqlCommand

            commandIsExists.CommandType = CommandType.StoredProcedure
            commandIsExists.CommandText = "IsServiceRecordBilledSales"
            'commandIsExists.Connection = conn
            commandIsExists.Parameters.Clear()

            commandIsExists.Parameters.AddWithValue("@pr_Source", "SALES")
            commandIsExists.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_status", MySqlDbType.String))
            commandIsExists.Parameters("@pr_status").Direction = ParameterDirection.Output

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_status1", MySqlDbType.String))
            commandIsExists.Parameters("@pr_status1").Direction = ParameterDirection.Output

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_count", MySqlDbType.Int64))
            commandIsExists.Parameters("@pr_count").Direction = ParameterDirection.Output

            commandIsExists.Parameters.Add(New MySqlParameter("@pr_count1", MySqlDbType.Int64))
            commandIsExists.Parameters("@pr_count1").Direction = ParameterDirection.Output
            'commandIsExists.Parameters.Add("@pr_status").Direction = ParameterDirection.Output

            commandIsExists.Connection = conn
            commandIsExists.ExecuteScalar()

            IsServiceRecords = commandIsExists.Parameters("@pr_count").Value
            IsServiceRecords1 = commandIsExists.Parameters("@pr_count1").Value

            lStatus = commandIsExists.Parameters("@pr_status").Value
            lStatus1 = commandIsExists.Parameters("@pr_status1").Value

            If (Right(lStatus.Trim, 1)) = "," Then
                lStatus = Left(lStatus.Trim, Len(lStatus.Trim) - 1)
            End If

            If (Right(lStatus1.Trim, 1)) = "," Then
                lStatus1 = Left(lStatus1.Trim, Len(lStatus1.Trim) - 1)
            End If

            commandIsExists.Dispose()
            'conn.Close()
            'conn.Dispose()

            If IsServiceRecords1 > 0 Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE ARE DUPLICATE SERVICE RECORDS IN THE SALES ORDER .. CANNOT BE POSTED "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                IsSuccess = False
                Return IsSuccess
            End If

            If IsServiceRecords > 0 Then
                conn.Close()
                conn.Dispose()
                lblAlert.Text = "THERE IS NO BALANCE AMOUNT TO BE BILLED FOR " & IsServiceRecords & " SERVICE RECORD (S): " & lStatus & " OF THIS SALES ORDER NUMBER .. CANNOT BE POSTED "
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                IsSuccess = False
                Return IsSuccess
            End If

            '''''''''''''''''''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblSalesOrder set PostStatus = 'P'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()


            '''''''''''''''
          
            ' ''''''''''' 06.05.18

            'Dim commandAR As MySqlCommand = New MySqlCommand
            'commandAR.CommandType = CommandType.Text

            ' ''Start:Loop thru' Credit values


            'Dim commandValues As MySqlCommand = New MySqlCommand
            'commandValues.CommandType = CommandType.StoredProcedure
            'commandValues.CommandText = "PostSalesOrderUpdateServiceRecord"

            'commandValues.Parameters.Clear()

            'commandValues.Parameters.AddWithValue("@pr_EditDelete", "Edit")
            'commandValues.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

            'commandValues.Connection = conn
            'commandValues.ExecuteScalar()
          
            Dim dtValues As New DataTable
            'dtValues.Load(drValues)

            ' ''''''''''' 06.05.18


            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            'GridView1.DataBind()
            conn.Close()
            conn.Dispose()

            'command1.Dispose()
            commandUpdateInvoice.Dispose()
            'commandValues.Dispose()
            'commandAR.Dispose()
            dtValues.Dispose()
            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)

            HeaderDetailTotalSalesOrder("AftPost")
            'MakeMeNullBillingDetails()
            'MakeMeNull()
            DisableControls()
            FirstGridViewRowGL()


            ''''''''''''''' Insert tblAR

            IsSuccess = True
            Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION PostInvoice", ex.Message.ToString, txtInvoiceNo.Text)
        End Try

    End Function

    Private Function ReverseInvoice() As Boolean
        Try
            'Dim confirmValue As String
            'confirmValue = ""


            'confirmValue = Request.Form("confirm_value")
            'If Right(confirmValue, 3) = "Yes" Then
            ''''''''''''''' Insert tblAR

            ''''''''''''''''''''
            'PopulateArCode()

            '''''''''''''''''''''''''
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            If conn.State = ConnectionState.Open Then
                conn.Close()
                conn.Dispose()
            End If
            conn.Open()


            '''''''''''''''

            Dim commandUpdateInvoice As MySqlCommand = New MySqlCommand
            commandUpdateInvoice.CommandType = CommandType.Text
            Dim sqlUpdateInvoice As String = "Update tblSalesOrder set PostStatus = 'O'  where Rcno =" & Convert.ToInt64(txtRcno.Text)

            commandUpdateInvoice.CommandText = sqlUpdateInvoice
            commandUpdateInvoice.Parameters.Clear()
            commandUpdateInvoice.Connection = conn
            commandUpdateInvoice.ExecuteNonQuery()

            ''''''''''''''''

            'Dim qryAR As String
            'Dim commandAR As MySqlCommand = New MySqlCommand
            'commandAR.CommandType = CommandType.Text

            ' ''Start:Loop thru' Credit values

            'Dim commandValues As MySqlCommand = New MySqlCommand
            'commandValues.CommandType = CommandType.StoredProcedure
            'commandValues.CommandText = "PostInvoiceUpdateServiceRecord"

            'commandValues.Parameters.Clear()

            'commandValues.Parameters.AddWithValue("@pr_EditDelete", "Delete")
            'commandValues.Parameters.AddWithValue("@pr_InvoiceNumber", txtInvoiceNo.Text.Trim)

            'commandValues.Connection = conn
            'commandValues.ExecuteScalar()



            ''End: Loop thru' Credit Values

            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), txtInvoiceAmount.Text, txtGSTAmount.Text, txtNetAmount.Text, txtAccountIdBilling.Text, "", txtRcno.Text)


            'MakeMeNullBillingDetails()
            'MakeMeNull()
            DisableControls()
            FirstGridViewRowGL()


            ''''''''''''''' Insert tblAR

            lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"

            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()

            updpnlServiceRecs.Update()

            conn.Close()
            conn.Dispose()

            'commandAR.Dispose()
            'dtValues.Dispose()
            commandUpdateInvoice.Dispose()
            'commandValues.Dispose()

            'command1.Dispose()


            IsSuccess = True
            Return IsSuccess
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            Dim IsSuccess As Boolean
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION ReverseInvoice", ex.Message.ToString, txtInvoiceNo.Text)
            IsSuccess = False
            Return IsSuccess
        End Try
    End Function


    ''''''''''''' end

    Protected Sub btnConfirmYes_Click(sender As Object, e As EventArgs) Handles btnConfirmYes.Click
        Try

            IsSuccess = PostInvoice()

            If IsSuccess = True Then

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                lblAlert.Text = ""
                updPnlSearch.Update()
                updPnlMsg.Update()

                'updpnlServiceRecs.Update()

                txtRcnoSelected.Text = txtRcno.Text
                btnQuickSearch_Click(sender, e)

                lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                updPnlMsg.Update()

                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black


                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                InsertNewLog()
            End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnConfirmYes_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnConfirmYesReverse_Click(sender As Object, e As EventArgs) Handles btnConfirmYesReverse.Click
        IsSuccess = ReverseInvoice()

        If IsSuccess = True Then
            'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "REVERSE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            lblAlert.Text = ""
            updPnlSearch.Update()
            updPnlMsg.Update()

            'updpnlServiceRecs.Update()

            txtRcnoSelected.Text = txtRcno.Text
            btnQuickSearch_Click(sender, e)

            lblMessage.Text = "REVERSE: RECORD SUCCESSFULLY REVERSED"
            updPnlMsg.Update()

            btnReverse.Enabled = False
            btnReverse.ForeColor = System.Drawing.Color.Gray

            btnChangeStatus.Enabled = True
            btnChangeStatus.ForeColor = System.Drawing.Color.Black

            btnEdit.Enabled = True
            btnEdit.ForeColor = System.Drawing.Color.Black

            btnDelete.Enabled = True
            btnDelete.ForeColor = System.Drawing.Color.Black

            btnPost.Enabled = True
            btnPost.ForeColor = System.Drawing.Color.Black

            InsertNewLog()
        End If
    End Sub

    Protected Sub btnConfirmYesSavePost_Click(sender As Object, e As EventArgs) Handles btnConfirmYesSavePost.Click
        Try
            IsSuccess = PostInvoice()

            If IsSuccess = True Then

                'CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "POST", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

                lblAlert.Text = ""
                updPnlSearch.Update()
                updPnlMsg.Update()

                'updpnlServiceRecs.Update()

                txtRcnoSelected.Text = txtRcno.Text
                btnQuickSearch_Click(sender, e)

                lblMessage.Text = "POST: RECORD SUCCESSFULLY POSTED"
                updPnlMsg.Update()

                btnReverse.Enabled = True
                btnReverse.ForeColor = System.Drawing.Color.Black

                btnEdit.Enabled = False
                btnEdit.ForeColor = System.Drawing.Color.Gray

                btnDelete.Enabled = False
                btnDelete.ForeColor = System.Drawing.Color.Gray

                btnPost.Enabled = False
                btnPost.ForeColor = System.Drawing.Color.Gray

                InsertNewLog()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnConfirmYesSavePost_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtCommentsQR_TextChanged(sender As Object, e As EventArgs) Handles txtCommentsQR.TextChanged
        btnSaveQR_Click(sender, e)
    End Sub

    Protected Sub txtInvoicenoSearch_TextChanged(sender As Object, e As EventArgs) Handles txtInvoicenoSearch.TextChanged
        If Len(txtInvoicenoSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

        Else
            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()

                updPanelSave.Update()
                UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If

    End Sub

    Protected Sub btnEditPONo_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditPONo.Click
        lblMessage.Text = ""
        'lblAlertTeam.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT PO NO."
            Return

        End If

        mdlPopupEditPONo.Show()
    End Sub

    Protected Sub btnEditComments_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditComments.Click
        lblMessage.Text = ""
        'lblAlertTeam.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT REMARKS"
            Return

        End If

        txtRemarksEdit.Text = txtComments.Text

        mdlPopupEditRemarks.Show()
    End Sub

    Protected Sub btnEditPONoSave_Click(sender As Object, e As EventArgs) Handles btnEditPONoSave.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""
            'Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSalesOrder set    "
            qry = qry + " OurRef = @OurRef, YourRef = @YourRef, PoNo = @PoNo, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@OurRef", txtOurRefEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@YourRef", txtYourRefEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@PoNo", txtPONOEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtOurReference.Text = txtOurRefEdit.Text.ToUpper
            txtYourReference.Text = txtYourRefEdit.Text.ToUpper
            txtPONo.Text = txtPONOEdit.Text.ToUpper

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "EDITPONO", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditPONoSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnEditRemarksSave_Click(sender As Object, e As EventArgs) Handles btnEditRemarksSave.Click
        Try
            'Dim conn As MySqlConnection = New MySqlConnection()
            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSalesOrder set    "
            qry = qry + " Description = @Description, Comments = @Comments, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@Description", txtDescriptionEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@Comments", txtRemarksEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "EDITREMARKS", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)
            txtDescription.Text = txtDescriptionEdit.Text.ToUpper
            txtComments.Text = txtRemarksEdit.Text.ToUpper

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditRemarksSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnConfirmYesUpdateServiceRecord_Click(sender As Object, e As EventArgs) Handles btnConfirmYesUpdateServiceRecord.Click
        Try
            If String.IsNullOrEmpty(Session("servicerecordForupdateservicetable")) = False Then
                Dim conn As MySqlConnection = New MySqlConnection()
                Dim command As MySqlCommand = New MySqlCommand
                command.CommandType = CommandType.Text

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim strRecordNo As String = Session("servicerecordForupdateservicetable")
                Dim strBillAmt As String = Session("AmountForupdateservicetable")
                'Session.Add("servicerecordForupdateservicetable", lblid1.Text)
                'Session.Add("AmountForupdateservicetable", lblid2.Text)


                Dim command4 As MySqlCommand = New MySqlCommand
                'command4.CommandType = CommandType.Text
                'Dim qry4 As String = "Update tblservicerecord Set BillAmount = " & Convert.ToDecimal(strBillAmt) & " where RecordNo = '" & strRecordNo & "'"
                'command4.CommandText = qry4

                command4.CommandType = CommandType.StoredProcedure
                'command4.CommandTimeout = 0
                command4.CommandText = "UpdateServiceBillAmount"
                command4.Parameters.Clear()

                command4.Parameters.AddWithValue("@pr_RecordNo", strRecordNo)
                command4.Parameters.AddWithValue("@pr_BillAmount", Convert.ToDecimal(strBillAmt))

                command4.Connection = conn
                command4.ExecuteNonQuery()

                conn.Close()
                conn.Dispose()
                command4.Dispose()
                grvBillingDetailsdiv.Focus()
                'CalculatePrice()
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnConfirmYesUpdateServiceRecord_Click", ex.Message.ToString, "")
        End Try
    End Sub


    Private Sub DisableNotesControls()

        btnSaveNotesMaster.Enabled = True
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
        btnCancelNotesMaster.Enabled = True
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Black

        btnAddNotesMaster.Enabled = False
        btnAddNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnEditNotesMaster.Enabled = False
        btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnDeleteNotesMaster.Enabled = False
        btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = True

    End Sub


    Private Sub EnableNotesControls()
        btnSaveNotesMaster.Enabled = False
        btnSaveNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnCancelNotesMaster.Enabled = False
        btnCancelNotesMaster.ForeColor = System.Drawing.Color.Gray

        btnAddNotesMaster.Enabled = True
        btnAddNotesMaster.ForeColor = System.Drawing.Color.Black
        btnEditNotesMaster.Enabled = False
        btnEditNotesMaster.ForeColor = System.Drawing.Color.Gray
        btnDeleteNotesMaster.Enabled = False
        btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Gray

        txtNotes.Enabled = False

    End Sub

    Public Sub MakeNotesNull()
        txtNotesMode.Text = ""
        txtNotes.Text = ""
        txtNotesRcNo.Text = ""
    End Sub

    Public NotesRcno As String
    Protected Sub OnRowDataBoundgNotes(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvNotesMaster, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgNotes(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged

        For Each row As GridViewRow In gvNotesMaster.Rows

            If row.RowIndex = gvNotesMaster.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#ffffff")
                row.ToolTip = "Click to select this row."
            End If

            If String.IsNullOrEmpty(txtSelectedIndex.Text) = True Then
                'If row.RowIndex = grvContractDetail.SelectedIndex Then
                '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                '    row.ToolTip = String.Empty
                'Else
                '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                '    row.ToolTip = "Click to select this row."
                'End If

                If row.RowIndex = gvNotesMaster.SelectedIndex Then
                    row.BackColor = ColorTranslator.FromHtml("#00ccff")
                    row.ToolTip = String.Empty
                Else
                    If row.RowIndex Mod 2 = 0 Then
                        row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                        row.ToolTip = "Click to select this row."
                    Else
                        row.BackColor = ColorTranslator.FromHtml("#ffffff")
                        row.ToolTip = "Click to select this row."
                    End If
                End If

            Else
                If Convert.ToInt32(txtSelectedIndex.Text) >= 0 Then
                    'If row.RowIndex = txtSelectedIndex.Text Then
                    '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
                    '    row.ToolTip = String.Empty
                    '    txtSelectedIndex.Text = ""
                    'Else
                    '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                    '    row.ToolTip = "Click to select this row."
                    'End If

                    If row.RowIndex = txtSelectedIndex.Text Then
                        row.BackColor = ColorTranslator.FromHtml("#00ccff")
                        row.ToolTip = String.Empty
                        txtSelectedIndex.Text = ""
                    Else
                        If row.RowIndex Mod 2 = 0 Then
                            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                            row.ToolTip = "Click to select this row."
                        Else
                            row.BackColor = ColorTranslator.FromHtml("#ffffff")
                            row.ToolTip = "Click to select this row."
                        End If
                    End If

                End If

            End If

        Next
        'For Each row As GridViewRow In gvNotesMaster.Rows
        '    'If row.RowIndex = gvNotesMaster.SelectedIndex Then
        '    '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
        '    '    row.ToolTip = String.Empty
        '    'Else
        '    '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
        '    '    row.ToolTip = "Click to select this row."
        '    'End If

        '    If row.RowIndex = GridView1.SelectedIndex Then
        '        row.BackColor = ColorTranslator.FromHtml("#00ccff")
        '        row.ToolTip = String.Empty
        '    Else
        '        If row.RowIndex Mod 2 = 0 Then
        '            row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
        '            row.ToolTip = "Click to select this row."
        '        Else
        '            row.BackColor = ColorTranslator.FromHtml("#ffffff")
        '            row.ToolTip = "Click to select this row."
        '        End If
        '    End If
        'Next
    End Sub

    Protected Sub btnAddNotesMaster_Click(sender As Object, e As EventArgs) Handles btnAddNotesMaster.Click
        DisableNotesControls()

        MakeNotesNull()
        lblMessage.Text = "ACTION: ADD NOTES"


        txtNotesMode.Text = "Add"
        txtNotes.Focus()
    End Sub

    Protected Sub btnSaveNotesMaster_Click(sender As Object, e As EventArgs) Handles btnSaveNotesMaster.Click
        If String.IsNullOrEmpty(txtNotes.Text) Then
            ' MessageBox.Message.Alert(Page, "Select Staff to proceed!!", "str")
            lblAlert.Text = "ENTER NOTES"
            Return
        End If

        If txtNotesMode.Text = "Add" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and notes=@notes"
                command1.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command1.Parameters.AddWithValue("@notes", txtNotes.Text)

                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    '    MessageBox.Message.Alert(Page, "Selected Staff already assigned for this service!!!", "str")
                    lblAlert.Text = "NOTES ALREADY EXISTS"

                Else

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "INSERT INTO tblnotes(KeyModule,SubKeyModule,KeyField,SubKeyField,StaffID,CreatedOn,ContactType,CustCode,CustName,ContactPerson,Notes,Internal,Printable,CreatedBy,LastModifiedBy,LastModifiedOn)VALUES(@KeyModule,@SubKeyModule,@KeyField,@SubKeyField,@StaffID,@CreatedOn,@ContactType,@CustCode,@CustName,@ContactPerson,@Notes,@Internal,@Printable,@CreatedBy,@LastModifiedBy,@LastModifiedOn);"
                    command.CommandText = qry
                    command.Parameters.Clear()
                    If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                        command.Parameters.AddWithValue("@KeyModule", "SLSORD")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", txtInvoiceNo.Text.ToUpper)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountIdBilling.Text)
                        command.Parameters.AddWithValue("@CustName", txtAccountName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text.ToUpper)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))



                    ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                        command.Parameters.AddWithValue("@KeyModule", "SLSORD")
                        command.Parameters.AddWithValue("@SubKeyModule", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@KeyField", txtInvoiceNo.Text)
                        command.Parameters.AddWithValue("@SubKeyField", DBNull.Value.ToString)
                        command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                        command.Parameters.AddWithValue("@ContactType", txtAccountType.Text)
                        command.Parameters.AddWithValue("@CustCode", txtAccountIdBilling.Text)
                        command.Parameters.AddWithValue("@CustName", txtAccountName.Text)
                        command.Parameters.AddWithValue("@ContactPerson", "")
                        command.Parameters.AddWithValue("@Notes", txtNotes.Text)
                        command.Parameters.AddWithValue("@Internal", 0)
                        command.Parameters.AddWithValue("@Printable", 0)
                        command.Parameters.AddWithValue("@CreatedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@CreatedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))


                    End If


                    command.Connection = conn

                    command.ExecuteNonQuery()
                    txtNotesRcNo.Text = command.LastInsertedId
                    command.Dispose()
                    '   MessageBox.Message.Alert(Page, "Record added successfully!!!", "str")
                    lblMessage.Text = "ADD: NOTES SUCCESSFULLY ADDED"
                    lblAlert.Text = ""

                End If
                conn.Close()
                conn.Dispose()

                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ADD - btnSaveNotesMaster_Click", ex.Message.ToString, "")
            End Try
            EnableNotesControls()

        ElseIf txtNotesMode.Text = "Edit" Then
            If txtNotesRcNo.Text = "" Then
                '   MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
                lblAlert.Text = "SELECT RECORD TO EDIT"

                Return

            End If
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command2 As MySqlCommand = New MySqlCommand

                command2.CommandType = CommandType.Text
                command2.CommandText = "SELECT * FROM tblNOTES where KEYFIELD=@recordno and NOTES=@notes and rcno<>" & Convert.ToInt32(txtNotesRcNo.Text)
                command2.Parameters.AddWithValue("@recordno", lblNotesKeyField.Text)
                command2.Parameters.AddWithValue("@notes", txtNotes.Text)

                command2.Connection = conn

                Dim dr1 As MySqlDataReader = command2.ExecuteReader()
                Dim dt1 As New DataTable
                dt1.Load(dr1)

                If dt1.Rows.Count > 0 Then

                    lblAlert.Text = "NOTES ALREADY EXISTS"



                Else

                    Dim command1 As MySqlCommand = New MySqlCommand

                    command1.CommandType = CommandType.Text

                    command1.CommandText = "SELECT * FROM tblnotes where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                    command1.Connection = conn

                    Dim dr As MySqlDataReader = command1.ExecuteReader()
                    Dim dt As New DataTable
                    dt.Load(dr)

                    If dt.Rows.Count > 0 Then

                        Dim command As MySqlCommand = New MySqlCommand

                        command.CommandType = CommandType.Text
                        Dim qry As String = "UPDATE tblnotes SET notes=@notes,StaffID = @StaffID,LastModifiedBy = @LastModifiedBy,LastModifiedOn = @LastModifiedOn WHERE  rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                        command.CommandText = qry
                        command.Parameters.Clear()

                        If ConfigurationManager.AppSettings("UPPERCASE").ToString() = "YES" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text.ToUpper)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        ElseIf ConfigurationManager.AppSettings("UPPERCASE").ToString() = "NO" Then
                            command.Parameters.AddWithValue("@notes", txtNotes.Text)

                            command.Parameters.AddWithValue("@StaffID", lblNotesStaffID.Text)
                            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID").ToString.ToUpper)
                            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        End If

                        command.Connection = conn

                        command.ExecuteNonQuery()

                        '  MessageBox.Message.Alert(Page, "Record updated successfully!!!", "str")
                        lblMessage.Text = "EDIT: NOTES SUCCESSFULLY UPDATED"
                        lblAlert.Text = ""
                        command.Dispose()
                        command1.Dispose()
                        command2.Dispose()
                        dt.Dispose()
                        dt1.Dispose()

                    End If
                End If


                txtNotesMode.Text = ""

                conn.Close()
                conn.Dispose()

            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "EDIT - btnSaveNotesMaster_Click", ex.Message.ToString, "")
            End Try
            EnableNotesControls()

        End If
        SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()

        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnEditNotesMaster_Click(sender As Object, e As EventArgs) Handles btnEditNotesMaster.Click
        lblAlert.Text = ""
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to edit!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT"
            Return

        End If
        'If ddlStatus.Text = "O" Then
        DisableNotesControls()
        txtNotesMode.Text = "Edit"
        lblMessage.Text = "ACTION: EDIT NOTES"
        'Else
        'lblMessageNotesMaster.Text = "ONLY OPEN RECORDS CAN BE EDITED"
        'End If
    End Sub

    Protected Sub btnCancelNotesMaster_Click(sender As Object, e As EventArgs) Handles btnCancelNotesMaster.Click
        MakeNotesNull()
        EnableNotesControls()
        txtNotesMode.Text = ""
    End Sub

    Protected Sub btnDeleteNotesMaster_Click(sender As Object, e As EventArgs) Handles btnDeleteNotesMaster.Click
        lblMessage.Text = ""
        If txtNotesRcNo.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO DELETE"
            Return
        End If
        lblMessage.Text = "ACTION: DELETE NOTES"

        Dim confirmValue As String = Request.Form("confirm_value")
        If Right(confirmValue, 3) = "Yes" Then
            Try
                Dim conn As MySqlConnection = New MySqlConnection()

                conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                conn.Open()

                Dim command1 As MySqlCommand = New MySqlCommand

                command1.CommandType = CommandType.Text

                command1.CommandText = "SELECT * FROM tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)
                command1.Connection = conn

                Dim dr As MySqlDataReader = command1.ExecuteReader()
                Dim dt As New DataTable
                dt.Load(dr)

                If dt.Rows.Count > 0 Then

                    Dim command As MySqlCommand = New MySqlCommand

                    command.CommandType = CommandType.Text
                    Dim qry As String = "delete from tblNOTES where rcno=" & Convert.ToInt32(txtNotesRcNo.Text)

                    command.CommandText = qry
                    command.Connection = conn
                    command.ExecuteNonQuery()

                    command.Dispose()

                    '  MessageBox.Message.Alert(Page, "Record deleted successfully!!!", "str")
                    lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

                End If
                conn.Close()
                conn.Dispose()
                command1.Dispose()
                dt.Dispose()
                dr.Close()
            Catch ex As Exception
                MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnDeleteNotesMaster_Click", ex.Message.ToString, "")
            End Try
            EnableNotesControls()

            SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
            SqlDSNotesMaster.DataBind()

            gvNotesMaster.DataBind()
            MakeNotesNull()
            lblMessage.Text = "DELETE: RECORD SUCCESSFULLY DELETED"

        End If
    End Sub

    Protected Sub gvNotesMaster_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvNotesMaster.PageIndexChanging
        gvNotesMaster.PageIndex = e.NewPageIndex

        SqlDSNotesMaster.SelectCommand = "SELECT * From tblnotes where rcno <>0 and keyfield='" + txtInvoiceNo.Text + "'"


        SqlDSNotesMaster.DataBind()
        gvNotesMaster.DataBind()
    End Sub

    Protected Sub gvNotesMaster_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvNotesMaster.SelectedIndexChanged
        Try
            MakeNotesNull()
            '  txtTechMode.Text = "Edit"
            'Dim editindex As Integer = gvNotesMaster.SelectedIndex

            ''''''''''''''''''''''''''''
            'If String.IsNullOrEmpty(txtSelectedIndex.Text) = False Then

            '    editindex = txtSelectedIndex.Text
            'Else
            '    editindex = gvNotesMaster.SelectedIndex
            'End If

            'If editindex < 0 Then
            '    btnSaveNotesMaster.Enabled = True
            '    btnSaveNotesMaster.ForeColor = System.Drawing.Color.Black
            '    Exit Sub

            '    'btnSvcEdit.Enabled = True
            '    'btnSvcDelete.Enabled = True
            'End If


            '''''''''''''''''''''''''

            Dim editindex As Integer = gvNotesMaster.SelectedIndex
            rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            txtNotesRcNo.Text = rcno.ToString()
            'rcno = DirectCast(gvNotesMaster.Rows(editindex).FindControl("Label1"), Label).Text
            'txtNotesRcNo.Text = rcno.ToString()

            lblNotesStaffID.Text = gvNotesMaster.SelectedRow.Cells(1).Text
            txtNotes.Text = Server.HtmlDecode(gvNotesMaster.SelectedRow.Cells(2).Text)



            EnableNotesControls()

            btnEditNotesMaster.Enabled = True
            btnEditNotesMaster.ForeColor = System.Drawing.Color.Black
            btnDeleteNotesMaster.Enabled = True
            btnDeleteNotesMaster.ForeColor = System.Drawing.Color.Black


        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try
    End Sub

    Protected Sub tb1_ActiveTabChanged(sender As Object, e As EventArgs) Handles tb1.ActiveTabChanged
        lblAlert.Text = ""

        If tb1.ActiveTabIndex = 1 Then
            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Then
                lblAlert.Text = "Cannot switch tabs in Add or Edit Mode!! Save or Cancel the record to proceed!!"
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtInvoiceNo.Text) Then
                lblAlert.Text = "Select an Invoice to Proceed"

                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                tb1.ActiveTabIndex = 0
                Exit Sub
            End If

            'lblNotesKeyField.Text = txtInvoiceNo.Text
            'lblNotesStaffID.Text = Session("UserID").ToString.ToUpper

            'SqlDSNotesMaster.SelectCommand = "select * from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
            'SqlDSNotesMaster.DataBind()
            'gvNotesMaster.DataBind()

            'updPanelInvoice.Update()

            If gvNotesMaster.Rows.Count = 0 Then
                txtSelectedIndex.Text = "-1"
            Else
                txtSelectedIndex.Text = "0"
            End If

            gvNotesMaster.SelectedIndex = 0
            gvNotesMaster_SelectedIndexChanged(New Object(), New EventArgs)
            OnSelectedIndexChangedgNotes(New Object(), New EventArgs)
        End If


        If tb1.ActiveTabIndex = 1 Then
            lblNotesKeyField.Text = txtInvoiceNo.Text
            lblNotesStaffID.Text = Session("UserID").ToString.ToUpper

            SqlDSNotesMaster.SelectCommand = "select StaffId, Notes, Rcno, CreatedBy, CreatedOn, lastModifiedBy, lastModifiedOn from tblnotes where keyfield = '" + txtInvoiceNo.Text + "'"
            SqlDSNotesMaster.DataBind()
            gvNotesMaster.DataBind()

            updPanelInvoice.Update()
        End If


    End Sub

    Protected Sub btnPopUpStaffSearch_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpStaffSearch.Click
        mdlPopupStaff.Show()
    End Sub

    Protected Sub txtPopUpStaff_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpStaff.TextChanged
        If txtPopUpStaff.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter search text", "str")
        Else
            txtPopupStaffSearch.Text = txtPopUpStaff.Text
            SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff where staffid like '%" + txtPopupStaffSearch.Text.ToUpper + "%' or name like '%" + txtPopupStaffSearch.Text + "%' order by staffid"

            SqlDSStaffID.DataBind()
            gvStaff.DataBind()
            mdlPopupStaff.Show()
            txtIsPopup.Text = "Staff"
        End If

        txtPopUpStaff.Text = "Search Here"
    End Sub

    Protected Sub btnPopUpStaffReset_Click(sender As Object, e As ImageClickEventArgs) Handles btnPopUpStaffReset.Click
        txtPopUpStaff.Text = ""
        txtPopupStaffSearch.Text = ""
        SqlDSStaffID.SelectCommand = "SELECT distinct * From tblstaff order by staffid"

        SqlDSStaffID.DataBind()

        gvStaff.DataBind()
        mdlPopupStaff.Show()
    End Sub


    Protected Sub OnRowDataBoundgStaff(sender As Object, e As GridViewRowEventArgs)
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
            'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
            'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
            'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

            e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(gvStaff, "Select$" & e.Row.RowIndex)
            e.Row.ToolTip = "Click to select this row."
        End If
    End Sub

    Protected Sub OnSelectedIndexChangedgStaff(sender As Object, e As EventArgs)
        For Each row As GridViewRow In gvStaff.Rows
            If row.RowIndex = gvStaff.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#738A9C")
                row.ToolTip = String.Empty
            Else
                row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
                row.ToolTip = "Click to select this row."
            End If
        Next
    End Sub

    Protected Sub ImageButton1_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton1.Click
        mdlPopupStaff.Show()
    End Sub

    Protected Sub gvStaff_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvStaff.SelectedIndexChanged
        Try
            'If txtModal.Text = "EditIncharge" Then
            '    If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        txtEditIncharge.Text = ""
            '    Else
            '        txtEditIncharge.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If

            'If txtModal.Text = "EditSvcBy" Then
            If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
                txtServiceBy.Text = ""
            Else
                txtServiceBy.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
            End If
            mdlImportServices.Show()

            'End If

            'If txtModal.Text = "EditSupervisor" Then
            '    If (gvStaff.SelectedRow.Cells(1).Text = "&nbsp;") Then
            '        txtEditSupervisor.Text = ""
            '    Else
            '        txtEditSupervisor.Text = gvStaff.SelectedRow.Cells(1).Text.Trim
            '    End If
            '    mdlPopupEditTeam.Show()

            'End If
            'If txtModal.Text = "SvcBySearch" Then
            '    If gvStaff.SelectedRow.Cells(1).Text = "&nbsp;" Then
            '        txtSearch1SvcBy.Text = " "
            '    Else
            '        txtSearch1SvcBy.Text = gvStaff.SelectedRow.Cells(1).Text
            '    End If
            'End If
            'If txtModal.Text = "InchargeSearch" Then
            '    If gvStaff.SelectedRow.Cells(1).Text = "&nbsp;" Then
            '        txtSearch1Incharge.Text = " "
            '    Else
            '        txtSearch1Incharge.Text = gvStaff.SelectedRow.Cells(1).Text
            '    End If
            'End If
        Catch ex As Exception
            MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "gvStaff_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtAccountIdSearch_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdSearch.TextChanged
        If Len(txtAccountIdSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()
                updPanelSave.Update()
                UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If
    End Sub

    Protected Sub txtClientNameSearch_TextChanged(sender As Object, e As EventArgs) Handles txtClientNameSearch.TextChanged
        If Len(txtClientNameSearch.Text.Trim) > 2 Then
            btnQuickSearch_Click(sender, e)

            Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo
            MakeMeNull()
            MakeMeNullBillingDetails()

            If GridView1.Rows.Count > 0 Then
                txtMode.Text = "View"
                txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                PopulateRecord()
                'UpdatePanel2.Update()
                updPanelSave.Update()
                UpdatePanel3.Update()

                'GridView1_SelectedIndexChanged(sender, e)
            End If
        End If
    End Sub

    Protected Sub ddlView_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlView.SelectedIndexChanged
        Try


            'GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)
            Dim strsql As String
            strsql = ""

            strsql = "Select PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal,  Billcity, "
            'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringSalesOrder,  BillSchedule, "
            strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddBuilding, CustAddStreet, CustAddCity,"
            strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, PrintCounter, Description, EmailSentStatus, EmailSentDate, Location, ServiceAddress "
            strsql = strsql & " from tblSalesOrder where 1=1 "


            strsql = strsql + txtCondition.Text + txtOrderBy.Text
            txt.Text = strsql
            SQLDSInvoice.SelectCommand = txt.Text

            GridView1.PageSize = Convert.ToInt16(ddlView.SelectedItem.Text)

            GridView1.DataBind()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ddlView_SelectedIndexChanged", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtBillStreet_TextChanged(sender As Object, e As EventArgs) Handles txtBillStreet.TextChanged

    End Sub

    Public Function FindSOPeriod(BillingPeriod As String) As String
        Dim IsLock As String
        IsLock = "Y"

        'Dim connPeriod As MySqlConnection = New MySqlConnection()

        'connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'connPeriod.Open()

        'Dim command1 As MySqlCommand = New MySqlCommand

        'command1.CommandType = CommandType.Text

        'If txtMode.Text = "NEW" Then
        '    If txtDisplayRecordsLocationwise.Text = "Y" Then
        '        command1.CommandText = "SELECT SOLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
        '    Else
        '        command1.CommandText = "SELECT SOLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        '    End If

        'Else
        '    If txtDisplayRecordsLocationwise.Text = "Y" Then
        '        command1.CommandText = "SELECT SOLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
        '    Else
        '        command1.CommandText = "SELECT SOLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        '    End If

        'End If

        'command1.Connection = connPeriod

        'Dim dr As MySqlDataReader = command1.ExecuteReader()
        'Dim dt As New DataTable
        'dt.Load(dr)


        'If dt.Rows.Count > 0 Then
        '    If txtMode.Text = "NEW" Then
        '        IsLock = dt.Rows(0)("SOLock").ToString
        '    Else
        '        IsLock = dt.Rows(0)("SOLocke").ToString
        '    End If

        'End If

        'connPeriod.Close()
        'connPeriod.Dispose()
        'command1.Dispose()
        'dt.Dispose()
        'dr.Close()
        Return IsLock
    End Function


    Public Function FindARPeriod(BillingPeriod As String) As String
        Dim IsLock As String
        IsLock = "Y"

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text

        If txtMode.Text = "NEW" Then
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                command1.CommandText = "SELECT ARLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            Else
                command1.CommandText = "SELECT ARLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            End If

        Else
            If txtDisplayRecordsLocationwise.Text = "Y" Then
                command1.CommandText = "SELECT ARLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            Else
                command1.CommandText = "SELECT ARLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            End If

        End If

            command1.Connection = connPeriod

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)


            If dt.Rows.Count > 0 Then
                If txtMode.Text = "NEW" Then
                    IsLock = dt.Rows(0)("ARLock").ToString
                Else
                    IsLock = dt.Rows(0)("ARLocke").ToString
                End If

            End If

            connPeriod.Close()
            connPeriod.Dispose()
            command1.Dispose()
            dt.Dispose()
            dr.Close()
            Return IsLock
    End Function

    Public Function FindRVPeriod(BillingPeriod As String) As String

        Dim IsLock As String
        IsLock = "Y"

        Dim connPeriod As MySqlConnection = New MySqlConnection()

        connPeriod.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connPeriod.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text


        If txtMode.Text = "NEW" Then
            If txtDisplayRecordsLocationwise.Text = "N" Then
                command1.CommandText = "SELECT RVLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            Else
                command1.CommandText = "SELECT RVLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            End If

        Else
            If txtDisplayRecordsLocationwise.Text = "N" Then
                command1.CommandText = "SELECT RVLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
            Else
                command1.CommandText = "SELECT RVLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "' and Location ='" & txtLocation.Text & "'"
            End If

        End If


        'If txtMode.Text = "NEW" Then
        '    command1.CommandText = "SELECT RVLock FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        'Else
        '    command1.CommandText = "SELECT RVLocke FROM tblperiod where CalendarPeriod='" & BillingPeriod & "'"
        'End If

        command1.Connection = connPeriod

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)


        If dt.Rows.Count > 0 Then
            If txtMode.Text = "NEW" Then
                IsLock = dt.Rows(0)("RVLock").ToString
            Else
                IsLock = dt.Rows(0)("RVLocke").ToString
            End If
            'IsLock = dt.Rows(0)("RVLock").ToString
        End If

        connPeriod.Close()
        connPeriod.Dispose()
        command1.Dispose()
        dt.Dispose()
        dr.Close()
        Return IsLock
    End Function


    Protected Sub txtReceiptAmtGVQR_TextChanged(sender As Object, e As EventArgs)

        Dim txt1 As TextBox = DirectCast(sender, TextBox)
        xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

        'Dim lblid1 As CheckBox = CType(txt1.FindControl("chkSelectGV"), CheckBox)
        Dim lblid2 As TextBox = CType(txt1.FindControl("txtReceiptAmtGVQR"), TextBox)

        'Dim lblid3 As TextBox = CType(txt1.FindControl("txtBalanceAmtGV"), TextBox)

        'If Convert.ToDecimal(lblid2.Text) > 0.0 Then
        '    lblid1.Checked = True
        'Else
        '    lblid1.Checked = False
        'End If

        'If Convert.ToDecimal(lblid2.Text) > Convert.ToDecimal(lblid3.Text) Then
        '    lblid2.Text = lblid3.Text
        'End If

        lblid2.Text = Convert.ToDecimal(lblid2.Text).ToString("N2")

        calculateTotalReceipt()
    End Sub


    Private Sub calculateTotalReceipt()

        Dim TotalReceiptAmt As Decimal = 0
        Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRecQR"), DataTable)

        If (table.Rows.Count > 0) Then

            For i As Integer = 0 To (table.Rows.Count) - 1

                'Dim TextBoxSelect As CheckBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("chkSelectGV"), CheckBox)
                Dim TextBoxReceiptAmt As TextBox = CType(grvBillingDetailsQR.Rows(i).Cells(7).FindControl("txtReceiptAmtGVQR"), TextBox)

                If String.IsNullOrEmpty(TextBoxReceiptAmt.Text) = True Then
                    TextBoxReceiptAmt.Text = "0.00"
                End If

                'If TextBoxSelect.Checked = True Then
                TotalReceiptAmt = TotalReceiptAmt + Convert.ToDecimal(TextBoxReceiptAmt.Text)
                'End If
            Next i

        End If

        txtReceiptAmt.Text = TotalReceiptAmt.ToString("N2")
        table.Dispose()
        UpdatePanel4.Update()
    End Sub

    Protected Sub btnMultiPrint_Click(sender As Object, e As EventArgs) Handles btnMultiPrint.Click
        lblAlert.Text = ""

        Dim strsql As String = ""

        Try
            strsql = "Select PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringSalesOrder,  BillSchedule, "
            strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, EmailSentStatus, Location, EmailSentDate, "
            strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
            strsql = strsql & " from tblSalesOrder where 1=1 "

            strsql = strsql + txtCondition.Text + " and (DocType='ARIN') and PostStatus ='P' " + txtOrderBy.Text + " limit " & txtLimit.Text
            'txt.Text = strsql

            SqlDSMultiPrint.SelectCommand = strsql
            SqlDSMultiPrint.DataBind()
            grdViewMultiPrint.DataBind()
            'Dim grid3 As GridView = CType(updPanelInvoice.FindControl("grdViewMultiPrint"), GridView)
            'grid3.DataSourceID = "SqlDSMultiPrint"
            'grid3.DataBind()

            'SqlDSMultiPrint.SelectCommand = strsql
            'SqlDSMultiPrint.DataBind()
            '' grdViewMultiPrint.DataBind()
            InsertIntoTblWebEventLog("SALES ORDER-TEST", "MULTIPRINT", strsql, txtInvoiceNo.Text)

            'grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
            'grdViewMultiPrint.DataBind()
            ''   SqlDSMultiPrint.DataBind()


            chkShowUnprinted.Checked = False

            mdlPopupMultiPrint.Show()
        Catch ex As Exception
            lblAlert.Text = ex.Message
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnMultiPrint_Click", ex.Message.ToString, Left(strsql, 1500))

            Exit Sub
        End Try
    End Sub




    'Protected Sub btnPrintMultiPrint_Click(sender As Object, e As EventArgs) Handles btnPrintMultiPrint.Click
    '    Dim invcheck As String = ""

    '    Session("gridsqlinvoiceprint") = txt.Text
    '    Session("servicefrom") = "serviceprint"
    '    Dim YrStrList As List(Of [String]) = New List(Of String)()
    '    If grdViewMultiPrint.Rows.Count > 0 Then
    '        For Each row As GridViewRow In grdViewMultiPrint.Rows
    '            If row.RowType = DataControlRowType.DataRow Then
    '                Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectAllMultiPrintGV"), CheckBox)
    '                If chkRow.Checked Then
    '                    YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() + """")
    '                End If
    '            End If
    '        Next
    '        Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
    '        If String.IsNullOrEmpty(YrStr) = False Then
    '            invcheck = YrStr
    '        End If
    '        Session("InvoiceNumber") = invcheck
    '    End If

    '    mdlPopupPrint.Show()
    'End Sub

    Protected Sub btnPrintMultiPrint_Click(sender As Object, e As EventArgs) Handles btnPrintMultiPrint.Click
        Dim invcheck As String = ""
        Session("PrintType") = "MultiPrint"

        Session("gridsqlinvoiceprint") = txt.Text
        'Session("servicefrom") = "serviceprint"
        Session("printfrom") = "serviceprint"
        Dim YrStrList As List(Of [String]) = New List(Of String)()
        If grdViewMultiPrint.Rows.Count > 0 Then
            For Each row As GridViewRow In grdViewMultiPrint.Rows
                If row.RowType = DataControlRowType.DataRow Then
                    Dim chkRow As CheckBox = TryCast(row.Cells(0).FindControl("chkSelectMultiPrintGV"), CheckBox)
                    If chkRow.Checked Then
                        YrStrList.Add("""" + TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() + """")

                        ''''''''''''''''''''''''''''''''''''''''''''''''''''
                        'Dim conn As MySqlConnection = New MySqlConnection()

                        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        'conn.Open()

                        'Dim sql As String
                        'sql = ""
                        'sql = "Select PrintCounter from tblSales where InvoiceNumber = '" & TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() & "'"

                        'Dim command1 As MySqlCommand = New MySqlCommand
                        'command1.CommandType = CommandType.Text
                        'command1.CommandText = sql
                        'command1.Connection = conn

                        'Dim dr As MySqlDataReader = command1.ExecuteReader()

                        'Dim dt As New DataTable
                        'dt.Load(dr)

                        'Dim lPrincounter As Integer
                        'lPrincounter = 0

                        'If dt.Rows.Count > 0 Then
                        '    If dt.Rows(0)("PrintCounter").ToString <> "" Then : lPrincounter = Convert.ToInt32(dt.Rows(0)("PrintCounter").ToString) : End If
                        'End If

                        'command1.Dispose()


                        ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                        'lPrincounter = lPrincounter + 1

                        'Dim qry As String
                        'qry = ""
                        ''Dim conn As MySqlConnection = New MySqlConnection()
                        'Dim command As MySqlCommand = New MySqlCommand
                        'command.CommandType = CommandType.Text

                        ''conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
                        ''conn.Open()

                        'qry = "Update tblSales set    "
                        ''qry = qry + " PrintCounter = @PrintCounter, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
                        'qry = qry + " PrintCounter = @PrintCounter "
                        'qry = qry + " where InvoiceNumber = '" & TryCast(row.Cells(1).FindControl("lblInvNo"), Label).Text() & "'"

                        'command.CommandText = qry
                        'command.Parameters.Clear()
                        ''command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
                        'command.Parameters.AddWithValue("@PrintCounter", lPrincounter)
                        ''command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        ''command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
                        'command.Connection = conn
                        'command.ExecuteNonQuery()

                        'conn.Close()
                        'conn.Dispose()
                        'command.Dispose()
                        ' '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                        'SQLDSInvoice.SelectCommand = txt.Text
                        'GridView1.DataSourceID = "SQLDSInvoice"
                        'GridView1.DataBind()
                        '''''''''''''''''''''''''''''''''''''''''''''''''''

                    End If
                End If
            Next
            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())
            If String.IsNullOrEmpty(YrStr) = False Then
                invcheck = YrStr
            End If
            Session("InvoiceNumber") = invcheck

        End If
        Session("InvoiceNo") = "SALES ORDER"

        mdlPopupPrint.Show()
    End Sub

    Protected Sub txtAccountIdBilling_TextChanged(sender As Object, e As EventArgs) Handles txtAccountIdBilling.TextChanged
        If Len(txtAccountIdBilling.Text) > 2 Then
            btnClient1_Click(sender, New ImageClickEventArgs(0, 0))
        End If
    End Sub


    Protected Sub btnDeleteDetail_Click(sender As Object, e As EventArgs)
        Try
            Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                'lblMessage.Text = ""
                lblAlert.Text = ""

                Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowindex1).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)

                If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                        Dim conn As MySqlConnection = New MySqlConnection(constr)
                        conn.Open()

                        Dim command4 As MySqlCommand = New MySqlCommand
                        command4.CommandType = CommandType.Text

                        'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                        Dim qry4 As String = "Delete from tblSalesOrderdetail where rcno = " & TextBoxRcno.Text
                        'Dim qry4 As String = "Delete from tblsalesdetail "
                        command4.CommandText = qry4
                        command4.Connection = conn
                        command4.ExecuteNonQuery()
                        command4.Dispose()

                        'SqlDSSalesDetail.DataBind()
                        'grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                        'grvBillingDetailsNew.DataBind()


                        SqlDSSalesDetail.SelectCommand = "select SalesOrderNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, SalesOrderType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode from tblSalesDetail where SalesOrderNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
                        'grvBillingDetailsNew.PageSize = Convert.ToInt16(ddlViewServiceRecs.SelectedItem.Text)
                        grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                        grvBillingDetailsNew.DataBind()


                        '''''''''''''''''''''''''
                        CalculateTotal()
                        CalculateTotalPrice()
                        'updPanelInvoice.Update()

                        UpdatePanel2.Update()
                        UpdatePanel5.Update()

                        Dim command5 As MySqlCommand = New MySqlCommand
                        command5.CommandType = CommandType.Text

                        Dim qry As String
                        qry = "Update tblSalesOrder set ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                        qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, AmountWithDiscount = @AmountWithDiscount  "
                        'qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
                        qry = qry + " where Rcno = @Rcno;"

                        command5.CommandText = qry
                        command5.Parameters.Clear()

                        command5.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))

                        command5.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                        command5.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                        command5.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                        command5.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                        command5.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                        command5.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                        command5.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                        command5.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                        command5.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                        'command5.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                        'command5.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                        command5.Connection = conn
                        command5.ExecuteNonQuery()

                        '''''''''''''''''''''''
                        conn.Close()
                        conn.Dispose()
                        command5.Dispose()

                        SQLDSInvoice.SelectCommand = txt.Text
                        SQLDSInvoice.DataBind()
                        GridView1.DataSourceID = "SQLDSInvoice"

                        CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "DELETE", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", TextBoxRcno.Text)

                        DisplayGLGrid()
                        'CalculatePrice()

                        'IsDetailBlank()

                        updPnlBillingRecsNew.Update()
                    End If
                End If
            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnDeleteDetail_Click", ex.Message.ToString, "")
        End Try

    End Sub

    Protected Sub ImageButton10_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton10.Click

        Try
            txtPopUpContractNo.Text = ""
            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status = 'E') or (Status = 'T'))  order by Status, ContractNo, CustName"
            Else
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId,Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status = 'E') or (Status = 'T')) and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            End If

            SqlDSContractNo.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()
            mdlPopUpContractNo.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ImageButton10_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub ImageButton2_Click(sender As Object, e As ImageClickEventArgs) Handles ImageButton2.Click
        lblAlert.Text = ""
        txtIsPopup.Text = ""
        txtIsPopup.Text = "ContractNo"
        Try

            If String.IsNullOrEmpty(ddlContractNo.Text.Trim) = False Then
                txtPopUpContractNo.Text = ddlContractNo.Text

                'If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
                'Else
                '    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId  FROM tblcontract WHERE (Status = 'O' or Status = 'P') and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                'End If

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by ContractNo"
                Else
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                End If


                SqlDSClient.DataBind()
                gvPopUpContractNo.DataBind()
                updPanelInvoice.Update()
            ElseIf String.IsNullOrEmpty(ddlContractNo.Text.Trim) = True Then
                txtPopUpContractNo.Text = ddlContractNo.Text

                If String.IsNullOrEmpty(txtAccountId.Text.Trim) = True Then
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) order by ContractNo"
                Else
                    SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  AccountID = '" + txtAccountId.Text.Trim.ToUpper + "' order by ContractNo"
                End If
                'SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName  FROM tblcontract WHERE (Status = 'O' or Status = 'P') order by ContractNo"

                SqlDSContractNo.DataBind()
                gvPopUpContractNo.DataBind()
                updPanelInvoice.Update()
            End If

            mdlPopUpContractNo.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ImageButton2_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtPopUpContractNo_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpContractNo.TextChanged
        If String.IsNullOrEmpty(txtPopUpContractNo.Text.Trim) = True Then
            MessageBox.Message.Alert(Page, "Please enter ContractNo/CustName", "str")
        Else
            SqlDSContractNo.SelectCommand = "SELECT  ContractNo, CustName, Status from tblContract where ((ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%') or (CustName like '%" & txtPopUpContractNo.Text & "%')) and  ((Status = 'O') or (Status = 'P') or (Status = 'E') or (Status = 'T')) order by Status, ContractNo, CustName"
        End If


        'txtImportService.Text = SqlDSClient.SelectCommand
        SqlDSContractNo.DataBind()
        gvPopUpContractNo.DataBind()
        'mdlPopUpContractNo.Show()
        txtIsPopup.Text = "ContractNo"
        mdlPopUpContractNo.Show()
        'End If
    End Sub


    Protected Sub gvPopUpContractNo_SelectedIndexChanged(sender As Object, e As EventArgs) Handles gvPopUpContractNo.SelectedIndexChanged

        '''''''''''''''''''''

        Dim xrowNumber1 = txtxRow.Text
        'txtGLFrom.Text = "ContractGV"
        If txtGLFrom.Text = "ContractGVB" Then
            Dim lblid1 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtContractNoGVB"), TextBox)
            'Dim lblid2 As TextBox = CType(grvBillingDetailsNew.Rows(xrowNumber1).FindControl("txtGLDescriptionGVB"), TextBox)

            If gvPopUpContractNo.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = gvPopUpContractNo.SelectedRow.Cells(2).Text
            End If

            txtGLFrom.Text = ""
        ElseIf txtGLFrom.Text = "ContractGV" Then
            Dim lblid1 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtContractNoGV"), TextBox)
            'Dim lblid2 As TextBox = CType(grvBillingDetails.Rows(xrowNumber1).FindControl("txtGLDescriptionGV"), TextBox)

            If gvPopUpContractNo.SelectedRow.Cells(2).Text = "&nbsp;" Then
                lblid1.Text = " "
            Else
                lblid1.Text = gvPopUpContractNo.SelectedRow.Cells(2).Text
            End If

            txtGLFrom.Text = ""

        Else
            txtIsPopup.Text = ""
            If (gvPopUpContractNo.SelectedRow.Cells(2).Text = "&nbsp;") Then
                ddlContractNo.Text = ""
            Else
                ddlContractNo.Text = gvPopUpContractNo.SelectedRow.Cells(2).Text.Trim
            End If

            txtIsPopup.Text = "N"
            mdlPopUpContractNo.Hide()
            mdlImportServices.Show()
        End If



        '''''''''''''''''''''''''''''
    End Sub

    Protected Sub gvPopUpContractNo_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles gvPopUpContractNo.PageIndexChanging

        Try


            gvPopUpContractNo.PageIndex = e.NewPageIndex

            If String.IsNullOrEmpty(txtAccountIdBilling.Text.Trim) = True Then
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' order by Status, ContractNo, CustName"
            Else
                SqlDSContractNo.SelectCommand = "SELECT ContractNo,CustName, AccountId, Status  FROM tblcontract WHERE ((Status = 'O') or (Status = 'P') or (Status ='E') or (Status ='T')) and  ContractNo like '%" & txtPopUpContractNo.Text.Trim & "%' and  AccountID = '" + txtAccountIdBilling.Text.Trim.ToUpper + "' order by Status, ContractNo, CustName"
            End If

            SqlDSClient.DataBind()
            gvPopUpContractNo.DataBind()
            updPanelInvoice.Update()

            mdlPopUpContractNo.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "gvPopUpContractNo_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnEditBillingDetails_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditBillingDetails.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditBillingDetails.Show()
    End Sub

    Protected Sub btnEditBillingDetailsSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingDetailsSave.Click
        Try

            If String.IsNullOrEmpty(txtBillAddressEdit.Text.Trim) = True Then
                lblAlertBillingDetails.Text = "PLEASE ENTER BILLING ADDRESS (1ST LINE)"
                updPnlMsg.Update()
                'btnSaveInvoice.Enabled = True
                mdlPopupEditBillingDetails.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            If String.IsNullOrEmpty(txtBillCountryEdit.Text.Trim) = True Then
                lblAlertBillingDetails.Text = "PLEASE ENTER BILL COUNTRY"
                updPnlMsg.Update()
                'btnSaveInvoice.Enabled = True
                mdlPopupEditBillingDetails.Show()
                ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
                Exit Sub
            End If

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSalesOrder set    "
            qry = qry + " CustAttention = @CustAttention,   "
            qry = qry + " CustAddress1 = @CustAddress1,   CustAddStreet = @CustAddStreet, CustAddBuilding=@CustAddBuilding, CustAddCity = @CustAddCity, CustAddState=@CustAddState, CustAddCountry = @CustAddCountry, CustAddPostal=@CustAddPostal, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@CustAttention", txtContactPersonEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddress1", txtBillAddressEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddBuilding", txtBillBuildingEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddStreet", txtBillStreetEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddCity", txtBillCityEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddState", txtBillStateEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddPostal", txtBillPostalEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@CustAddCountry", txtBillCountryEdit.Text.ToUpper())
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()
            txtContactPerson.Text = txtContactPersonEdit.Text.ToUpper()
            txtBillAddress.Text = txtBillAddressEdit.Text.ToUpper()
            txtBillBuilding.Text = txtBillBuildingEdit.Text.ToUpper()
            txtBillStreet.Text = txtBillStreetEdit.Text.ToUpper()

            txtBillCity.Text = txtBillCityEdit.Text.ToUpper()
            txtBillState.Text = txtBillStateEdit.Text.ToUpper()

            txtBillPostal.Text = txtBillPostalEdit.Text.ToUpper()
            txtBillCountry.Text = txtBillCountryEdit.Text.ToUpper()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "EDITBILLINGDETAILS", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtRcno.Text)

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditBillingDetailsSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Public Sub InsertIntoTblWebEventLog(LoginID As String, events As String, errorMsg As String, ID As String)
        Try
            Dim conn As New MySqlConnection()
            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString

            Dim insCmds As New MySqlCommand()
            insCmds.CommandType = CommandType.Text

            Dim insQuery As String = "Insert into tblWebEventLog(LoginId, Event, Error,ID, CreatedOn)"
            insQuery += " values(@LoginId,@Event,@Error,@ID,@CreatedOn);"

            insCmds.CommandText = insQuery

            insCmds.Parameters.Clear()
            insCmds.Parameters.AddWithValue("@LoginId", LoginID)
            insCmds.Parameters.AddWithValue("@Event", events)
            insCmds.Parameters.AddWithValue("@Error", errorMsg)
            insCmds.Parameters.AddWithValue("@ID", ID)
            insCmds.Parameters.AddWithValue("@CreatedOn", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss", New System.Globalization.CultureInfo("en-GB")))

            conn.Open()
            insCmds.Connection = conn
            insCmds.ExecuteNonQuery()
            conn.Close()
            conn.Dispose()
            insCmds.Dispose()
        Catch ex As Exception

        End Try
    End Sub

    Protected Sub btnEditBillingName_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditBillingName.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditBillingName.Show()
    End Sub

    Protected Sub btnEditBillingNameSave_Click(sender As Object, e As EventArgs) Handles btnEditBillingNameSave.Click
        Try

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSalesOrder set    "
            qry = qry + " CustName = @CustName, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@CustName", txtBillingNameEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            SQLDSInvoice.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "EDITBILLINGNAME", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, txtAccountName.Text + " - " + txtBillingNameEdit.Text.ToUpper, txtRcno.Text)
            txtAccountName.Text = txtBillingNameEdit.Text.ToUpper

            InsertNewLog()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditBillingNameSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnEditSalesman_Click(sender As Object, e As ImageClickEventArgs) Handles btnEditSalesman.Click
        lblMessage.Text = ""
        lblAlert.Text = ""

        If txtRcno.Text = "" Then
            ' MessageBox.Message.Alert(Page, "Select a record to delete!!!", "str")
            lblAlert.Text = "SELECT RECORD TO EDIT BILLING DEATAILS"
            Return

        End If
        mdlPopupEditSalesman.Show()
    End Sub

    Protected Sub btnEditSalesmanSave_Click(sender As Object, e As EventArgs) Handles btnEditSalesmanSave.Click
        Try

            Dim qry As String
            qry = ""
            Dim conn As MySqlConnection = New MySqlConnection()
            Dim command As MySqlCommand = New MySqlCommand
            command.CommandType = CommandType.Text

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()

            qry = "Update tblSalesOrder set    "
            qry = qry + " StaffCode = @StaffCode, LastModifiedBy = @LastModifiedBy, LastModifiedOn=@LastModifiedOn "
            qry = qry + " where Rcno = @Rcno;"

            command.CommandText = qry
            command.Parameters.Clear()
            command.Parameters.AddWithValue("@Rcno", txtRcno.Text)
            command.Parameters.AddWithValue("@StaffCode", ddlSalesmanEdit.Text.ToUpper)
            command.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
            command.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))
            command.Connection = conn
            command.ExecuteNonQuery()

            conn.Close()
            conn.Dispose()
            command.Dispose()

            SQLDSInvoice.SelectCommand = txt.Text
            GridView1.DataSourceID = "SQLDSInvoice"
            GridView1.DataBind()

            CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "EDITSALESMAN", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, ddlSalesmanBilling.Text + " - " + ddlSalesmanEdit.Text.ToUpper, txtRcno.Text)
            ddlSalesmanBilling.Text = ddlSalesmanEdit.Text.ToUpper

            InsertNewLog()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditBillingNameSave_Click", ex.Message.ToString, txtInvoiceNo.Text)
        End Try
    End Sub

    Protected Sub btnDeleteAll_Click(sender As Object, e As EventArgs) Handles btnDeleteAll.Click
        Try
            'Dim btn1 As ImageButton = DirectCast(sender, ImageButton)

            'Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            'Dim rowindex1 As Integer = xrow1.RowIndex

            Dim confirmValue As String
            confirmValue = ""

            confirmValue = Request.Form("confirm_value")
            If Right(confirmValue, 3) = "Yes" Then
                'lblMessage.Text = ""
                lblAlert.Text = ""

                HeaderDetailTotalSalesOrder("BefDelAll")
                'Dim TextBoxRcno As TextBox = CType(grvBillingDetailsNew.Rows(rowindex1).Cells(5).FindControl("txtRcnoInvoiceGVB"), TextBox)

                'If (String.IsNullOrEmpty(TextBoxRcno.Text) = False) Then
                '    If (Convert.ToInt32(TextBoxRcno.Text) > 0) Then

                FirstGridViewRowBillingDetailsRecs()



                Dim conn As MySqlConnection = New MySqlConnection(constr)
                conn.Open()

                Dim command4 As MySqlCommand = New MySqlCommand
                command4.CommandType = CommandType.Text

                'Dim qry4 As String = "Update tblservicerecord Set BilledAmt = " & Convert.ToDecimal(row("PriceWithDisc")) & ", BillNo = '' where Rcno= @Rcno "
                Dim qry4 As String = "Delete from tblSalesOrderdetail where SalesOrderNumber = '" & txtInvoiceNo.Text & "'"
                'Dim qry4 As String = "Delete from tblsalesdetail "
                command4.CommandText = qry4
                command4.Connection = conn
                command4.ExecuteNonQuery()
                command4.Dispose()

                SqlDSSalesDetail.DataBind()
                grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
                grvBillingDetailsNew.DataBind()

                '''''''''''''''''''''''''

                txtInvoiceAmount.Text = "0.00"
                txtDiscountAmount.Text = "0.00"
                txtAmountWithDiscount.Text = "0.00"
                txtGSTAmount.Text = "0.00"
                txtNetAmount.Text = "0.00"


                'CalculateTotal()
                CalculateTotalPrice()
                'updPanelInvoice.Update()

                UpdatePanel2.Update()
                'UpdatePanel5.Update()

                Dim command5 As MySqlCommand = New MySqlCommand
                command5.CommandType = CommandType.Text

                Dim qry As String
                qry = "Update tblSalesOrder set ValueBase = @ValueBase, ValueOriginal =@ValueOriginal, GSTBase=@GSTBase, GSTOriginal=@GSTOriginal, AppliedBase = @AppliedBase, AppliedOriginal=@AppliedOriginal, BalanceBase=@BalanceBase, BalanceOriginal=@BalanceOriginal, "
                qry = qry + " DiscountAmount = @DiscountAmount, GSTAmount = @GSTAmount, NetAmount = @NetAmount, AmountWithDiscount = @AmountWithDiscount  "
                'qry = qry + " LastModifiedBy = @LastModifiedBy, LastModifiedOn = @LastModifiedOn "
                qry = qry + " where Rcno = @Rcno;"

                command5.CommandText = qry
                command5.Parameters.Clear()

                command5.Parameters.AddWithValue("@Rcno", Convert.ToInt64(txtRcno.Text))

                command5.Parameters.AddWithValue("@ValueBase", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command5.Parameters.AddWithValue("@ValueOriginal", Convert.ToDecimal(txtAmountWithDiscount.Text))
                command5.Parameters.AddWithValue("@GSTBase", Convert.ToDecimal(txtGSTAmount.Text))
                command5.Parameters.AddWithValue("@GSTOriginal", Convert.ToDecimal(txtGSTAmount.Text))
                command5.Parameters.AddWithValue("@AppliedBase", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@AppliedOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@BalanceBase", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@BalanceOriginal", Convert.ToDecimal(txtNetAmount.Text))
                command5.Parameters.AddWithValue("@DiscountAmount", Convert.ToDecimal(txtDiscountAmount.Text))
                command5.Parameters.AddWithValue("@AmountWithDiscount", Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text))
                command5.Parameters.AddWithValue("@GSTAmount", Convert.ToDecimal(txtGSTAmount.Text))
                command5.Parameters.AddWithValue("@NetAmount", Convert.ToDecimal(txtNetAmount.Text))

                'command5.Parameters.AddWithValue("@LastModifiedBy", Session("UserID"))
                'command5.Parameters.AddWithValue("@LastModifiedOn", Convert.ToDateTime(txtCreatedOn.Text))

                command5.Connection = conn
                command5.ExecuteNonQuery()

                '''''''''''''''''''''''
                conn.Close()
                conn.Dispose()


                command5.Dispose()


                SQLDSInvoice.SelectCommand = txt.Text
                SQLDSInvoice.DataBind()
                GridView1.DataSourceID = "SQLDSInvoice"



                CType(Me.Master, MasterPage).EventLog_Insert(Session("UserID"), "SALES ORDER", txtInvoiceNo.Text, "DELETEALL", Convert.ToDateTime(txtCreatedOn.Text), 0, 0, 0, txtAccountIdBilling.Text, "", txtInvoiceNo.Text)
                HeaderDetailTotalSalesOrder("AftDelAll")

                DisplayGLGrid()


                IsDetailBlank()

                updPnlBillingRecsNew.Update()

            End If

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnDeleteDetail_Click", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub btnFilter_Click(sender As Object, e As EventArgs) Handles btnFilter.Click
        mdlPopupSearch.Show()
    End Sub

    Protected Sub btnSearch_Click(sender As Object, e As EventArgs) Handles btnSearch.Click
        Dim strsql As String
        strsql = ""
        Try
            lblMessage.Text = ""
            txtTotalInvoiceAmount.Text = "0.00"
            txtCondition.Text = ""
            lblAlertSearch.Text = ""


            'strsql = SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, 
            strsql = "Select PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
            'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
            strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringSalesOrder,  BillSchedule, "
            strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, EmailSentStatus, EmailSentDate, Location, "
            strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
            strsql = strsql & " , ServiceAddress "
            strsql = strsql & " from tblSalesOrder where 1=1 "
            'strsql = strsql & " from tblSales, invoiceserviceaddress where tblSales.InvoiceNumber = invoiceserviceaddress.invoiceNumber and  1=1 "

            'txtCondition.Text = " and (DocType='ARIN')  "



            Dim YrStrList As List(Of [String]) = New List(Of String)()

            'If rdbStatusSearch.SelectedValue = "ALL" Then
            '    For Each item As ListItem In chkStatusSearch.Items
            '        YrStrList.Add(item.Value)
            '    Next
            'Else
            For Each item As ListItem In chkStatusSearch0.Items
                If item.Selected Then
                    YrStrList.Add("'" & item.Value & "'")
                End If
            Next

            Dim YrStr As [String] = [String].Join(",", YrStrList.ToArray())


            txtCondition.Text = txtCondition.Text & " and PostStatus in (" & (YrStr) & ") "
            'txtCondition.Text = txtCondition.Text & " and Location = '" & txtLocation.Text & "'"

            If txtDisplayRecordsLocationwise.Text = "Y" Then
                'txtCondition.Text = txtCondition.Text + " and Location = '" & txtLocation.Text & "'"
                txtCondition.Text = txtCondition.Text & " and location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "')"

            End If


            If String.IsNullOrEmpty(txtSearchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and SalesOrderNumber like '%" & txtSearchInvoiceNo.Text.Trim + "%'"
            End If


            If String.IsNullOrEmpty(txtSearchAccountID.Text) = False Then
                'strsql = strsql & " and (AccountId like '%" & txtAccountIdSearch.Text & "%' or AccountId like '%" & txtAccountIdSearch.Text & "%')"
                txtCondition.Text = txtCondition.Text & " and (AccountId like '%" & txtSearchAccountID.Text.Trim & "%')"

            End If

            If String.IsNullOrEmpty(txtSearchClientName.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and CustName like ""%" & txtSearchClientName.Text.Trim & "%"""
            End If


            'BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal

            If String.IsNullOrEmpty(txtSearchAddress.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and ((BillAddress1 like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillBuilding like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillStreet like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillCountry like ""%" & txtSearchAddress.Text.Trim & "%"") or (BillPostal like ""%" & txtSearchAddress.Text.Trim & "%""))"
            End If




            If String.IsNullOrEmpty(txtSearchOurRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and OurRef like ""%" & txtSearchOurRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchYourRef.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and YourRef like ""%" & txtSearchYourRef.Text.Trim & "%"""
            End If

            If String.IsNullOrEmpty(txtSearchPONo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and PoNo like ""%" & txtSearchPONo.Text.Trim & "%"""
            End If

            'If (ddlCompanyGrpSearch.SelectedIndex > 0) Then
            '    txtCondition.Text = txtCondition.Text & " and CompanyGroup like '%" & ddlCompanyGrpSearch.Text.Trim + "%'"
            'End If

            'If String.IsNullOrEmpty(txtBillSchedule.Text) = False Then
            '    strsql = strsql & " and BillSchedule like '%" & txtBillSchedule.Text.Trim + "%'"
            'End If


            If (ddlSearchSalesman.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and StaffCode like '%" & ddlSearchSalesman.Text.Trim + "%'"
            End If

            If (ddlSearchContractGroup.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and ContractGroup like '%" & ddlSearchContractGroup.Text.Trim + "%'"
            End If

            'If rdbSearchPaidStatus0.SelectedItem.Value = "Fully Paid" Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase = 0 and ValueBase <> 0 "
            'ElseIf rdbSearchPaidStatus0.SelectedItem.Value = "O/S" Then
            '    txtCondition.Text = txtCondition.Text + " and BalanceBase <>  0"
            'End If


            If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesOrderDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            End If
            If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and SalesOrderDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            End If


            'If String.IsNullOrEmpty(txtInvoiceDateSearchFrom.Text) = False And txtInvoiceDateSearchFrom.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and SalesDate >= '" + Convert.ToDateTime(txtInvoiceDateSearchFrom.Text).ToString("yyyy-MM-dd") + "'"
            'End If
            'If String.IsNullOrEmpty(txtInvoiceDateSearchTo.Text) = False And txtInvoiceDateSearchTo.Text <> "__/__/____" Then
            '    txtCondition.Text = txtCondition.Text + " and SalesDate <= '" + Convert.ToDateTime(txtInvoiceDateSearchTo.Text).ToString("yyyy-MM-dd") + "'"
            'End If


            If String.IsNullOrEmpty(txtSearchEntryDateFrom.Text) = False And txtSearchEntryDateFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and CreatedOn >= '" + Convert.ToDateTime(txtSearchEntryDateFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEntryDateTo.Text) = False And txtSearchEntryDateTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and CreatedOn <= '" + Convert.ToDateTime(txtSearchEntryDateTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If String.IsNullOrEmpty(txtSearchEditEndFrom.Text) = False And txtSearchEditEndFrom.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and LastModifiedOn >= '" + Convert.ToDateTime(txtSearchEditEndFrom.Text).ToString("yyyy-MM-dd") + " 00:00:00'"
            End If
            If String.IsNullOrEmpty(txtSearchEditEndTo.Text) = False And txtSearchEditEndTo.Text <> "__/__/____" Then
                txtCondition.Text = txtCondition.Text + " and LastModifiedOn <= '" + Convert.ToDateTime(txtSearchEditEndTo.Text).ToString("yyyy-MM-dd") + " 23:59:59'"
            End If


            If (ddlSearchEditedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and LastModifiedBy = '" & ddlSearchEditedBy.Text.Trim + "'"
            End If


            If (ddlSearchCreatedBy.SelectedIndex > 0) Then
                txtCondition.Text = txtCondition.Text & " and CreatedBy = '" & ddlSearchCreatedBy.Text.Trim + "'"
            End If

            If String.IsNullOrEmpty(txtSearchComments.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and Comments like '%" & txtSearchComments.Text.Trim & "%'"
            End If


            If String.IsNullOrEmpty(txtSearchValueBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and ValueBase >= " + txtSearchValueBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchValueBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and ValueBase <= " + txtSearchValueBaseTo.Text
            End If


            If String.IsNullOrEmpty(txtSearchAppliedBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and AppliedBase >= " + txtSearchAppliedBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchAppliedBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and AppliedBase <= " + txtSearchAppliedBaseTo.Text
            End If

            If String.IsNullOrEmpty(txtSearchBalanceBaseFrom.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text + " and BalanceBase >= " + txtSearchBalanceBaseFrom.Text
            End If
            If String.IsNullOrEmpty(txtSearchBalanceBaseTo.Text) = False Then
                txtCondition.Text = txtCondition.Text + " and BalanceBase <= " + txtSearchBalanceBaseTo.Text
            End If

            If (chkSearchShowUnPrintedInvoice.Checked) = True Then
                txtCondition.Text = txtCondition.Text + " and ((PrintCounter = 0) or (PrintCounter = '') or  (PrintCounter is null))"
            End If


            If String.IsNullOrEmpty(txtSearchBatchInvoiceNo.Text) = False Then
                txtCondition.Text = txtCondition.Text & " and BillSchedule like '%" & txtSearchBatchInvoiceNo.Text.Trim + "%'"
            End If

            'If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
            '    txtCondition.Text = txtCondition.Text + " and DueDate <= " + txtSearchOverDueDays.Text
            'End If

            Dim loverduedays As String
            'LSoverduedays = " DateDiff( ""d"",IfNULL(DueDate,SalesDate),GetDate()) "
            loverduedays = " DateDiff(curdate(),ifnull(DueDate,SalesOrderDate)) "
            If String.IsNullOrEmpty(txtSearchOverDueDays.Text) = False Then
                txtCondition.Text = txtCondition.Text & " AND " & loverduedays & " >= " & Val(txtSearchOverDueDays.Text) & " "
            End If



            If String.IsNullOrEmpty(txtSearchDetailServiceLocation.Text.Trim) = False Then
                If (ddlSearchContactType.Text.Trim) = "-1" Then
                    lblAlertSearch.Text = "SELECT ACCOUNT TYPE TO SEARCH FOR SERVICE LOCATION"
                    mdlPopupSearch.Show()
                    Exit Sub
                End If

                If ddlSearchContactType.Text.Trim = "CORPORATE" Or ddlSearchContactType.Text.Trim = "COMPANY" Then
                    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT SalesOrderNumber " _
                  & "FROM tblSalesOrderdetail WHERE LocationID IN (Select LocationID from tblCompanyLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "
                ElseIf ddlSearchContactType.Text.Trim = "RESIDENTIAL" Or ddlSearchContactType.Text.Trim = "PERSON" Then
                    txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT SalesOrderNumber " _
                  & "FROM tblSalesOrderdetail WHERE LocationID IN (Select LocationID from tblPersonLocation where Address1 LIKE '%" & (txtSearchDetailServiceLocation.Text) & "%')) "

                End If

            End If

            If String.IsNullOrEmpty(txtSearchDetailReference.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT SalesOrderNumber " _
                    & "FROM tblSalesOrderdetail WHERE RefType LIKE '%" & (txtSearchDetailReference.Text) & "%') "
            End If

            If String.IsNullOrEmpty(txtSearchDetailContractNo.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT SalesOrderNumber " _
                    & "FROM tblSalesOrderdetail WHERE CostCode LIKE '%" & (txtSearchDetailContractNo.Text) & "%') "
            End If

            If (ddlCOACode.Text.Trim) <> "-1" Then
                txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT SalesOrderNumber " _
                    & "FROM tblSalesOrderdetail WHERE LedgerCode LIKE '%" & (Left(ddlCOACode.Text, 5)) & "%') "
            End If


            If String.IsNullOrEmpty(txtSearchDetailPONONo.Text.Trim) = False Then
                txtCondition.Text = txtCondition.Text & " AND InvoiceNumber IN (SELECT SalesOrderNumber " _
                    & "FROM tblSalesOrderdetail WHERE CostCode IN (SELECT ContractNo from tblContract where PONo like '" & (txtSearchDetailPONONo.Text) & "%')) "
            End If

            txtOrderBy.Text = " order by rcno desc, custname "

            txtSelect.Text = strsql

            strsql = strsql + txtCondition.Text + txtOrderBy.Text + " limit " & txtLimit.Text
            txt.Text = strsql



            'txtComments.Text = strsql
            SQLDSInvoice.SelectCommand = strsql
            SQLDSInvoice.DataBind()
            GridView1.DataBind()

            CalculateTotal()

            ''''''''''''''''''''''''''''''
            If Convert.ToInt32(txtRowCount.Text) > 0 Then

                'btnQuickSearch_Click(sender, e)

                Dim MyTi As TextInfo = New CultureInfo("en-US", False).TextInfo


                MakeMeNull()
                MakeMeNullBillingDetails()

                If GridView1.Rows.Count > 0 Then
                    txtMode.Text = "View"

                    If String.IsNullOrEmpty(txtRcnoSelected.Text.Trim) = False Then
                        If txtRcnoSelected.Text > 0 Then
                            txtRcno.Text = txtRcnoSelected.Text
                            txtRcnoSelected.Text = 0
                        Else
                            txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                        End If
                    Else
                        txtRcno.Text = GridView1.Rows(0).Cells(1).Text
                    End If

                    'txtRcno.Text = GridView1.Rows(0).Cells(1).Text

                    PopulateRecord()
                    'UpdatePanel2.Update()
                    GridView1.SelectedIndex = 0
                    updPanelSave.Update()
                    UpdatePanel3.Update()

                    'GridView1_SelectedIndexChanged(sender, e)
                Else
                    MakeMeNull()
                    MakeMeNullBillingDetails()
                End If
            End If

            lblMessage.Text = "NUMBER OF RECORDS FOUND : " + txtRowCount.Text + "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '+ "   [DISPLAYING TOP " + txtLimit.Text + " RECORDS]"
            '''''''''''''''''''''''''''''


            updPnlMsg.Update()
            updPanelInvoice.Update()
            SqlDSMultiPrint.SelectCommand = SQLDSInvoice.SelectCommand
            'GridSelected = "SQLDSContract"



            txtSearchAccountID.Text = ""
            txtSearchClientName.Text = ""
            'txtSearchAddress.Text = ""
            'txtSearchContact.Text = ""
            'txtSearchContactNo.Text = ""
            'txtSearchPostal.Text = ""

            txtSearchOurRef.Text = ""
            txtSearchYourRef.Text = ""

            ddlSearchSalesman.ClearSelection()
            'ddlSearchScheduler.ClearSelection()
            'ddlSearchStatus.ClearSelection()
            'ddlSearchContractGroup.ClearSelection()
            'ddlSearchCompanyGroup.ClearSelection()
            'ddlSearchLocationGroup.ClearSelection()
            'ddlSearchRenewalStatus.ClearSelection()
            'ddlSearchInChargeId.ClearSelection()

            txtInvoiceDateSearchFrom.Text = ""
            txtInvoiceDateSearchTo.Text = ""
            'txtSearchServiceStartFrom.Text = ""
            'txtSearchServiceStartTo.Text = ""
            'txtSearchServiceEndFrom.Text = ""
            'txtSearchServiceEndTo.Text = ""
            txtSearchEditEndFrom.Text = ""
            txtSearchEditEndTo.Text = ""

            'txtSearchStartDateFrom.Text = ""
            'txtSearchStartDateTo.Text = ""

            'txtSearchEndDateFrom.Text = ""
            'txtSearchEndDateTo.Text = ""
            txtSearchEntryDateFrom.Text = ""
            txtSearchEntryDateTo.Text = ""

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnSearch_Click", ex.Message.ToString, Left(strsql, 2000))
            Exit Sub
        End Try
    End Sub

    Protected Sub chkShowUnprinted_CheckedChanged(sender As Object, e As EventArgs) Handles chkShowUnprinted.CheckedChanged
        Dim strsql As String
        strsql = ""
        'If chkShowUnprinted.Checked = True Then
        '    strsql = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, custAddBuilding, CustAddCountry, CustAddPostal, CustAddCity, CustAddStreet, PrintCounter, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule FROM tblsales WHERE 1=1  "
        '    strsql = strsql + " and (DocType ='ARIN') AND PrintCounter > 0 AND  (PostStatus = 'O' OR PostStatus = 'P') and GLPeriod = concat(year(now()), if(length(month(now()))=1, concat('0', month(now())),month(now()))) "
        '    strsql = strsql + " ORDER BY Rcno DESC, CustName"
        '    strsql = strsql + " limit " & txtLimit.Text
        'Else
        '    'strsql = "SELECT PostStatus, PaidStatus, GlStatus, InvoiceNumber, SalesDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, Billcity, BillPostal, ValueBase, ValueOriginal, GstBase, GstOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, YourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GlPeriod, CompanyGroup, ContactType, BatchNo, Salesman AS Expr1, Comments, AmountWithDiscount, TermsDay, RecurringInvoice, ReceiptBase, CreditBase, BalanceBase, StaffCode, CustAddress1, custAddBuilding, CustAddCountry, CustAddPostal, CustAddCity, CustAddStreet, PrintCounter, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, BillSchedule FROM tblsales WHERE 1=1  "
        '    'strsql = strsql + " and (DocType ='ARIN') AND ((PrintCounter = '0') or (PrintCounter is null) or (PrintCounter = '')) AND (PostStatus = 'O' OR PostStatus = 'P')  "
        '    'strsql = strsql + " ORDER BY Rcno DESC, CustName"
        '    'strsql = strsql + " limit " & txtLimit.Text

        '    strsql = txt.Text

        'End If

        '''''''''''''''''''

        strsql = "Select PostStatus, PaidStatus, GlStatus, SalesOrderNumber, SalesOrderDate, AccountId, CustName, BillAddress1, BillBuilding, BillStreet, BillCountry, BillPostal, Billcity,  "
        'strsql = strsql & "AppliedBase, Salesman, PoNo, OurRef, yourRef, CreditTerms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , CreditDays, RecurringInvoice, CreatedBy, CreatedOn, LastModifiedBy, LastModifiedOn, Rcno
        strsql = strsql & " ValueBase, ValueOriginal, GSTBase, GSTOriginal, AppliedBase, AppliedOriginal, BalanceBase, BalanceOriginal, Salesman, PoNo, OurRef, yourRef, Terms, DiscountAmount, GSTAmount, NetAmount, GLPeriod, CompanyGroup, ContactType, BatchNo, Salesman, Comments, AmountWithDiscount , TermsDay, RecurringSalesOrder,  BillSchedule, "
        strsql = strsql & " ReceiptBase, CreditBase, StaffCode, CustAddress1, CustAddCountry, CustAddPostal, CustAddStreet, custAddBuilding,  CustAddCity, PrintCounter, EmailSentStatus, Location, EmailSentDate, "
        strsql = strsql & " CreatedBy,   CreatedOn, LastModifiedBy, LastModifiedOn, Rcno, Description "
        strsql = strsql & " from tblSalesOrder where 1=1 "

        strsql = strsql & " and (DocType='ARIN')  "

        If chkShowUnprinted.Checked = False Then

            strsql = strsql & txtCondition.Text & " AND PrintCounter > 0 and  PostStatus ='P'"

        Else

            strsql = strsql & txtCondition.Text & " and PostStatus ='P' AND ((PrintCounter = '0') or (PrintCounter is null) or (PrintCounter = ''))  "
        End If


        strsql = strsql + txtOrderBy.Text + " limit " & txtLimit.Text


        ''''''''''''''''''


        SqlDSMultiPrint.SelectCommand = strsql
        grdViewMultiPrint.DataSourceID = "SqlDSMultiPrint"
        grdViewMultiPrint.DataBind()

        mdlPopupMultiPrint.Show()
    End Sub

    Protected Sub btnClient2_Click(sender As Object, e As ImageClickEventArgs) Handles btnClient2.Click
        lblAlert.Text = ""
        lblAlert1.Text = ""
        txtSearch.Text = ""
        txtClientFrom.Text = ""

        txtClientFrom.Text = "InvoiceFilter"
        txtSearch.Text = "InvoiceFilter"
        Try

            If String.IsNullOrEmpty(txtSearchAccountID.Text.Trim) = False Then
                txtPopUpClient.Text = ""
                txtPopUpClient.Text = txtSearchAccountID.Text
                txtPopupClientSearch.Text = txtPopUpClient.Text
                'UpdatePanel1.Update()


                If ddlSearchContactType.Text = "CORPORATE" Or ddlSearchContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
                ElseIf ddlSearchContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlSearchContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopupClientSearch.Text + "%"" or B.contactperson like ""%" + txtPopupClientSearch.Text + "%"" or  B.CompanyID like ""%" + txtPopupClientSearch.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like ""%" + txtPopupClientSearch.Text + "%"" or D.contACTperson like ""%" + txtPopupClientSearch.Text + "%"" or  D.PersonID like ""%" + txtPopupClientSearch.Text + "%"") order by AccountID,  LocationId, ServiceName"
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            Else
                txtPopUpClient.Text = ""


                If ddlSearchContactType.Text = "CORPORATE" Or ddlSearchContactType.Text = "COMPANY" Then
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType, A.CompanyGroup, B.SalesmanSvc, B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, B.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Inactive = False and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  order by B.AccountID,  B.LocationId, B.ServiceName"
                ElseIf ddlSearchContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlSearchContactType.Text = "PERSON" Then
                    SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,  C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Inactive = False and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')   order by D.AccountID,  D.LocationId, D.ServiceName"
                Else
                    SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '')  UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where   C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '')  order by AccountID,  LocationId, ServiceName"
                End If

                SqlDSClient.DataBind()
                gvClient.DataBind()
                updPanelInvoice.Update()
            End If

            'txtImportService.Text = SqlDSClient.SelectCommand
            mdlPopUpClient.Show()
            'txtImportService.Text = SqlDSClient.SelectCommand
            'mdlPopupSearch.Show()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnClient2_Click", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub txtInvoiceDate_TextChanged1(sender As Object, e As EventArgs) Handles txtInvoiceDate.TextChanged

        If String.IsNullOrEmpty(txtInvoiceDate.Text) = False Then
            If String.IsNullOrEmpty(txtCreditDays.Text) = False Then
                If Convert.ToInt32(txtCreditDays.Text) > 0 Then
                    txtDueDate.Text = DateAdd(DateInterval.Day, Convert.ToInt32(txtCreditDays.Text), Convert.ToDateTime(txtInvoiceDate.Text))
                End If
            End If

            txtBillingPeriod.Text = Year(txtInvoiceDate.Text) & Month(txtInvoiceDate.Text).ToString("D2")
            'txtBillingPeriod.Text = Year(txtInvoiceDate.Text) & MONTH(txtInvoiceDate.Text)), 2)

        End If
    End Sub


    Protected Sub txtItemTypeGVQR_SelectedIndexChanged(sender As Object, e As EventArgs)

        Dim ddl1 As DropDownList = DirectCast(sender, DropDownList)

        Dim xrow1 As GridViewRow = CType(ddl1.NamingContainer, GridViewRow)
        Dim lblid1 As DropDownList = CType(xrow1.FindControl("txtItemTypeGVQR"), DropDownList)
        'Dim lblid2 As TextBox = CType(xrow1.FindControl("txtTargtIdGV"), TextBox)


        'lTargetDesciption = lblid1.Text

        Dim rowindex1 As Integer = xrow1.RowIndex
        If rowindex1 = grvBillingDetailsQR.Rows.Count - 1 Then
            btnAddDetailQR_Click(sender, e)
            'txtRecordAdded.Text = "Y"
        End If
    End Sub


    Protected Sub txtGSTAmtGV_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtGSTAmtGV"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGV"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGV"), TextBox)

            lblid3.Text = Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) + Convert.ToDecimal(lblid2.Text)).ToString("N2")

            CalculateTotalGSTNetPrice()
            updpnlBillingDetails.Update()


        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtGSTAmtGV_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub


    Protected Sub txtGSTAmtGVB_TextChanged(sender As Object, e As EventArgs)
        Try
            lblAlert.Text = ""
            updPnlMsg.Update()

            Dim txt1 As TextBox = DirectCast(sender, TextBox)
            xgrvBillingDetails = CType(txt1.NamingContainer, GridViewRow)

            Dim lblid1 As TextBox = CType(txt1.FindControl("txtGSTAmtGVB"), TextBox)
            Dim lblid2 As TextBox = CType(txt1.FindControl("txtPriceWithDiscGVB"), TextBox)
            Dim lblid3 As TextBox = CType(txt1.FindControl("txtTotalPriceWithGSTGVB"), TextBox)

            lblid3.Text = Convert.ToDecimal(Convert.ToDecimal(lblid1.Text) + Convert.ToDecimal(lblid2.Text)).ToString("N2")

            CalculateTotalGSTNetPrice()
            updPnlBillingRecsNew.Update()


        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "txtGSTAmtGVB_TextChanged", ex.Message.ToString, "")
        End Try
    End Sub



    Private Sub CalculateTotalGSTNetPrice()
        Try


            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then
                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmt.Text) = True Then
                            TextBoxGSTAmt.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGST.Text) = True Then
                            TextBoxTotalPriceWithGST.Text = "0.00"
                        End If

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)


                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If


                        GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                    End If
                Next
            End If

            'txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")
            txtTotalGSTAmt.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            ''''''''''''''''''''''''''

            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            'GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")
            'GSTDiff = GSTCalc - Convert.ToDecimal(txtGSTAmount.Text)
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If
            'End If

            ''''''''''''''''''''''''''''

            'txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)
            txtTotalWithGST.Text = Convert.ToDecimal(txtTotalWithDiscAmt.Text) + Convert.ToDecimal(txtTotalGSTAmt.Text)
            UpdatePanel2.Update()
            updPanelSave.Update()
            table.Dispose()
            'updpnlServiceRecs.Update()

            'lbltotalservices.Text = Convert.ToInt32(totalrecords)
            'UpdatePanel3.Update()

            'updPanelInvoice.Update()
            'updpnlBillingDetails.Update()
            'txtTotal.Text = TotalAmt.ToString
            'txtTotalWithGST.Text = TotalAmtWithGST.ToString

            'txtTotalDiscAmt.Text = TotalDiscAmt.ToString
            'txtTotalGSTAmt.Text = TotalGSTAmt.ToString

            'txtTotalWithDiscAmt.Text = TotalWithDiscAmt.ToString

            'DisplayGLGrid()
            'UpdatePanel3.Update()
            'updPanelSave.Update()
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION CalculateTotalPrice", ex.Message.ToString, "")
            'MessageBox.Message.Alert(Page, ex.Message.ToString, "str")
        End Try
    End Sub

    Protected Sub GridView2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles GridView2.SelectedIndexChanged

        'mdlQuickReceipt.Show()
        txtIsPopup.Text = "Receipts"
        Session("receiptfrom") = "invoiceQR"

        'If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
        '    Session("invoiceno") = txtInvoiceNo.Text
        'End If

        Session("receiptno1") = Server.HtmlDecode(GridView2.SelectedRow.Cells(6).Text).ToString

        'txt.Text = Server.HtmlDecode(GridView2.SelectedRow.Cells(6).Text).ToString

        'Exit Sub
        If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
            'Session("contractno") = txtContractNo.Text
            'txt.Text = SQLDSContract.SelectCommand
            Session("gridsqlinv") = txt.Text
            Session("strcondition") = txtCondition.Text
            Session("rcnoinv") = txtRcno.Text
            Session("AccountId") = txtAccountIdBilling.Text
            Session("AccountName") = txtAccountName.Text
            Session("ContactType") = ddlContactType.Text
            Session("CompanyGroup") = txtCompanyGroup.Text
            Session("Salesman") = ddlSalesmanBilling.Text
            Session("fromtext") = txtFrom2.Text
            '''''''''''''''''''''''''''''
        End If

        Response.Redirect("Receipts.aspx")
    End Sub

    Protected Sub OnRowDataBoundg2(sender As Object, e As GridViewRowEventArgs) Handles GridView2.RowDataBound
        'If e.Row.RowType = DataControlRowType.DataRow Then
        '    e.Row.Attributes.Add("onmouseover", "this.style.cursor='pointer';")
        '    'e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='silver';this.style.cursor='pointer';")
        '    'e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#E4E4E4';")
        '    'e.Row.Attributes.Add("onmousedown", "this.style.backgroundColor='#738A9C';")
        '    'e.Row.Attributes.Add("onclick", "this.style.backgroundColor='#738A9C';")

        '    e.Row.Attributes("onclick") = Page.ClientScript.GetPostBackClientHyperlink(GridView1, "Select$" & e.Row.RowIndex)
        '    e.Row.ToolTip = "Click to select this row."
        'End If
    End Sub


    Protected Sub OnSelectedIndexChangedg2(sender As Object, e As EventArgs) Handles GridView2.SelectedIndexChanged

        For Each row As GridViewRow In GridView2.Rows
            'If row.RowIndex = GridView1.SelectedIndex Then
            '    row.BackColor = ColorTranslator.FromHtml("#738A9C")
            '    row.ToolTip = String.Empty
            'Else
            '    row.BackColor = ColorTranslator.FromHtml("#E4E4E4")
            '    row.ToolTip = "Click to select this row."
            'End If

            If row.RowIndex = GridView2.SelectedIndex Then
                row.BackColor = ColorTranslator.FromHtml("#00ccff")
                row.ToolTip = String.Empty
            Else
                If row.RowIndex Mod 2 = 0 Then
                    row.BackColor = ColorTranslator.FromHtml("#EFF3FB")
                    row.ToolTip = "Click to select this row."
                Else
                    row.BackColor = ColorTranslator.FromHtml("#ffffff")
                    row.ToolTip = "Click to select this row."
                End If


            End If
        Next


    End Sub


    Public Sub FindLocation()
        Dim IsLock As String
        IsLock = ""

        Dim connLocation As MySqlConnection = New MySqlConnection()

        connLocation.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        connLocation.Open()

        Dim command1 As MySqlCommand = New MySqlCommand

        command1.CommandType = CommandType.Text
        command1.CommandText = "SELECT LocationID, Location FROM tblstaff where StaffId='" & txtCreatedBy.Text.ToUpper & "'"
        command1.Connection = connLocation

        Dim dr As MySqlDataReader = command1.ExecuteReader()
        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            txtLocation.Text = dt.Rows(0)("LocationID").ToString
        End If

        connLocation.Close()
        connLocation.Dispose()
        command1.Dispose()
        dt.Dispose()
    End Sub

    Protected Sub btnCopy_Click(sender As Object, e As EventArgs) Handles btnCopy.Click
        lblMessage.Text = ""
        lblAlert.Text = ""


        ''''''''''''''''''

        txtMode.Text = "NEW"
        lblMessage.Text = "ACTION: ADD RECORD"
        txtSearch1Status.Text = "O,P"

        If String.IsNullOrEmpty(txtInvoiceDate.Text) = False Then
            txtBillingPeriod.Text = Year(Convert.ToDateTime(txtInvoiceDate.Text)) & Format(Month(Convert.ToDateTime(txtInvoiceDate.Text)), "00")
        End If


        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnReceipts.Enabled = False
        btnReceipts.ForeColor = System.Drawing.Color.Gray


        btnCNDN.Enabled = False
        btnCNDN.ForeColor = System.Drawing.Color.Gray

        btnBack.Enabled = False
        btnBack.ForeColor = System.Drawing.Color.Gray

        btnBack.Enabled = False
        btnBack.ForeColor = System.Drawing.Color.Gray

        'btnReset.Enabled = False
        'btnReset.ForeColor = System.Drawing.Color.Gray

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnReverse.Enabled = False
        btnReverse.ForeColor = System.Drawing.Color.Gray

        btnChangeStatus.Enabled = False
        btnChangeStatus.ForeColor = System.Drawing.Color.Gray

        chkManualInvoice.Visible = True

        grvBillingDetails.ShowHeader = True

        '''''''''''''''''''



        btnEdit.Enabled = False
        btnEdit.ForeColor = System.Drawing.Color.Gray

        btnDelete.Enabled = False
        btnDelete.ForeColor = System.Drawing.Color.Gray

        btnDeleteAll.Enabled = True
        btnDeleteAll.ForeColor = System.Drawing.Color.Black

        btnPrint.Enabled = False
        btnPrint.ForeColor = System.Drawing.Color.Gray

        btnMultiPrint.Enabled = False
        btnMultiPrint.ForeColor = System.Drawing.Color.Gray

        btnPost.Enabled = False
        btnPost.ForeColor = System.Drawing.Color.Gray

        txtInvoiceNo.Enabled = True
        txtInvoiceDate.Enabled = True
        txtBillingPeriod.Enabled = True
        txtCompanyGroup.Enabled = True
        txtAccountId.Enabled = True
        txtAccountType.Enabled = True

        txtAccountName.Enabled = True
        txtBillAddress.Enabled = True
        txtBillStreet.Enabled = True
        txtBillBuilding.Enabled = True
        txtBillPostal.Enabled = True
        ddlSalesmanBilling.Enabled = True
        txtInvoiceAmount.Enabled = True
        txtBillCountry.Enabled = True
        txtPONo.Enabled = True
        ddlCreditTerms.Enabled = True
        txtDiscountAmount.Enabled = True
        txtAmountWithDiscount.Enabled = True
        txtGSTAmount.Enabled = True
        txtNetAmount.Enabled = True
        txtOurReference.Enabled = True
        txtYourReference.Enabled = True
        txtComments.Enabled = True
        txtDescription.Enabled = True
        'btnSaveInvoice.Enabled = True
        btnSave.Enabled = True
        btnShowRecords.Enabled = True
        btnSaveInvoice.Enabled = True


        grvBillingDetailsNew.Enabled = True
        'grvBillingDetails.Enabled = True
        grvServiceRecDetails.Enabled = True
        grvBillingDetails.Enabled = True


        txtPostStatus.Text = "O"
        txtInvoiceNo.Text = ""
        txtInvoiceAmount.Text = "0.00"
        txtDiscountAmount.Text = "0.00"
        txtAmountWithDiscount.Text = "0.00"
        txtGSTAmount.Text = "0.00"
        txtNetAmount.Text = "0.00"

        FirstGridViewRowBillingDetailsRecs()


        updpnlServiceRecs.Update()

        updPanelSave.Update()


        EnableControls()


        UpdatePanel3.Update()
        updPanelInvoice.Update()

        btnBack.Enabled = True
        btnBack.ForeColor = System.Drawing.Color.Black

        grvBillingDetails.Visible = True
    End Sub

    Protected Sub txtGST_SelectedIndexChanged(sender As Object, e As EventArgs) Handles txtGST.SelectedIndexChanged

       

        mdlUpdateGSTCode.Show()

        'Dim sql As String
        'sql = ""
        'sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtGST.Text & "'"

        'Dim conn As MySqlConnection = New MySqlConnection()

        'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        'conn.Open()

        'Dim command1 As MySqlCommand = New MySqlCommand
        'command1.CommandType = CommandType.Text
        'command1.CommandText = sql
        'command1.Connection = conn

        'Dim dr As MySqlDataReader = command1.ExecuteReader()

        'Dim dt As New DataTable
        'dt.Load(dr)

        'If dt.Rows.Count > 0 Then
        '    If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString : End If
        '    txtGSTAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
        '    txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
        'End If

        'conn.Close()
        'conn.Dispose()
        'command1.Dispose()
        'dt.Dispose()
       

    End Sub

    Protected Sub txtGST_TextChanged(sender As Object, e As EventArgs) Handles txtGST.TextChanged

    End Sub

    Protected Sub btnJournal_Click(sender As Object, e As EventArgs) Handles btnJournal.Click
        'txtRecordNoSelected.Text = lblRecordNo.Text

        Dim sqlstr As String = ""

        sqlstr = "SELECT tblJrnv.PostStatus, " & _
                       "tblJrnv.GlStatus,  " & _
                       "tblJrnv.VoucherNumber, " & _
                       "tblJrnv.JournalDate,  " & _
                       "tblJrnvDet.RefType, " & _
                       "tblJrnvDet.Currency, " & _
                       "tblJrnvDet.CreditBase, " & _
                       "tblJrnvDet.DebitBase, " & _
                       "tblJrnvDet.LedgerCode, " & _
                        "tblJrnvDet.LedgerName, " & _
                       "tblJrnvDet.SubLedgerCode, " & _
                       "tblJrnvDet.Description " & _
               "FROM tblJrnv LEFT OUTER JOIN " & _
                       "tblJrnvDet ON  " & _
                       "tblJrnv.VoucherNumber = tblJrnvDet.VoucherNumber "

        sqlstr = sqlstr & _
                    " WHERE tblJrnvDet.RefType = '" & txtInvoiceNo.Text & "' "

        'sqlstr = sqlstr & _
        '      " and tblJrnvDet.sub = 'SALES ORDER'"


        SqlDSJournal.SelectCommand = sqlstr

        'SELECT tblsalesdetail.InvoiceNumber as VoucherNumber,tblsalesdetail.Description as Description,tblsalesdetail.sourceref as Reference,tblsalesdetail.appliedbase as Amount,if(doctype ='ARIN','SALES ORDER' ,'CN') as Type FROM tblsalesdetail,tblsales where tblsales.invoicenumber=tblsalesdetail.invoicenumber and subcode='service' and reftype=@RecordNo ORDER BY VoucherNumber

        'SqlDSContractNo.DataBind()
        'gvPopUpContractNo.DataBind()
        'updPanelInvoice.Update()

        SqlDSJournal.DataBind()
        GrdJournalView.DataBind()
        updPanelInvoice.Update()
        'Session.Add("customerfrom", "Service")

        'If GrdJournalView.Rows.Count = 0 Then
        '    lblAlertTransactions.Text = "THERE ARE NO TRANSACTIONS FOR THIS SALES ORDER"

        'Else
        '    lblAlertTransactions.Text = ""

        'End If

        mdlPopUpJournalView.Show()
    End Sub

    Protected Sub ddlViewServiceRecs_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlViewServiceRecs.SelectedIndexChanged

        SqlDSSalesDetail.SelectCommand = "select SalesOrderNumber, SubCode, CostCode, RefType, Description, Comments, Quantity, UnitMS, UnitBase, ValueBase, AppliedBase, GST, GSTBase, LedgerCode, LedgerName, LocationID, SalesOrderType,ItemDescription, ServiceStatus, UnitOriginal, TotalPrice, Discp, DiscAmount, GSTRate, BillingFrequency, ServiceBy, RcnoServiceRecord, Rcno, ServiceDate, ItemCode from tblSalesDetail where InvoiceNumber = '" & txtInvoiceNo.Text & "' Limit " & ddlViewServiceRecs.Text
        'grvBillingDetailsNew.PageSize = Convert.ToInt16(ddlViewServiceRecs.SelectedItem.Text)
        grvBillingDetailsNew.DataSourceID = "SqlDSSalesDetail"
        grvBillingDetailsNew.DataBind()

        lbltotalservices.Text = grvBillingDetailsNew.Rows.Count & " out of " & txtTotDetRec.Text
        UpdatePanel5.Update()
    End Sub

   
    Protected Sub chkGSTInclusive_CheckedChanged(sender As Object, e As EventArgs) Handles chkGSTInclusive.CheckedChanged
        CalculatePriceGStInclusive()
    End Sub

    Protected Sub btnConfirmNoUpdateServiceRecord_Click(sender As Object, e As EventArgs) Handles btnConfirmNoUpdateServiceRecord.Click
        Try
            'Dim lRowNo As Long
            'lRowNo = 0
            'lRowNo = Session("AmountForupdateRowNo")
            'Dim TextBoxBillamt As TextBox = CType(grvBillingDetails.Rows(lRowNo).Cells(0).FindControl("txtPricePerUOMGV"), TextBox)
            'Dim TextBoxOriginalBillAmount As TextBox = CType(grvBillingDetails.Rows(lRowNo).Cells(0).FindControl("txtOriginalBillAmountGV"), TextBox)

            'TextBoxBillamt.Text = TextBoxOriginalBillAmount.Text
            'updpnlServiceRecs.Update()

            grvBillingDetailsdiv.Focus()
        Catch ex As Exception
            lblAlert.Text = ex.Message.ToString
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnConfirmNoUpdateServiceRecord_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub grvBillingDetails_SelectedIndexChanged(sender As Object, e As EventArgs) Handles grvBillingDetails.SelectedIndexChanged

    End Sub

    Protected Sub btnSearchII_Click(sender As Object, e As EventArgs) Handles btnSearchII.Click
        btnShowRecordsII_Click(sender, e)
    End Sub

    Protected Sub btnCNDN_Click(sender As Object, e As EventArgs) Handles btnCNDN.Click
        Try
            'If Convert.ToDecimal(txtBalanceBase.Text) = 0.0 Then
            Session("cnfrom") = "invoice"

            If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                Session("invoiceno") = txtInvoiceNo.Text
            End If

            If String.IsNullOrEmpty(txtInvoiceNo.Text) = False Then
                'Session("contractno") = txtContractNo.Text
                'txt.Text = SQLDSContract.SelectCommand
                Session("gridsqlinv") = txt.Text
                Session("strcondition") = txtCondition.Text
                Session("rcnoinv") = txtRcno.Text
                Session("AccountId") = txtAccountIdBilling.Text
                Session("AccountName") = txtAccountName.Text
                Session("ContactType") = ddlContactType.Text
                Session("CompanyGroup") = txtCompanyGroup.Text
                Session("Salesman") = ddlSalesmanBilling.Text
                Session("fromtext") = txtFrom2.Text
                '''''''''''''''''''''''''''''
            End If

            Response.Redirect("CN.aspx", False)
            'End If
        Catch ex As Exception
            Dim exstr As String
            exstr = ex.Message.ToString
            lblAlert.Text = exstr
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnCNDN_Click", ex.Message.ToString, "")
            Exit Sub
        End Try
    End Sub

    Protected Sub btnRecalculate_Click(sender As Object, e As EventArgs) Handles btnRecalculate.Click
        Try
            CType(Me.Master, MasterPage).UpdateInvoiceBal(txtInvoiceNo.Text)

            '' start
            'Dim lTotalReceipt As Decimal
            'Dim lInvoiceAmount As Decimal
            'Dim lTotalcn As Decimal
            'lTotalReceipt = 0.0
            'lInvoiceAmount = 0.0
            'lTotalcn = 0.0
            ''Get Item desc, price Id

            'Dim conn As MySqlConnection = New MySqlConnection()

            'conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            'conn.Open()
            'Dim command1 As MySqlCommand = New MySqlCommand

            ''command1.CommandType = CommandType.Text

            ''command1.CommandText = "SELECT AppliedBase FROM tblSales where InvoiceNumber = '" & txtInvoiceNo.Text & "'"
            ''command1.Connection = conn

            ''Dim dr1 As MySqlDataReader = command1.ExecuteReader()
            ''Dim dt1 As New DataTable
            ''dt1.Load(dr1)

            ''If dt1.Rows.Count > 0 Then
            ''    lInvoiceAmount = dt1.Rows(0)("AppliedBase").ToString
            ''End If


            ' '''''''''''''''''''''
            'Dim commandReceipt As MySqlCommand = New MySqlCommand
            'commandReceipt.CommandType = CommandType.Text

            'commandReceipt.CommandText = "UPDATE tblSales SET ReceiptBase = (SELECT ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) FROM tblRecvDet A, tblRecv B WHERE " & _
            '      "A.ReceiptNumber=B.ReceiptNumber AND A.SubCode = 'ARIN'  AND A.RefType = tblSales.InvoiceNumber AND " & _
            '      "B.PostStatus = 'P' ) WHERE InvoiceNumber = '" & txtInvoiceNo.Text & "' "
            'commandReceipt.Connection = conn

            'commandReceipt.ExecuteNonQuery()
            'commandReceipt.Dispose()

            ' '''''''''''''''''''

            'Dim commandCN As MySqlCommand = New MySqlCommand
            'commandCN.CommandType = CommandType.Text


            'commandCN.CommandText = "SELECT  ifnull(SUM(ifnull(A.ValueBase,0)+ifnull(A.GstBase,0)),0) as totalcn FROM tblSalesDetail A, tblSales B WHERE " & _
            '    "A.InvoiceNumber=B.InvoiceNumber AND (B.DocType = 'ARCN' or B.DocType = 'ARDN')  and B.PostStatus = 'P' and A.SourceInvoice = '" & txtInvoiceNo.Text & "'"

            'commandCN.Connection = conn


            'Dim dr2 As MySqlDataReader = commandCN.ExecuteReader()
            'Dim dt2 As New DataTable
            'dt2.Load(dr2)

            'If dt2.Rows.Count > 0 Then
            '    lTotalcn = dt2.Rows(0)("totalcn").ToString
            'End If
            ''lTotalcn = lTotalcn * (-1)

            'commandCN.Dispose()
            ' ''''''''''''''''''''''''
            ' ''''''''''''''''''''''''




            ' '''''''''''''' Journal

            'Dim lTotalJV As Decimal
            'Dim commandJournal As MySqlCommand = New MySqlCommand
            'commandJournal.CommandType = CommandType.Text

            'commandJournal.CommandText = "SELECT   ifnull(SUM(ifnull(A.DebitBase,0)),0) as debitbase, ifnull(SUM(ifnull(A.CreditBase,0)),0) as creditbase  FROM tbljrnvdet A, tbljrnv B WHERE " & _
            '   "A.VoucherNumber=B.VoucherNumber AND  B.PostStatus = 'P'  and A.RefType = '" & txtInvoiceNo.Text & "' "

            'commandJournal.Connection = conn

            'Dim drJournal As MySqlDataReader = commandJournal.ExecuteReader()
            'Dim dtJournal As New DataTable
            'dtJournal.Load(drJournal)

            'If dtJournal.Rows.Count > 0 Then
            '    'If dtJournal.Rows(0)("debitbase").ToString > 0.0 Then
            '    '    lTotalJV = dtJournal.Rows(0)("debitbase").ToString
            '    'Else
            '    '    lTotalJV = dtJournal.Rows(0)("creditbase").ToString
            '    'End If
            '    lTotalJV = Convert.ToDecimal(dtJournal.Rows(0)("debitbase").ToString - dtJournal.Rows(0)("creditbase").ToString)
            'End If

            ' ''''''''''''''' Journal

            'Dim lbalance As Decimal
            'Dim command3 As MySqlCommand = New MySqlCommand
            'command3.CommandType = CommandType.Text
            'command3.CommandText = "SELECT ValueBase, GSTBase , AppliedBase , ReceiptBase, CreditBase, CreditBase FROM tblSales where InvoiceNumber = '" & txtInvoiceNo.Text & "'"

            'command3.Connection = conn
            'command3.ExecuteNonQuery()

            'Dim dr3 As MySqlDataReader = command3.ExecuteReader()
            'Dim dt3 As New DataTable
            'dt3.Load(dr3)

            'If dt3.Rows.Count > 0 Then

            '    'If String.IsNullOrEmpty(dt3.Rows(0)("ValueBase").ToString) = False Then
            '    '    lbalance = dt3.Rows(0)("ValueBase").ToString
            '    'Else
            '    '    lbalance = 0.0
            '    'End If

            '    'If String.IsNullOrEmpty(dt3.Rows(0)("GSTBase").ToString) = False Then
            '    '    lbalance = lbalance + dt3.Rows(0)("GSTBase").ToString
            '    'Else
            '    '    'lbalance = 0.0
            '    'End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("AppliedBase").ToString) = False Then
            '        lbalance = dt3.Rows(0)("AppliedBase").ToString
            '    Else
            '        lbalance = 0.0
            '    End If

            '    If String.IsNullOrEmpty(dt3.Rows(0)("ReceiptBase").ToString) = False Then
            '        lbalance = lbalance - dt3.Rows(0)("ReceiptBase").ToString
            '    Else
            '        'lbalance = 0.0
            '    End If

            '    lbalance = lbalance + lTotalcn + lTotalJV
            '    'If String.IsNullOrEmpty(dt3.Rows(0)("CreditBase").ToString) = False Then
            '    '    lbalance = lbalance - dt3.Rows(0)("CreditBase").ToString
            '    'Else
            '    '    'lbalance = 0.0
            '    'End If

            'End If

            ' ''''''''''' Journal


            ' ''''''''''''''''

            ''Dim commandCNUpdate As MySqlCommand = New MySqlCommand
            ''commandCNUpdate.CommandType = CommandType.Text

            ''commandCNUpdate.CommandText = "UPDATE tblSales SET CreditBase = '" & lTotalcn * (-1) & "' WHERE InvoiceNumber = '" & txtInvoiceNo.Text & "'"
            ''commandCNUpdate.Connection = conn

            ' ''command4.Connection = conn
            ''commandCNUpdate.ExecuteNonQuery()
            ''commandCNUpdate.Dispose()

            ' '''''''''''''''''''

            'Dim lcredbal As Decimal
            'lcredbal = 0.0
            'lcredbal = (lTotalcn + lTotalJV) * (-1)

            'Dim command4 As MySqlCommand = New MySqlCommand
            'command4.CommandType = CommandType.Text

            'Dim qry4 As String = "Update tblSales Set CreditBase = " & lcredbal & ", BalanceBase = " & lbalance & " where InvoiceNumber = @InvoiceNumber "

            'command4.CommandText = qry4
            'command4.Parameters.Clear()

            'command4.Parameters.AddWithValue("@InvoiceNumber", txtInvoiceNo.Text)
            'command4.Connection = conn
            'command4.ExecuteNonQuery()

            ''    'End: Update tblSales

            ''End
            'conn.Close()
            'conn.Dispose()

            'command1.Dispose()
            ''command2.Dispose()
            ''commandCN.Dispose()
            'command3.Dispose()
            'command4.Dispose()

            ''dt1.Dispose()
            'dt2.Dispose()
            'dt3.Dispose()

            ''dr1.Close()
            'dr2.Close()
            'dr3.Close()


            SQLDSInvoice.SelectCommand = txt.Text
            SQLDSInvoice.DataBind()
            GridView1.DataBind()
            updPanelInvoice.Update()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "ReCalculate", ex.Message.ToString, "")
            Exit Sub
        End Try



        '===============================


    End Sub

    Protected Sub btnConfirmYesUpdateGSTCode_Click(sender As Object, e As EventArgs) Handles btnConfirmYesUpdateGSTCode.Click
        Dim sql As String
        sql = ""
        sql = "Select TaxRatePct from tbltaxtype where TaxType = '" & txtGST.Text & "'"

        Dim conn As MySqlConnection = New MySqlConnection()

        conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
        conn.Open()

        Dim command1 As MySqlCommand = New MySqlCommand
        command1.CommandType = CommandType.Text
        command1.CommandText = sql
        command1.Connection = conn

        Dim dr As MySqlDataReader = command1.ExecuteReader()

        Dim dt As New DataTable
        dt.Load(dr)

        If dt.Rows.Count > 0 Then
            If dt.Rows(0)("TaxRatePct").ToString <> "" Then : txtGST1.Text = dt.Rows(0)("TaxRatePct").ToString : End If
            txtGSTAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            txtNetAmount.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)).ToString("N2")
        End If

        txtGSTSelected.Text = txtGST.Text

        UpdateGStCode()

        conn.Close()
        conn.Dispose()
        command1.Dispose()
        dt.Dispose()
    End Sub

    Protected Sub btnConfirmNoUpdateGSTCode_Click(sender As Object, e As EventArgs) Handles btnConfirmNoUpdateGSTCode.Click
        txtGST.Text = txtGSTSelected.Text
    End Sub


    Private Sub UpdateGStCode()
        Try

            Dim TotalAmt As Decimal = 0
            Dim TotalDiscAmt As Decimal = 0
            Dim TotalWithDiscAmt As Decimal = 0
            Dim TotalGSTAmt As Decimal = 0
            Dim TotalAmtWithGST As Decimal = 0
            Dim GSTableGVB As Decimal = 0.0
            Dim GSTGVB As Decimal = 0.0
            Dim GSTGV As Decimal = 0.0

            Dim lGSTadjustedRecNo As Integer
            Dim lGSTadjustedRecNoNew As Integer

            Dim totalrecords As Integer = 0

            Dim GSTGVBNew As Decimal = 0.0
            Dim GSTGVNew As Decimal = 0.0


            lGSTadjustedRecNo = 0
            lGSTadjustedRecNoNew = 0

            'If txtMode.Text = "EDIT" Then
            'txtInvoiceAmount.Text = "0.00"
            'txtDiscountAmount.Text = "0.00"
            'txtAmountWithDiscount.Text = "0.00"
            'txtGSTAmount.Text = "0.00"
            'txtNetAmount.Text = "0.00"
            'End If

            ''''''''''''''''''''''''''''''''start Modification'''''''''''''''''''''''''''''''''''''

            SetRowDataBillingDetailsRecs()
            Dim table As DataTable = TryCast(ViewState("CurrentTableBillingDetailsRec"), DataTable)
            Dim GSTable As Decimal = 0.0

            If (table.Rows.Count > 0) Then

                For i As Integer = (table.Rows.Count) - 1 To 0 Step -1
                    Dim TextBoxItemType As DropDownList = CType(grvBillingDetails.Rows(i).Cells(7).FindControl("txtItemTypeGV"), DropDownList)

                    If TextBoxItemType.SelectedValue <> "-1" Then

                        Dim TextBoxTaxCode As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTaxTypeGV"), TextBox)
                        Dim TextBoxGSTPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTPercGV"), TextBox)

                        Dim TextBoxGSTAmt As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
                        Dim TextBoxTotalPriceWithGST As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)
                        'Dim TextBoxDiscPerc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtDiscPercGV"), TextBox)
                        Dim TextBoxPriceWithDisc As TextBox = CType(grvBillingDetails.Rows(i).Cells(0).FindControl("txtPriceWithDiscGV"), TextBox)

                        TextBoxTaxCode.Text = txtGST.Text
                        TextBoxGSTPerc.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        TextBoxGSTAmt.Text = (Convert.ToDecimal(TextBoxPriceWithDisc.Text) * Convert.ToDecimal(TextBoxGSTPerc.Text) * 0.01).ToString("N2")
                        TextBoxTotalPriceWithGST.Text = (Convert.ToDecimal(TextBoxPriceWithDisc.Text) + Convert.ToDecimal(TextBoxGSTAmt.Text)).ToString("N2")

                        GSTGV = GSTGV + Convert.ToDecimal(TextBoxGSTAmt.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next i
            End If



            '' start of GVB
            Dim gvbRecords, j As Long
            gvbRecords = 0

            If txtMode.Text = "EDIT" Then

                gvbRecords = grvBillingDetailsNew.Rows.Count()

                For j = gvbRecords - 1 To 0 Step -1


                    Dim lblidItemTypeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtItemTypeGVB"), TextBox)
                    Dim lblidOtherCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).FindControl("txtOtherCodeGVB"), TextBox)


                    If String.IsNullOrEmpty(lblidOtherCodeGVB.Text) = False Then

                        Dim TextBoxTaxCodeGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTaxTypeGVB"), TextBox)
                        Dim TextBoxGSTPercGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTPercGVB"), TextBox)
                        Dim TextBoxGSTAmtGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)
                        Dim TextBoxTotalPriceWithGSTGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
                        Dim TextBoxPriceWithDiscGVB As TextBox = CType(grvBillingDetailsNew.Rows(j).Cells(0).FindControl("txtPriceWithDiscGVB"), TextBox)


                        If String.IsNullOrEmpty(TextBoxGSTAmtGVB.Text) = True Then
                            TextBoxGSTAmtGVB.Text = "0.00"
                        End If

                        If String.IsNullOrEmpty(TextBoxTotalPriceWithGSTGVB.Text) = True Then
                            TextBoxTotalPriceWithGSTGVB.Text = "0.00"
                        End If


                        TextBoxTaxCodeGVB.Text = txtGST.Text
                        TextBoxGSTPercGVB.Text = Convert.ToDecimal(txtGST1.Text).ToString("N2")

                        TextBoxGSTAmtGVB.Text = (Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text) * Convert.ToDecimal(TextBoxGSTPercGVB.Text) * 0.01).ToString("N2")
                        TextBoxTotalPriceWithGSTGVB.Text = (Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text) + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)).ToString("N2")


                        'If TextBoxTaxCodeGVB.Text = "SR" Then
                        '    GSTableGVB = GSTableGVB + Convert.ToDecimal(TextBoxPriceWithDiscGVB.Text)
                        '    If lGSTadjustedRecNoNew = 0 And lGSTadjustedRecNo = 0 Then
                        '        lGSTadjustedRecNoNew = j
                        '    End If
                        'End If

                        GSTGVBNew = GSTGVBNew + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'txtInvoiceAmount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) + Convert.ToDecimal(TextBoxTotalPriceGVB.Text)).ToString("N2")
                        'txtDiscountAmount.Text = (Convert.ToDecimal(txtDiscountAmount.Text) + Convert.ToDecimal(TextBoxDiscAmountGVB.Text)).ToString("N2")
                        'txtAmountWithDiscount.Text = (Convert.ToDecimal(txtInvoiceAmount.Text) - Convert.ToDecimal(txtDiscountAmount.Text)).ToString("N2")
                        'GSTGVB = GSTGVB + Convert.ToDecimal(TextBoxGSTAmtGVB.Text)

                        'totalrecords = totalrecords + 1
                    End If
                Next
            End If

            txtTotalGSTAmt.Text = (Convert.ToDecimal(GSTGV + GSTGVBNew)).ToString("N2")
            txtTotalWithGST.Text = (Convert.ToDecimal(txtAmountWithDiscount.Text) + txtTotalGSTAmt.Text).ToString("N2")

            ''totalrecords = totalrecords + gvbRecords

            '' '' end of GVB
            ' ''''''''''''''''''''''''''''''''''''end Modification ''''''''''''''''''''''''''''''''


            ''txtGSTAmount.Text = Convert.ToDecimal(GSTGVB + GSTGV).ToString("N2")

            'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtAmountWithDiscount.Text) * Convert.ToDecimal(txtGST1.Text) * 0.01).ToString("N2")
            'txtNetAmount.Text = Convert.ToDecimal(txtAmountWithDiscount.Text) + Convert.ToDecimal(txtGSTAmount.Text)

            ''txtGSTAmount.Text = Convert.ToDecimal(GSTGVBNew + GSTGVNew).ToString("N2")
            ' ''''''''''''''''''''''''''

            'Dim GSTDiff As Decimal
            'GSTDiff = 0.0

            'Dim GSTCalc As Decimal
            'GSTCalc = 0.0
            ''GSTCalc = Convert.ToDecimal((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01).ToString("N2")

            'GSTCalc = GSTGVB + GSTGV
            'GSTDiff = Convert.ToDecimal(txtGSTAmount.Text) - GSTCalc
            ''GSTDiff = ((GSTable + GSTableGVB) * Convert.ToDecimal(txtTaxRatePct.Text) * 0.01) - Convert.ToDecimal(txtGSTAmount.Text)

            'If GSTDiff <> 0.0 Then

            '    'txtGSTAmount.Text = Convert.ToDecimal(Convert.ToDecimal(txtGSTAmount.Text) + GSTDiff.ToString("N2")).ToString("N2")

            '    If lGSTadjustedRecNo > 0 Then
            '        Dim adjGST As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtGSTAmtGV"), TextBox)
            '        Dim adjTotal As TextBox = CType(grvBillingDetails.Rows(lGSTadjustedRecNo).Cells(0).FindControl("txtTotalPriceWithGSTGV"), TextBox)

            '        adjGST.Text = Convert.ToDecimal(Convert.ToDecimal(adjGST.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotal.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotal.Text).ToString("N2") + GSTDiff).ToString("N2")

            '    ElseIf lGSTadjustedRecNoNew > 0 Then
            '        Dim adjGSTNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtTotalPriceWithGSTGVB"), TextBox)
            '        Dim adjTotalNew As TextBox = CType(grvBillingDetailsNew.Rows(lGSTadjustedRecNoNew).Cells(0).FindControl("txtGSTAmtGVB"), TextBox)

            '        adjGSTNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjGSTNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '        adjTotalNew.Text = Convert.ToDecimal(Convert.ToDecimal(adjTotalNew.Text).ToString("N2") + GSTDiff).ToString("N2")
            '    End If

            '    txtTotalGSTAmt.Text = (Convert.ToDecimal(txtTotalGSTAmt.Text) + GSTDiff).ToString("N2")
            '    txtTotalWithGST.Text = (Convert.ToDecimal(txtTotalWithGST.Text) + GSTDiff).ToString("N2")
            'End If

            ''''''''''''''''''''''''''''


            UpdatePanel3.Update()

            UpdatePanel2.Update()
            UpdatePanel5.Update()
            updpnlBillingDetails.Update()

            updPanelSave.Update()

            table.Dispose()
        Catch ex As Exception
            'Dim exstr As String
            'exstr = ex.Message.ToString
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)

            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION UpdateGStCode", ex.Message.ToString, "")
        End Try
    End Sub

    'Protected Sub DownloadFile(ByVal sender As Object, ByVal e As EventArgs)
    '    Try
    '        Dim filePath As String = CType(sender, LinkButton).CommandArgument
    '        filePath = Server.MapPath("~/Uploads/Service/") + filePath
    '        ' lblMessage.Text = filePath
    '        'Return

    '        Response.ContentType = ContentType
    '        Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
    '        Response.WriteFile(filePath)
    '        Response.End()
    '    Catch ex As Exception
    '        ' InsertIntoTblWebEventLog("DownloadFile", ex.Message.ToString, txtTechRcNo.Text)
    '        'ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try
    'End Sub

    Protected Sub btnImgDownloadAll_Click(sender As Object, e As ImageClickEventArgs) Handles btnImgDownloadAll.Click
        Try
            Dim conn As MySqlConnection = New MySqlConnection()

            conn.ConnectionString = ConfigurationManager.ConnectionStrings("sitadataConnectionString").ConnectionString
            conn.Open()
            Dim command1 As MySqlCommand = New MySqlCommand

            command1.CommandType = CommandType.Text

            Dim qry As String = "SELECT recordno,filename,servicedate,filenamelink,filedescription FROM tblfileupload LEFT JOIN TBLSERVICErecord on tblfileupload.fileref = tblservicerecord.recordno"
            qry = qry + " where manualreport='Y' and fileref in (SELECT RefType FROM tblSalesOrderdetail where SalesOrderNumber = '" + txtInvoiceNo.Text + "');"


            command1.CommandText = qry

            command1.Connection = conn

            Dim dr As MySqlDataReader = command1.ExecuteReader()
            Dim dt As New DataTable
            dt.Load(dr)

            If dt.Rows.Count > 0 Then
                For i As Integer = 0 To dt.Rows.Count - 1
                    Dim filePath As String = dt.Rows(i)("FileNameLink").ToString

                    Label26.Text = Label26.Text + " " + filePath

                    filePath = Server.MapPath("~/Uploads/Service/") + filePath
                    ' lblMessage.Text = filePath
                    'Return

                    Response.ContentType = ContentType
                    Response.AppendHeader("Content-Disposition", ("attachment; filename=" + Path.GetFileName(filePath)))
                    Response.WriteFile(filePath)
                    Response.End()

                Next
            End If
            dt.Clear()
            dr.Close()
            command1.Dispose()

        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnImgDownloadAll_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub btnConfirmNoContractTE_Click(sender As Object, e As EventArgs) Handles btnConfirmNoContractTE.Click
        Dim textbox1 As TextBox = CType(grvBillingDetails.Rows(txtContractTE.Text).Cells(0).FindControl("txtContractNoGV"), TextBox)
        textbox1.Text = ""
    End Sub

    'Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
    '    Try

    '        If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
    '            lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
    '            Return
    '        End If

    '        lblMessage.Text = ""
    '        'lblAlertSchDate.Text = ""
    '        lblAlert.Text = ""

    '        Dim btn1 As Button = DirectCast(sender, Button)

    '        Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
    '        Dim rowindex1 As Integer = xrow1.RowIndex

    '        'MakeMeNull()
    '        Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

    '        txtRcno.Text = lblidRcno
    '        'RetrieveData()

    '        GridView1.SelectedIndex = rowindex1

    '        'Dim lblStatus As String = GridView1.Rows(rowindex1).Cells(2).Text
    '        Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(7).Text
    '        'txtRcno.Text = ""

    '        'rcno = DirectCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text
    '        'txtRcno.Text = rcno.ToString()

    '        lblMessage.Text = ""
    '        'lblAlertSchDate.Text = ""
    '        lblAlert.Text = ""
    '        'txtGridIndex.Text = rowindex1.ToString

    '        sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
    '        sqlDSViewEditHistory.DataBind()

    '        grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
    '        grdViewEditHistory.DataBind()

    '        mdlViewEditHistory.Show()

    '    Catch ex As Exception
    '        InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, "")
    '        lblAlert.Text = ex.Message.ToString
    '        ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
    '    End Try

    'End Sub


    Protected Sub btnEditHistory_Click(sender As Object, e As EventArgs)
        Try

            If txtMode.Text = "Add" Or txtMode.Text = "Edit" Or txtMode.Text = "Copy" Then
                lblAlert.Text = "RECORD IS IN ADD/EDIT MODE, CLICK SAVE OR CANCEL TO VIEW HISTORY"
                Return
            End If

            lblMessage.Text = ""
            lblAlert.Text = ""

            Dim btn1 As Button = DirectCast(sender, Button)

            Dim xrow1 As GridViewRow = CType(btn1.NamingContainer, GridViewRow)
            Dim rowindex1 As Integer = xrow1.RowIndex


            Dim lblidRcno As String = TryCast(GridView1.Rows(rowindex1).FindControl("Label1"), Label).Text

            txtRcno.Text = lblidRcno

            GridView1.SelectedIndex = rowindex1

            Dim strRecordNo As String = GridView1.Rows(rowindex1).Cells(7).Text
            txtLogDocNo.Text = strRecordNo
            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & strRecordNo & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()

            mdlViewEditHistory.Show()


        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "btnEditHistory_Click", ex.Message.ToString, "")
            lblAlert.Text = ex.Message.ToString
            ScriptManager.RegisterStartupScript(Me, Me.GetType(), "KeyClient", "<script> ResetScrollPosition();</Script>", False)
        End Try

    End Sub

    Protected Sub grdViewEditHistory_PageIndexChanging(sender As Object, e As GridViewPageEventArgs) Handles grdViewEditHistory.PageIndexChanging
        Try
            grdViewEditHistory.PageIndex = e.NewPageIndex

            sqlDSViewEditHistory.SelectCommand = "Select * from tblEventlog where  DocRef = '" & txtLogDocNo.Text & "' order by logdate desc"
            sqlDSViewEditHistory.DataBind()

            grdViewEditHistory.DataSourceID = "sqlDSViewEditHistory"
            grdViewEditHistory.DataBind()
            mdlViewEditHistory.Show()
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "GridView1_PageIndexChanging", ex.Message.ToString, "")
        End Try
    End Sub

    Protected Sub txtPopUpClient2_TextChanged(sender As Object, e As EventArgs) Handles txtPopUpClient2.TextChanged
        If txtPopUpClient2.Text.Trim = "" Then
            MessageBox.Message.Alert(Page, "Please enter Client Name", "str")
            Exit Sub
        End If

        Try
            '"SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc,  B.AccountID, B.ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, A.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Status = 'O' and A.Inactive = False and (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or B.accountid like '" + txtPopupClientSearch.Text + "%' or B.contactperson like '%" + txtPopupClientSearch.Text + "%') UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  C.Status = 'O' and C.Inactive = False and (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopupClientSearch.Text.Trim.ToUpper + "%"" or D.accountid like '" + txtPopupClientSearch.Text + "%' or D.contACTperson like '%" + txtPopupClientSearch.Text + "%') order by ServiceName"


            'If txtClientFrom.Text = "ImportService" Then

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    Else
            '        If ddlContactType.Text = "CORPORATE" Or ddlContactType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf ddlContactType.SelectedItem.Text = "RESIDENTIAL" Or ddlContactType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by D.AccountID,  D.LocationId, D.ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, A.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, C.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    End If


            '    txtImportService.Text = SqlDSClient.SelectCommand
            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    mdlPopUpClient.Show()
            '    txtIsPopup.Text = "Client"
            'End If

            'If txtSearch.Text = "CustomerSearch" Then

            '    If txtDisplayRecordsLocationwise.Text = "Y" Then
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where A.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    Else
            '        If txtAccountType.Text = "CORPORATE" Or txtAccountType.Text = "COMPANY" Then
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by B.AccountID,  B.LocationId, B.ServiceName"
            '        ElseIf txtAccountType.SelectedItem.Text = "RESIDENTIAL" Or txtAccountType.Text = "PERSON" Then
            '            SqlDSClient.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
            '        Else
            '            SqlDSClient.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or B.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or B.accountid like """ + txtPopUpClient.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient.Text.Trim.ToUpper + "%"" or D.Locationid like ""%" + txtPopUpClient.Text.Trim + "%"" or D.accountid like """ + txtPopUpClient.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient.Text + "%"") order by AccountID,  LocationId, ServiceName"
            '        End If
            '    End If

            '    txtCustomerSearch.Text = SqlDSClient.SelectCommand
            '    SqlDSClient.DataBind()
            '    gvClient.DataBind()
            '    mdlPopUpClient.Show()
            '    txtIsPopup.Text = "Client"

            'End If

            If txtSearch.Text = "InvoiceSearch" Then

                If txtDisplayRecordsLocationwise.Text = "Y" Then
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or B.accountid like ""%" + txtPopUpClient2.Text.Trim + "%"" or B.CompanyID like '%" + txtPopUpClient2.Text + "%' or B.BillContact1Svc like '%" + txtPopUpClient2.Text.Trim + "%') order by B.AccountID,  B.LocationId, B.ServiceName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc, D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (upper(D.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient2.Text.Trim + "%"" or D.PersonID  like ""%" + txtPopUpClient2.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient2.Text.Trim + "%"") order by AccountID,  LocationId, ServiceName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, B.SalesmanSvc,B.ARTermSvc, B.BillStreetSvc, B.BillBuildingSvc, B.BillCitySvc, B.BillStateSvc, B.BillCountrySvc, B.BillPostalSvc, B.BillContact1Svc, B.AccountID, B.CompanyID as ID, B.LocationId, B.ServiceName, B.BillingNameSvc, B.Address1, A.AddPostal, B.BillAddressSvc, B.BillPostalSvc, B.ContactPerson, B.telephone, B.Mobile, B.CompanyGroupD, B.Location, B.ContractGroup From tblCompany A Left join tblCompanyLocation B on A.Accountid = B.Accountid  where B.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and   (A.Accountid is not null and A.Accountid <> '') and  (B.Accountid is not null and B.Accountid <> '') and (upper(B.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or B.accountid like """ + txtPopUpClient2.Text + "%"" or B.CompanyID like ""%" + txtPopUpClient2.Text + "%"" or B.BillContact1Svc like ""%" + txtPopUpClient2.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, D.SalesmanSvc,D.ARTermSvc, D.BillStreetSvc, D.BillBuildingSvc, D.BillCitySvc, D.BillStateSvc, D.BillCountrySvc, D.BillPostalSvc, D.BillContact1Svc, D.AccountID, D.PersonID as ID, D.LocationId, D.ServiceName, D.BillingNameSvc, D.Address1, D.AddPostal, D.BillAddressSvc, D.BillPostalSvc, D.ContactPerson, D.telephone, D.Mobile, D.PersonGroupD as CompanyGroupD, D.Location, D.ContractGroup From tblperson C Left join tblPersonLocation D on C.Accountid = D.Accountid  where D.Location in (select locationID from tblgroupaccesslocation where GroupAccess = '" & txtGroupAuthority.Text & "') and  (C.Accountid is not null and C.Accountid <> '') and  (C.Accountid is not null and C.Accountid <> '') and (upper(D.ServiceName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or D.accountid like """ + txtPopUpClient2.Text + "%"" or D.PersonID  like ""%" + txtPopUpClient2.Text + "%"" or D.BillContact1Svc like ""%" + txtPopUpClient2.Text + "%"") order by AccountID,  LocationId, ServiceName"
                    End If
                Else
                    If ddlContactTypeSearch.Text = "CORPORATE" Or ddlContactTypeSearch.Text = "COMPANY" Then
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup, A.BillAddress1, A.BillPostal, A.BillContactPerson, A.AccountID,  A.BillingName From tblCompany A where  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or A.accountid like ""%" + txtPopUpClient2.Text.Trim + "%""  or A.BillContactPerson like '%" + txtPopUpClient2.Text.Trim + "%') order by A.AccountID, A.BillingName"
                    ElseIf ddlContactTypeSearch.SelectedItem.Text = "RESIDENTIAL" Or ddlContactTypeSearch.Text = "PERSON" Then
                        SqlDSClient2.SelectCommand = "SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup, C.BillAddress1, C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C where  (upper(C.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or C.accountid like ""%" + txtPopUpClient2.Text.Trim + "%"" or C.BillContactPerson like ""%" + txtPopUpClient2.Text.Trim + "%"") order by AccountID,  BillingName"
                    Else
                        SqlDSClient2.SelectCommand = "SELECT 'COMPANY' as AccountType,  A.CompanyGroup,  A.BillAddress1,  A.BillPostal, A.BillContactPerson, A.AccountID, A.BillingName from tblCompany A  where  (A.Accountid is not null and A.Accountid <> '') and (upper(A.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or A.accountid like """ + txtPopUpClient2.Text + "%"" or A.BillContactPerson like ""%" + txtPopUpClient2.Text + "%"") UNION  SELECT 'PERSON' as AccountType,   C.PersonGroup as CompanyGroup,  C.BillAddress1,  C.BillPostal, C.BillContactPerson, C.AccountID, C.BillingName From tblperson C  where  (C.Accountid is not null and C.Accountid <> '')  and (upper(C.BillingName) Like ""%" + txtPopUpClient2.Text.Trim.ToUpper + "%"" or C.accountid like """ + txtPopUpClient2.Text + "%"" or C.BillingName like ""%" + txtPopUpClient2.Text + "%"") order by AccountID,  BillingName"
                    End If
                End If

                txtInvoiceSearch.Text = SqlDSClient2.SelectCommand
                SqlDSClient2.DataBind()
                gvClient2.DataBind()
                mdlPopUpClient2.Show()
                txtIsPopup.Text = "Client2"

            End If
        Catch ex As Exception
            InsertIntoTblWebEventLog("SALES ORDER - " + Session("UserID"), "FUNCTION txtPopUpClient_TextChanged", ex.Message.ToString, "")
        End Try
        'txtPopUpClient.Text = "Search Here for AccountID or Client Name or Contact Person"
    End Sub
End Class
